2016-07-20 19:43:56,475 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:43:56,477 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:43:56,477 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:43:56,477 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:43:56,478 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:43:56,478 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:43:56,478 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:43:56,478 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:43:56,478 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:43:56,478 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-20 19:43:56,478 htmlparser.py[line: 28] INFO: Data 哎哟~出错啦~
2016-07-20 19:43:56,479 htmlparser.py[line: 25] INFO: End tag: title
2016-07-20 19:43:56,479 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:43:56,479 htmlparser.py[line: 25] INFO: End tag: head
2016-07-20 19:43:56,479 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:43:56,479 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-20 19:43:56,479 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:43:56,480 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:43:56,480 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:43:56,480 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:43:56,480 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:43:56,480 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:43:56,480 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:43:56,480 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:43:56,480 htmlparser.py[line: 28] INFO: Data 
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        
2016-07-20 19:43:56,480 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:43:56,481 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:43:56,481 htmlparser.py[line: 25] INFO: End tag: body
2016-07-20 19:43:56,481 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:43:56,481 htmlparser.py[line: 25] INFO: End tag: html
2016-07-20 19:43:56,481 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:43:56,481 wechatno_wemall.py[line: 233] INFO: [['', '\r\n\r\n\r\n\r\n\r\n\r\n'], ['', '\r\n'], ['link', '  \r\n'], ['link', '\r\n'], ['html', '\r\n    '], ['head', '\r\n        '], ['meta', '\r\n        '], ['meta', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['title', '哎哟~出错啦~'], ['title', '\r\n    '], ['title', '\r\n    '], ['body', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        Zepto(function($){\r\n\t\t\tfunction myAlert(content) {\r\n\t\t    \t$.dialog({\r\n\t\t    \t\tcontent : content,\r\n\t\t    \t\ttitle : "alert"\r\n\t\t    \t});\r\n\t\t    }\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tmyAlert("噢...出错了!请等待管理员处理,稍后重试");\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n        });\r\n        '], ['script', '\r\n    '], ['script', '\r\n'], ['script', '\r\n']]
2016-07-20 19:43:56,481 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-20 19:43:56,481 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-20 19:43:56" WHERE executed_history_id = 20160720194355 AND testcase_id = 102 AND step_id = 104 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:43:56,483 testcase.py[line: 101] INFO: 测试用例[id=102, name=test-n-点击立即购买按钮]执行成功
2016-07-20 19:43:56,484 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-20 19:43:56,484 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-20 19:43:56" WHERE executed_history_id = 20160720194355 and testcase_id = 102 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:43:56,485 testsuite.py[line: 74] INFO: 测试套件[id=79 ,name=微商城-模拟点击页面跳转]已执行完
2016-07-20 19:43:56,486 main.py[line: 229] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-07-20 19:43:56,486 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-07-20 19:43:56,486 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20160720194355',)
2016-07-20 19:43:56,488 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-07-20 19:43:56,488 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20160720194355')
2016-07-20 19:43:56,489 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-07-20 19:43:56,489 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20160720194355')
2016-07-20 19:43:56,490 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-07-20 19:43:56,490 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20160720194355')
2016-07-20 19:43:56,491 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-07-20 19:43:56,491 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20160720194355')
2016-07-20 19:43:56,492 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-07-20 19:43:56,492 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160720194355',)
2016-07-20 19:43:56,494 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]的测试用例执行结果
2016-07-20 19:43:56,494 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160720194355')
2016-07-20 19:43:56,496 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_wecharno, testplan：无计划]的测试用例运行结果到测试报告
2016-07-20 19:43:56,496 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-07-20 19:43:56,497 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160720194355',)
2016-07-20 19:43:56,503 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]已运行的测试用例
2016-07-20 19:43:56,504 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160720194355')
2016-07-20 19:43:56,506 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=80]步骤运行结果
2016-07-20 19:43:56,506 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 80, '20160720194355')
2016-07-20 19:43:56,508 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=102]步骤运行结果
2016-07-20 19:43:56,509 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 102, '20160720194355')
2016-07-20 19:43:56,510 htmlreporter.py[line: 177] INFO: 正在设置测试报告结果文件名
2016-07-20 19:43:56,510 htmlreporter.py[line: 187] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20160720194355.html
2016-07-20 19:43:56,510 htmlreporter.py[line: 180] INFO: 正在生成测试报告
2016-07-20 19:43:56,512 main.py[line: 252] INFO: 生成测试报告成功
2016-07-20 19:43:57,790 main.py[line: 259] INFO: E:\\Projects\\report\\test_report20160720194355.html
2016-07-20 19:43:57,790 main.py[line: 262] INFO: 正在发送测试报告邮件...
2016-07-20 19:43:57,791 main.py[line: 266] INFO: 发送邮件成功
2016-07-20 19:45:06,672 globalpy.py[line: 14] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-07-20 19:45:06,681 globalpy.py[line: 17] INFO: 正在初始化数据库[名称：SAOFUDB]对象
2016-07-20 19:45:06,686 globalpy.py[line: 20] INFO: 正在获取testlink
2016-07-20 19:45:06,737 main.py[line: 60] INFO: 正在创建测试用例报告报表
2016-07-20 19:45:06,737 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-07-20 19:45:06,741 main.py[line: 63] INFO: 正在创建测试步骤报告报表
2016-07-20 19:45:06,741 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-07-20 19:45:06,767 main.py[line: 66] INFO: 正在读取运行模式配置
2016-07-20 19:45:06,769 main.py[line: 187] INFO: 按套件运行测试
2016-07-20 19:45:06,769 main.py[line: 189] INFO: 已获取配置的套件id列表：[79]
2016-07-20 19:45:07,109 main.py[line: 205] INFO: 正在读取套件[id=79，name=微商城-模拟点击页面跳转]的协议，host，端口配置...
2016-07-20 19:45:07,111 main.py[line: 223] INFO: 正在执行测试套件[id=79 ,name=微商城-模拟点击页面跳转]
2016-07-20 19:45:07,111 testsuite.py[line: 42] INFO: 正在获取套件[id=79，name=微商城-模拟点击页面跳转]的测试用例...
2016-07-20 19:45:07,394 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-20 19:45:07,394 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194506', '80', 'test-n-点击商品', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-20 19:45:07,395 testsuite.py[line: 63] INFO: 开始执行测试用例[id=80，name=test-n-点击商品]
2016-07-20 19:45:07,395 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-20 19:45:07,395 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194506', '80', 'test-n-点击商品', '无计划', 'pj_wecharno', 82, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"Goods","function":"test_click_goods","method":"get","url":"/goods/item?","params":{"id":26838, "serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-20 19:45:07,396 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-20 19:45:07,397 casestep.py[line: 64] INFO: 调用的方法为：Goods.test_click_goods
2016-07-20 19:45:07,397 wechatno_wemall.py[line: 89] INFO: 正在发起GET请求...
2016-07-20 19:45:07,397 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/goods/item?id=26838&serial=10549840601068216320
2016-07-20 19:45:07,397 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-20 19:45:07,557 wechatno_wemall.py[line: 94] INFO: 正在解析返回结果:





<!DOCTYPE html>
<link rel="stylesheet" href="/css/bind/banner.css?v=3.4.0-f5bd5" />  
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport"
	content="width=device-width, initial-scale=1, user-scalable=no">
<meta name="format-detection" content="telephone=no">
<meta http-equiv="Expires" CONTENT="0">
<meta http-equiv="Cache-Control" CONTENT="no-cache">
<meta http-equiv="Pragma" CONTENT="no-cache">
<title>微商城</title>
<link rel="stylesheet" href="/css/mall/pure.css?v=3.4.0-f5bd5">
<link rel="stylesheet" href="/css/mall/grids-core.css?v=3.4.0-f5bd5">
<link rel="stylesheet" href="/css/mall/zepto.alert.css?v=3.4.0-f5bd5">
<script type="text/javascript" src="/js/TouchSlide.1.1.js?v=3.4.0-f5bd5"></script>
</head>
<style type="text/css">
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
	overflow: hidden;
	border-bottom: 1px solid #eaeaea;
}

.top {
	width: 90%;
	margin: 0 auto;
	padding-bottom: 1em;
}

.top p {
	margin: 0.5em 0;
	font-size: 0.8em;
}
.top>p:first-child{
	font-size:1.1em;
}

.fonts {
	font-size: 1em !important;
	margin: 0.8em 0 !important;
}


.jian {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-right: 0 none;
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
	text-align: center;
	margin-left:0.4em;
}

.val {
	background: #fff;
	display: inline-block;
	width: 3.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	text-align: center;
}

.jia {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-left: 0 none;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	text-align: center;
}

.button {
	width: 47%;
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
}

.addbtn {
	background: #edb23e;
	margin-right: 3%;
}

.buybtn {
	background: #f96364;
}

.bottom {
	border-top: 0.5em solid #eeeeee;
	padding-bottom: 3em;
    position: relative;
    width:100%;
}

.bottom .bottom-details{
	width:100%;	
	word-break:break-all;
	overflow-x: hidden; 
}

.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{
	word-break:break-all;
}

.bottom > p:first-child {
	text-indent: 1em;
}

.bottom > p img{
    width: 1em;
    position: absolute;
    top:0.8em;
    right: 1em;
}

.bottom-details p {
	text-indent: 1em;
	word-break:break-all;
}

.inline-padding {
	display: inline-block;
	padding-left: 0.8em;
}

.inline-paddings {
	display: inline-block;
	padding-left: 1.6em;
}

.footer {
	width: 100%;
	height: 3em;
	position: fixed;
	bottom: 0;
	background: #fff;
	color: #b6b6b6;
	text-align: center;
	border-top: 1px solid #eaeaea;
}

.footer a {
	color: #626262;
	display: inline-block;
	height:1em;
	line-height:1em;
	padding-top: 1em;
	padding-bottom: 1em;
}
.footer .inline-paddings-right{
    padding-top: 1em;
    float: right;
}
.footer img {
	display: inline-block;
	width: 1em;
}

.top-bg{
    position: fixed;
    bottom: 3.5em;
    right: 1em;
    width: 2em;
    display: none;
    filter:alpha(opacity=40);       /* IE */
    -moz-opacity:0.4;              /* Moz + FF */
    opacity: 0.4;     
}
.spec{
    display: inline-block;
    margin: 0 1em 0.8em 0;
    font-size:0.7em;
    padding:0.3em 1em;
    border:1px solid #ccc;
    border-radius:3px;
    cursor:pointer;
}
.fonts a.active{
    border: 2px solid #d2b57b;
}
.guige{
    float: left;
    width: 40px;
}
.guige-detail{
    margin-left: 40px;
}
.guige-detail a[disabled]{
    background: none repeat scroll 0 0 #fff;
    color: #e3e3e3;
    cursor: default;
}
/* 本例子css -------------------------------------- */
.slideBox {
	position: relative;
	width: 100%;
	height: 240px;
	overflow: hidden;
}

.slideBox .hd {
	position: absolute;
	width: 100%;
	height: 27px;
	bottom: 0;
	left: 0;
	z-index: 1;
}

.slideBox .hd img {
	width: 11px;
}

.slideBox .bd {
	position: relative;
	z-index: 0;
}

.slideBox .bd li {
	position: relative;
}

.slideBox .bd li img {
	width: 100%;
	height: 240px;
	display: block;
}

.slideBox .bd li a {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */
}

.slideBox .hd a {
	display: block;
	width: auto;
	position: absolute;
	bottom: 0.5em;
	right: 0.5em;
	padding: 0.1em 0.7em;
	text-align: center;
	color: #fff;
	background-color: rgba(0, 0, 0, 0.6);
	border-radius: 4px;
}
.slideBox>.a-img{
    position: fixed;
    top:1em;
    right: 0.5em;
    display: block;
    width:2em;
    height: 2em;
    border-radius: 2em;
    background-color: rgba(0, 0, 0, 0.6); 
    z-index: 2;
}
.slideBox>.a-img>img{
    width: 1em;            
    position: absolute;
    top:50%;
    left: 50%;
    margin-top:-0.5em;
    margin-left: -0.5em;
}
.carts{
	position: relative;
}
.cartNum{                      
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    line-height:1.2em;
    border-radius: 1.5em;
    background:#ff0000;  
    position: absolute;
    right: -0.7em;
    top: 0.3em;
    color: #fff;
}
#soldCount{
	float: right; 
	font-size: 0.8em; 
	padding-top: 0.3em;
	color:#adadad;
}
.freight{
	font-size:0.8em;
	color:#adadad;
}
.standard_sku{
	font-size:0.9em;
	color:#adadad;
}
@media all and (max-width:320px){
	.slideBox{
		height:240px;
	}
	.slideBox .bd li img {
		height:240px;
	}
}
@media all and (min-width:321px) and (max-width:360px){
	.slideBox{
		height:270px;
	}
	.slideBox .bd li img {
		height:270px;
	}
}
@media all and (min-width:361px) and (max-width:375px){
	.slideBox{
		height:281px;
	}
	.slideBox .bd li img {
		height:281px;
	}
}
@media all and (min-width:376px) and (max-width:384px){
	.slideBox{
		height:288px;
	}
	.slideBox .bd li img {
		height:288px;
	}
}
@media all and (min-width:385px) and (max-width:414px){
	.slideBox{
		height:311px;
	}
	.slideBox .bd li img {
		height:311px;
	}
}
@media all and (min-width:415px){
	.slideBox{
		height:360px;
	}
	.slideBox .bd li img {
		height:360px;
	}
}
</style>
<body>
	<div id="wrapper">
		<div class="header">
			<div id="slideBox" class="slideBox">
				<a class="a-img" href="/cart?serial=10549840601068216320">
                  <img src="/images/mall/detail_cart_icon.png?v=3.4.0-f5bd5" class="pure-img">
              	</a>
				<div class="bd">
					<ul>
						
							
								<li><img src="http://res.test.saofu.cn/saofu/upload/image/2016/07/18/352c9a44-5fe7-4546-9786-563d8700a773.jpg" class="pure-img" /></li>
							
						
					</ul>
				</div>
				<div class="hd">
					<a class="pageState"></a>
				</div>
			</div>
		</div>		
		<div class="content">
			<div class="top">
				<p>
					接口-测试商品1
				</p>
				<p class="grey">
					接口测试专用,烦请勿删,勿操作
				</p>				
				<p class="fonts">
					单价:
					<span class="orange">
					
					
						
							￥0.01
						
						
					
					
					</span>
					<span id = "soldCount">销量:6件</span>
				</p>
				
					<p class="freight">运费:<span>4.00元</span></p>
				
				
				<p class="fonts shuliang">
					数量:<span class="jian">-</span><span class="val">1</span><span class="jia">+</span>
					
						
						
							<span class="standard_sku">(库存：999994件)</span>
						
						
						
					
				</p> 
				<div>
					<input type="button" class="button addbtn" value="加入购物车" />
					<input type="button" class="button buybtn" value="立即购买" />
				</div>
			</div>
			<div class="bottom">
				<p>图文详情<img src="/images/mall/down.png?v=3.4.0-f5bd5" class="pure-img"></p>
				<div class="bottom-details">
					<p>											</p><p><br/></p><p><br/></p><p><br/></p><p>接口测试专用商品,商品详情简介<br/></p>
				</div>
			</div>
		</div>		
	</div>
	<img src="/images/mall/top_bg.png?v=3.4.0-f5bd5" class="pure-img top-bg">
	<script type="text/javascript" src="/js/zepto.min.js?v=3.4.0-f5bd5"></script>
    <script type="text/javascript" src="/js/touch.js?v=3.4.0-f5bd5"></script>
    <script type="text/javascript" src="/js/mall/zepto.alert.js?v=3.4.0-f5bd5"></script>
	<script type="text/javascript" src="/js/mall/mall.js?v=3.4.0-f5bd5"></script>
	<script type="text/javascript">
			
	var priceLimita = $(".orange").text();
	var soldCounta = $("#soldCount").text();
	var skua = $(".standard_sku").text();
	
            // 滚动窗口来判断按钮显示或隐藏
            $(window).scroll(function() {
                if ($(this).scrollTop() > 120) {
                    $('.top-bg').show(100);
                } else {
                    $('.top-bg').hide(100);
                }
            });
            
            function choose(obj,price,sku,standardSoldCount){
            	if(!$(obj).attr('disabled')){
            	if($(obj).hasClass('active')){
            		$(".orange").text(priceLimita);
                	$("#soldCount").text(soldCounta);
                	$(".standard_sku").text(skua);
                	 $(obj).removeClass('active');
            	}else{
	            	$(".standard_sku").text("(库存:"+sku+"件)");
	            	$(".orange").text("￥"+price);
	            	$("#soldCount").text("销量:"+standardSoldCount+"件");
	            	$(".spec").removeClass('active');
                    $(obj).addClass('active');
            	}
            	}
            }
            
           
            
            $(function(){
            	/* $(".spec").tap(function(){
                    if(!$(this).attr('disabled')){
                        if($(this).hasClass('active')){
                            $(this).removeClass('active');
                            
                        }else{
                        	
                        }
                    }                    
                }); */
                
            	TouchSlide({
    				slideCell : "#slideBox",
    				mainCell : ".bd ul",
    				effect : "leftLoop",
    				pageStateCell : ".pageState"
    			});            	            	
				
            	$(".bottom-details img").width($(".top").width());
            });
            
            // jQuery实现动画滚动
            $('.top-bg').click(function(event) {
                event.preventDefault();
                $('html, body').scrollTop(0);
            });
			
			$(".bottom > p img").click(function(){
                $(this).parent().next().toggle();
                if($(this).parent().next().css("display")=="block"){
                    $(this).attr("src","/images/mall/down.png");
                }else{
                    $(this).attr("src","/images/mall/up.png");
                }
            });
            
            $(".jia").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count)) {
                	count = 1;
                } else {
                	count += 1;
                }
                val.text(count);
            });
            $(".jian").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count) || count <= 1) {
                	count = 1;
                } else {
                	count -= 1;
                }
                val.text(count);
            });
            
            $(".addbtn").click(function(event){
            	if($(this).prop("disabled") == true)
            		return false;
            	var params = {
   					mallGoodsId : "26838",
   					standardId : standardId,
   					amount : $(".val").text(),
   					serial : "10549840601068216320",
   					openId : "ous64uFCCLMyXYDJ-MkNilyCI5C"
   				};
            	
            	var standard = 1;
            	if(standard == 2 && $(".active").length < 1){
    				doAlert("no", "请选择商品的规格");
    				return;
    			}
            	if(standard == 2){
            		var standardId = $(".active").attr("data");
    				params.standardId = standardId;
            	}
            	$.post("/addtocart", params, function(result){
            		if (null == result || !result.success) {
            			toast(result.message);
    					return;
    				}
    				//更新购物车数量
    				/* var cartNum = $(".cartNum").text();
    				if (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {
    					$(".carts").append("<span class='cartNum'>1</span>");
    				} else {
    					if (null != result.attach && result.attach > 0) {
    						$(".cartNum").text(result.attach);
    					}
    				} */
    				toast("已经成功加入购物车");
            	});
            });
		$(".buybtn").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			$(this).attr("disabled","disabled");
			var standard = 1;
        	if(standard == 2 && $(".active").length < 1){
				doAlert("no", "请选择商品的规格");
				$(this).removeAttr("disabled");
				return;
        	}
        	if(standard == 2){
        		var standardId = $(".active").attr("data");
        		window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;
        		return;
        	}
			window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";
		});
	</script>
</body>
</html>
<!--加入判断用户是否关注公众号功能 add by lipengfei at 2015-11-9  -->
  	
	<script type="text/javascript" src="/js/bind/banner.js?v=3.4.0-f5bd5"></script>
	<script type="text/javascript">
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	</script>

2016-07-20 19:45:07,560 htmlparser.py[line: 28] INFO: Data 






2016-07-20 19:45:07,561 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,561 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:07,562 htmlparser.py[line: 25] INFO: End tag: link
2016-07-20 19:45:07,562 htmlparser.py[line: 28] INFO: Data   

2016-07-20 19:45:07,563 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,564 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-20 19:45:07,564 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,564 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-20 19:45:07,565 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,565 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:07,566 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,566 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:07,567 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,567 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:07,568 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,568 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:07,569 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,569 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:07,570 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,572 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:07,572 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,573 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-20 19:45:07,574 htmlparser.py[line: 28] INFO: Data 微商城
2016-07-20 19:45:07,574 htmlparser.py[line: 25] INFO: End tag: title
2016-07-20 19:45:07,575 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,575 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:07,576 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,576 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:07,577 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,577 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:07,578 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,579 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:07,580 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:07,581 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,581 htmlparser.py[line: 25] INFO: End tag: head
2016-07-20 19:45:07,582 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,583 htmlparser.py[line: 19] INFO: Start tag: style
2016-07-20 19:45:07,584 htmlparser.py[line: 28] INFO: Data 
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
	overflow: hidden;
	border-bottom: 1px solid #eaeaea;
}

.top {
	width: 90%;
	margin: 0 auto;
	padding-bottom: 1em;
}

.top p {
	margin: 0.5em 0;
	font-size: 0.8em;
}
.top>p:first-child{
	font-size:1.1em;
}

.fonts {
	font-size: 1em !important;
	margin: 0.8em 0 !important;
}


.jian {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-right: 0 none;
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
	text-align: center;
	margin-left:0.4em;
}

.val {
	background: #fff;
	display: inline-block;
	width: 3.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	text-align: center;
}

.jia {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-left: 0 none;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	text-align: center;
}

.button {
	width: 47%;
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
}

.addbtn {
	background: #edb23e;
	margin-right: 3%;
}

.buybtn {
	background: #f96364;
}

.bottom {
	border-top: 0.5em solid #eeeeee;
	padding-bottom: 3em;
    position: relative;
    width:100%;
}

.bottom .bottom-details{
	width:100%;	
	word-break:break-all;
	overflow-x: hidden; 
}

.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{
	word-break:break-all;
}

.bottom > p:first-child {
	text-indent: 1em;
}

.bottom > p img{
    width: 1em;
    position: absolute;
    top:0.8em;
    right: 1em;
}

.bottom-details p {
	text-indent: 1em;
	word-break:break-all;
}

.inline-padding {
	display: inline-block;
	padding-left: 0.8em;
}

.inline-paddings {
	display: inline-block;
	padding-left: 1.6em;
}

.footer {
	width: 100%;
	height: 3em;
	position: fixed;
	bottom: 0;
	background: #fff;
	color: #b6b6b6;
	text-align: center;
	border-top: 1px solid #eaeaea;
}

.footer a {
	color: #626262;
	display: inline-block;
	height:1em;
	line-height:1em;
	padding-top: 1em;
	padding-bottom: 1em;
}
.footer .inline-paddings-right{
    padding-top: 1em;
    float: right;
}
.footer img {
	display: inline-block;
	width: 1em;
}

.top-bg{
    position: fixed;
    bottom: 3.5em;
    right: 1em;
    width: 2em;
    display: none;
    filter:alpha(opacity=40);       /* IE */
    -moz-opacity:0.4;              /* Moz + FF */
    opacity: 0.4;     
}
.spec{
    display: inline-block;
    margin: 0 1em 0.8em 0;
    font-size:0.7em;
    padding:0.3em 1em;
    border:1px solid #ccc;
    border-radius:3px;
    cursor:pointer;
}
.fonts a.active{
    border: 2px solid #d2b57b;
}
.guige{
    float: left;
    width: 40px;
}
.guige-detail{
    margin-left: 40px;
}
.guige-detail a[disabled]{
    background: none repeat scroll 0 0 #fff;
    color: #e3e3e3;
    cursor: default;
}
/* 本例子css -------------------------------------- */
.slideBox {
	position: relative;
	width: 100%;
	height: 240px;
	overflow: hidden;
}

.slideBox .hd {
	position: absolute;
	width: 100%;
	height: 27px;
	bottom: 0;
	left: 0;
	z-index: 1;
}

.slideBox .hd img {
	width: 11px;
}

.slideBox .bd {
	position: relative;
	z-index: 0;
}

.slideBox .bd li {
	position: relative;
}

.slideBox .bd li img {
	width: 100%;
	height: 240px;
	display: block;
}

.slideBox .bd li a {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */
}

.slideBox .hd a {
	display: block;
	width: auto;
	position: absolute;
	bottom: 0.5em;
	right: 0.5em;
	padding: 0.1em 0.7em;
	text-align: center;
	color: #fff;
	background-color: rgba(0, 0, 0, 0.6);
	border-radius: 4px;
}
.slideBox>.a-img{
    position: fixed;
    top:1em;
    right: 0.5em;
    display: block;
    width:2em;
    height: 2em;
    border-radius: 2em;
    background-color: rgba(0, 0, 0, 0.6); 
    z-index: 2;
}
.slideBox>.a-img>img{
    width: 1em;            
    position: absolute;
    top:50%;
    left: 50%;
    margin-top:-0.5em;
    margin-left: -0.5em;
}
.carts{
	position: relative;
}
.cartNum{                      
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    line-height:1.2em;
    border-radius: 1.5em;
    background:#ff0000;  
    position: absolute;
    right: -0.7em;
    top: 0.3em;
    color: #fff;
}
#soldCount{
	float: right; 
	font-size: 0.8em; 
	padding-top: 0.3em;
	color:#adadad;
}
.freight{
	font-size:0.8em;
	color:#adadad;
}
.standard_sku{
	font-size:0.9em;
	color:#adadad;
}
@media all and (max-width:320px){
	.slideBox{
		height:240px;
	}
	.slideBox .bd li img {
		height:240px;
	}
}
@media all and (min-width:321px) and (max-width:360px){
	.slideBox{
		height:270px;
	}
	.slideBox .bd li img {
		height:270px;
	}
}
@media all and (min-width:361px) and (max-width:375px){
	.slideBox{
		height:281px;
	}
	.slideBox .bd li img {
		height:281px;
	}
}
@media all and (min-width:376px) and (max-width:384px){
	.slideBox{
		height:288px;
	}
	.slideBox .bd li img {
		height:288px;
	}
}
@media all and (min-width:385px) and (max-width:414px){
	.slideBox{
		height:311px;
	}
	.slideBox .bd li img {
		height:311px;
	}
}
@media all and (min-width:415px){
	.slideBox{
		height:360px;
	}
	.slideBox .bd li img {
		height:360px;
	}
}

2016-07-20 19:45:07,589 htmlparser.py[line: 25] INFO: End tag: style
2016-07-20 19:45:07,590 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,590 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-20 19:45:07,591 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:07,591 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:07,592 htmlparser.py[line: 28] INFO: Data 
		
2016-07-20 19:45:07,592 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:07,593 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:07,593 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:07,594 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,594 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-20 19:45:07,595 htmlparser.py[line: 28] INFO: Data 
                  
2016-07-20 19:45:07,595 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:45:07,596 htmlparser.py[line: 28] INFO: Data 
              	
2016-07-20 19:45:07,596 htmlparser.py[line: 25] INFO: End tag: a
2016-07-20 19:45:07,597 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,597 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:07,597 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:07,598 htmlparser.py[line: 19] INFO: Start tag: ul
2016-07-20 19:45:07,598 htmlparser.py[line: 28] INFO: Data 
						
							
								
2016-07-20 19:45:07,599 htmlparser.py[line: 19] INFO: Start tag: li
2016-07-20 19:45:07,599 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:45:07,600 htmlparser.py[line: 25] INFO: End tag: img
2016-07-20 19:45:07,600 htmlparser.py[line: 25] INFO: End tag: li
2016-07-20 19:45:07,601 htmlparser.py[line: 28] INFO: Data 
							
						
					
2016-07-20 19:45:07,601 htmlparser.py[line: 25] INFO: End tag: ul
2016-07-20 19:45:07,601 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,602 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:07,602 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,603 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:07,603 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:07,604 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-20 19:45:07,604 htmlparser.py[line: 25] INFO: End tag: a
2016-07-20 19:45:07,605 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,605 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:07,605 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:07,606 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:07,606 htmlparser.py[line: 28] INFO: Data 
		
2016-07-20 19:45:07,606 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:07,606 htmlparser.py[line: 28] INFO: Data 		
		
2016-07-20 19:45:07,607 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:07,607 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:07,607 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:07,607 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,608 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:07,608 htmlparser.py[line: 28] INFO: Data 
					接口-测试商品1
				
2016-07-20 19:45:07,608 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:07,608 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,608 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:07,609 htmlparser.py[line: 28] INFO: Data 
					接口测试专用,烦请勿删,勿操作
				
2016-07-20 19:45:07,609 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:07,609 htmlparser.py[line: 28] INFO: Data 				
				
2016-07-20 19:45:07,609 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:07,610 htmlparser.py[line: 28] INFO: Data 
					单价:
					
2016-07-20 19:45:07,610 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:07,610 htmlparser.py[line: 28] INFO: Data 
					
					
						
							￥0.01
						
						
					
					
					
2016-07-20 19:45:07,611 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:07,611 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:07,611 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:07,611 htmlparser.py[line: 28] INFO: Data 销量:6件
2016-07-20 19:45:07,612 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:07,612 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,612 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:07,612 htmlparser.py[line: 28] INFO: Data 
				
					
2016-07-20 19:45:07,613 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:07,613 htmlparser.py[line: 28] INFO: Data 运费:
2016-07-20 19:45:07,613 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:07,613 htmlparser.py[line: 28] INFO: Data 4.00元
2016-07-20 19:45:07,614 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:07,614 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:07,614 htmlparser.py[line: 28] INFO: Data 
				
				
				
2016-07-20 19:45:07,614 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:07,614 htmlparser.py[line: 28] INFO: Data 
					数量:
2016-07-20 19:45:07,615 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:07,615 htmlparser.py[line: 28] INFO: Data -
2016-07-20 19:45:07,615 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:07,615 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:07,616 htmlparser.py[line: 28] INFO: Data 1
2016-07-20 19:45:07,616 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:07,616 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:07,616 htmlparser.py[line: 28] INFO: Data +
2016-07-20 19:45:07,616 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:07,617 htmlparser.py[line: 28] INFO: Data 
					
						
						
							
2016-07-20 19:45:07,617 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:07,617 htmlparser.py[line: 28] INFO: Data (库存：999994件)
2016-07-20 19:45:07,617 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:07,618 htmlparser.py[line: 28] INFO: Data 
						
						
						
					
				
2016-07-20 19:45:07,618 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:07,618 htmlparser.py[line: 28] INFO: Data  
				
2016-07-20 19:45:07,618 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:07,618 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:07,619 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-20 19:45:07,619 htmlparser.py[line: 25] INFO: End tag: input
2016-07-20 19:45:07,619 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:07,620 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-20 19:45:07,620 htmlparser.py[line: 25] INFO: End tag: input
2016-07-20 19:45:07,620 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,620 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:07,620 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:07,621 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:07,621 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:07,621 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:07,621 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,621 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:07,622 htmlparser.py[line: 28] INFO: Data 图文详情
2016-07-20 19:45:07,622 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:45:07,622 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:07,623 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,623 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:07,624 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:07,624 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:07,624 htmlparser.py[line: 28] INFO: Data 											
2016-07-20 19:45:07,625 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:07,625 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:07,625 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:45:07,625 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:45:07,625 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:07,626 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:07,626 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:45:07,626 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:45:07,627 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:07,627 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:07,627 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:45:07,627 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:45:07,627 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:07,628 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:07,628 htmlparser.py[line: 28] INFO: Data 接口测试专用商品,商品详情简介
2016-07-20 19:45:07,628 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:45:07,628 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:45:07,629 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:07,629 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:07,629 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:07,630 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:07,630 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:07,630 htmlparser.py[line: 28] INFO: Data 
		
2016-07-20 19:45:07,631 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:07,631 htmlparser.py[line: 28] INFO: Data 		
	
2016-07-20 19:45:07,631 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:07,631 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:07,632 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:45:07,632 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:07,632 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:07,632 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:07,632 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:07,633 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:07,633 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:07,633 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:07,634 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:07,634 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:07,634 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:07,635 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:07,635 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:07,635 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:07,635 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:07,636 htmlparser.py[line: 28] INFO: Data 
			
	var priceLimita = $(".orange").text();
	var soldCounta = $("#soldCount").text();
	var skua = $(".standard_sku").text();
	
            // 滚动窗口来判断按钮显示或隐藏
            $(window).scroll(function() {
                if ($(this).scrollTop() > 120) {
                    $('.top-bg').show(100);
                } else {
                    $('.top-bg').hide(100);
                }
            });
            
            function choose(obj,price,sku,standardSoldCount){
            	if(!$(obj).attr('disabled')){
            	if($(obj).hasClass('active')){
            		$(".orange").text(priceLimita);
                	$("#soldCount").text(soldCounta);
                	$(".standard_sku").text(skua);
                	 $(obj).removeClass('active');
            	}else{
	            	$(".standard_sku").text("(库存:"+sku+"件)");
	            	$(".orange").text("￥"+price);
	            	$("#soldCount").text("销量:"+standardSoldCount+"件");
	            	$(".spec").removeClass('active');
                    $(obj).addClass('active');
            	}
            	}
            }
            
           
            
            $(function(){
            	/* $(".spec").tap(function(){
                    if(!$(this).attr('disabled')){
                        if($(this).hasClass('active')){
                            $(this).removeClass('active');
                            
                        }else{
                        	
                        }
                    }                    
                }); */
                
            	TouchSlide({
    				slideCell : "#slideBox",
    				mainCell : ".bd ul",
    				effect : "leftLoop",
    				pageStateCell : ".pageState"
    			});            	            	
				
            	$(".bottom-details img").width($(".top").width());
            });
            
            // jQuery实现动画滚动
            $('.top-bg').click(function(event) {
                event.preventDefault();
                $('html, body').scrollTop(0);
            });
			
			$(".bottom > p img").click(function(){
                $(this).parent().next().toggle();
                if($(this).parent().next().css("display")=="block"){
                    $(this).attr("src","/images/mall/down.png");
                }else{
                    $(this).attr("src","/images/mall/up.png");
                }
            });
            
            $(".jia").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count)) {
                	count = 1;
                } else {
                	count += 1;
                }
                val.text(count);
            });
            $(".jian").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count) || count <= 1) {
                	count = 1;
                } else {
                	count -= 1;
                }
                val.text(count);
            });
            
            $(".addbtn").click(function(event){
            	if($(this).prop("disabled") == true)
            		return false;
            	var params = {
   					mallGoodsId : "26838",
   					standardId : standardId,
   					amount : $(".val").text(),
   					serial : "10549840601068216320",
   					openId : "ous64uFCCLMyXYDJ-MkNilyCI5C"
   				};
            	
            	var standard = 1;
            	if(standard == 2 && $(".active").length < 1){
    				doAlert("no", "请选择商品的规格");
    				return;
    			}
            	if(standard == 2){
            		var standardId = $(".active").attr("data");
    				params.standardId = standardId;
            	}
            	$.post("/addtocart", params, function(result){
            		if (null == result || !result.success) {
            			toast(result.message);
    					return;
    				}
    				//更新购物车数量
    				/* var cartNum = $(".cartNum").text();
    				if (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {
    					$(".carts").append("<span class='cartNum'>1</span>");
    				} else {
    					if (null != result.attach && result.attach > 0) {
    						$(".cartNum").text(result.attach);
    					}
    				} */
    				toast("已经成功加入购物车");
            	});
            });
		$(".buybtn").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			$(this).attr("disabled","disabled");
			var standard = 1;
        	if(standard == 2 && $(".active").length < 1){
				doAlert("no", "请选择商品的规格");
				$(this).removeAttr("disabled");
				return;
        	}
        	if(standard == 2){
        		var standardId = $(".active").attr("data");
        		window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;
        		return;
        	}
			window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";
		});
	
2016-07-20 19:45:07,636 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:07,636 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,637 htmlparser.py[line: 25] INFO: End tag: body
2016-07-20 19:45:07,637 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,637 htmlparser.py[line: 25] INFO: End tag: html
2016-07-20 19:45:07,637 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,637 htmlparser.py[line: 33] INFO: Comment：加入判断用户是否关注公众号功能 add by lipengfei at 2015-11-9  
2016-07-20 19:45:07,637 htmlparser.py[line: 28] INFO: Data 
  	
	
2016-07-20 19:45:07,637 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:07,637 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:07,638 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:07,638 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:07,638 htmlparser.py[line: 28] INFO: Data 
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	
2016-07-20 19:45:07,638 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:07,638 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,639 testcase.py[line: 83] INFO: 步骤[1]执行失败,停止执行用例[id=80, name=test-n-点击商品]
2016-07-20 19:45:07,639 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File E:\Projects\interface_project\interface\wechatno_wemall.py, line 108, in test_click_goods    self.assertEqual(find_flag, 1, msg=无法打开商品详情)AssertionError: 0 != 1 : 无法打开商品详情", protocol_method="get", runtime="2016-07-20 19:45:07" WHERE executed_history_id = 20160720194506 AND testcase_id = 80 AND step_id = 82 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:45:07,641 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-20 19:45:07,641 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2016-07-20 19:45:07" WHERE executed_history_id = 20160720194506 and testcase_id = 80 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:45:07,800 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-20 19:45:07,800 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194506', '102', 'test-n-点击立即购买按钮', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-20 19:45:07,801 testsuite.py[line: 63] INFO: 开始执行测试用例[id=102，name=test-n-点击立即购买按钮]
2016-07-20 19:45:07,801 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-20 19:45:07,801 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194506', '102', 'test-n-点击立即购买按钮', '无计划', 'pj_wecharno', 104, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"ToBuyGoods","function":"test_to_buy_goods","method":"get","url":"/mall/tobuy/1?","params":{"mallGoodsId":"26838","amount":1,"type":1,"serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-20 19:45:07,802 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-20 19:45:07,803 casestep.py[line: 64] INFO: 调用的方法为：ToBuyGoods.test_to_buy_goods
2016-07-20 19:45:07,803 wechatno_wemall.py[line: 219] INFO: 正在发起GET请求...
2016-07-20 19:45:07,803 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/mall/tobuy/1?type=1&mallGoodsId=26838&amount=1&serial=10549840601068216320
2016-07-20 19:45:07,803 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-20 19:45:07,814 wechatno_wemall.py[line: 225] INFO: 正在解析返回结果:





<!DOCTYPE html>
<link rel="stylesheet" href="/css/bind/banner.css?v=3.4.0-f5bd5" />  
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
        <link rel="stylesheet" href="/css/skin-nr-min.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" href="/css/cpn.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" type="text/css" href="/css/zepto.alert.css?v=3.4.0-f5bd5">
        <title>哎哟~出错啦~</title>
    </head>
    <body>
        <script type="text/javascript" src="/js/zepto.min.js?v=3.4.0-f5bd5" ></script>
        <script type="text/javascript" src="/js/zepto.alert.min.js?v=3.4.0-f5bd5"></script>
        <script type="text/javascript">
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        </script>
    </body>
</html>

2016-07-20 19:45:07,815 htmlparser.py[line: 28] INFO: Data 






2016-07-20 19:45:07,815 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,815 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:07,815 htmlparser.py[line: 25] INFO: End tag: link
2016-07-20 19:45:07,815 htmlparser.py[line: 28] INFO: Data   

2016-07-20 19:45:07,815 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,815 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-20 19:45:07,816 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:07,816 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-20 19:45:07,816 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:07,816 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:07,816 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:07,816 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:07,816 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:07,816 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:07,816 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:07,817 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:07,817 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:07,817 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:07,817 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:07,817 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-20 19:45:07,817 htmlparser.py[line: 28] INFO: Data 哎哟~出错啦~
2016-07-20 19:45:07,817 htmlparser.py[line: 25] INFO: End tag: title
2016-07-20 19:45:07,817 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:07,817 htmlparser.py[line: 25] INFO: End tag: head
2016-07-20 19:45:07,817 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:07,817 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-20 19:45:07,818 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:07,818 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:07,818 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:07,818 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:07,818 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:07,818 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:07,818 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:07,818 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:07,818 htmlparser.py[line: 28] INFO: Data 
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        
2016-07-20 19:45:07,818 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:07,819 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:07,819 htmlparser.py[line: 25] INFO: End tag: body
2016-07-20 19:45:07,819 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,819 htmlparser.py[line: 25] INFO: End tag: html
2016-07-20 19:45:07,819 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:07,819 wechatno_wemall.py[line: 231] INFO: [['', '\r\n\r\n\r\n\r\n\r\n\r\n'], ['', '\r\n'], ['link', '  \r\n'], ['link', '\r\n'], ['html', '\r\n    '], ['head', '\r\n        '], ['meta', '\r\n        '], ['meta', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['title', '哎哟~出错啦~'], ['title', '\r\n    '], ['title', '\r\n    '], ['body', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        Zepto(function($){\r\n\t\t\tfunction myAlert(content) {\r\n\t\t    \t$.dialog({\r\n\t\t    \t\tcontent : content,\r\n\t\t    \t\ttitle : "alert"\r\n\t\t    \t});\r\n\t\t    }\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tmyAlert("噢...出错了!请等待管理员处理,稍后重试");\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n        });\r\n        '], ['script', '\r\n    '], ['script', '\r\n'], ['script', '\r\n']]
2016-07-20 19:45:07,819 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-20 19:45:07,819 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-20 19:45:07" WHERE executed_history_id = 20160720194506 AND testcase_id = 102 AND step_id = 104 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:45:07,822 testcase.py[line: 101] INFO: 测试用例[id=102, name=test-n-点击立即购买按钮]执行成功
2016-07-20 19:45:07,822 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-20 19:45:07,822 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-20 19:45:07" WHERE executed_history_id = 20160720194506 and testcase_id = 102 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:45:07,824 testsuite.py[line: 74] INFO: 测试套件[id=79 ,name=微商城-模拟点击页面跳转]已执行完
2016-07-20 19:45:07,824 main.py[line: 229] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-07-20 19:45:07,825 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-07-20 19:45:07,825 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20160720194506',)
2016-07-20 19:45:07,826 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-07-20 19:45:07,826 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20160720194506')
2016-07-20 19:45:07,827 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-07-20 19:45:07,827 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20160720194506')
2016-07-20 19:45:07,828 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-07-20 19:45:07,828 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20160720194506')
2016-07-20 19:45:07,829 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-07-20 19:45:07,829 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20160720194506')
2016-07-20 19:45:07,830 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-07-20 19:45:07,831 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160720194506',)
2016-07-20 19:45:07,833 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]的测试用例执行结果
2016-07-20 19:45:07,834 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160720194506')
2016-07-20 19:45:07,835 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_wecharno, testplan：无计划]的测试用例运行结果到测试报告
2016-07-20 19:45:07,836 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-07-20 19:45:07,836 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160720194506',)
2016-07-20 19:45:07,837 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]已运行的测试用例
2016-07-20 19:45:07,837 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160720194506')
2016-07-20 19:45:07,839 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=80]步骤运行结果
2016-07-20 19:45:07,839 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 80, '20160720194506')
2016-07-20 19:45:07,841 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=102]步骤运行结果
2016-07-20 19:45:07,841 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 102, '20160720194506')
2016-07-20 19:45:07,843 htmlreporter.py[line: 177] INFO: 正在设置测试报告结果文件名
2016-07-20 19:45:07,843 htmlreporter.py[line: 187] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20160720194506.html
2016-07-20 19:45:07,843 htmlreporter.py[line: 180] INFO: 正在生成测试报告
2016-07-20 19:45:07,844 main.py[line: 252] INFO: 生成测试报告成功
2016-07-20 19:45:08,055 main.py[line: 259] INFO: E:\\Projects\\report\\test_report20160720194506.html
2016-07-20 19:45:08,055 main.py[line: 262] INFO: 正在发送测试报告邮件...
2016-07-20 19:45:08,055 main.py[line: 266] INFO: 发送邮件成功
2016-07-20 19:45:29,082 globalpy.py[line: 14] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-07-20 19:45:29,092 globalpy.py[line: 17] INFO: 正在初始化数据库[名称：SAOFUDB]对象
2016-07-20 19:45:29,097 globalpy.py[line: 20] INFO: 正在获取testlink
2016-07-20 19:45:29,153 main.py[line: 60] INFO: 正在创建测试用例报告报表
2016-07-20 19:45:29,153 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-07-20 19:45:29,154 main.py[line: 63] INFO: 正在创建测试步骤报告报表
2016-07-20 19:45:29,154 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-07-20 19:45:29,155 main.py[line: 66] INFO: 正在读取运行模式配置
2016-07-20 19:45:29,156 main.py[line: 187] INFO: 按套件运行测试
2016-07-20 19:45:29,156 main.py[line: 189] INFO: 已获取配置的套件id列表：[79]
2016-07-20 19:45:29,419 main.py[line: 205] INFO: 正在读取套件[id=79，name=微商城-模拟点击页面跳转]的协议，host，端口配置...
2016-07-20 19:45:29,421 main.py[line: 223] INFO: 正在执行测试套件[id=79 ,name=微商城-模拟点击页面跳转]
2016-07-20 19:45:29,421 testsuite.py[line: 42] INFO: 正在获取套件[id=79，name=微商城-模拟点击页面跳转]的测试用例...
2016-07-20 19:45:29,678 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-20 19:45:29,679 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194529', '80', 'test-n-点击商品', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-20 19:45:29,681 testsuite.py[line: 63] INFO: 开始执行测试用例[id=80，name=test-n-点击商品]
2016-07-20 19:45:29,681 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-20 19:45:29,682 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194529', '80', 'test-n-点击商品', '无计划', 'pj_wecharno', 82, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"Goods","function":"test_click_goods","method":"get","url":"/goods/item?","params":{"id":26838, "serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-20 19:45:29,682 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-20 19:45:29,683 casestep.py[line: 64] INFO: 调用的方法为：Goods.test_click_goods
2016-07-20 19:45:29,683 wechatno_wemall.py[line: 89] INFO: 正在发起GET请求...
2016-07-20 19:45:29,683 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/goods/item?id=26838&serial=10549840601068216320
2016-07-20 19:45:29,683 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-20 19:45:29,812 htmlparser.py[line: 28] INFO: Data 






2016-07-20 19:45:29,813 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,813 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:29,813 htmlparser.py[line: 25] INFO: End tag: link
2016-07-20 19:45:29,813 htmlparser.py[line: 28] INFO: Data   

2016-07-20 19:45:29,814 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,814 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-20 19:45:29,814 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,814 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-20 19:45:29,815 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,815 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:29,816 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,816 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:29,816 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,817 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:29,817 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,817 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:29,817 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,818 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:29,818 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,818 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:29,818 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,818 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-20 19:45:29,819 htmlparser.py[line: 28] INFO: Data 微商城
2016-07-20 19:45:29,819 htmlparser.py[line: 25] INFO: End tag: title
2016-07-20 19:45:29,819 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,819 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:29,820 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,820 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:29,820 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,820 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:29,821 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,821 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:29,821 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:29,821 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,822 htmlparser.py[line: 25] INFO: End tag: head
2016-07-20 19:45:29,822 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,822 htmlparser.py[line: 19] INFO: Start tag: style
2016-07-20 19:45:29,823 htmlparser.py[line: 28] INFO: Data 
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
	overflow: hidden;
	border-bottom: 1px solid #eaeaea;
}

.top {
	width: 90%;
	margin: 0 auto;
	padding-bottom: 1em;
}

.top p {
	margin: 0.5em 0;
	font-size: 0.8em;
}
.top>p:first-child{
	font-size:1.1em;
}

.fonts {
	font-size: 1em !important;
	margin: 0.8em 0 !important;
}


.jian {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-right: 0 none;
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
	text-align: center;
	margin-left:0.4em;
}

.val {
	background: #fff;
	display: inline-block;
	width: 3.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	text-align: center;
}

.jia {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-left: 0 none;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	text-align: center;
}

.button {
	width: 47%;
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
}

.addbtn {
	background: #edb23e;
	margin-right: 3%;
}

.buybtn {
	background: #f96364;
}

.bottom {
	border-top: 0.5em solid #eeeeee;
	padding-bottom: 3em;
    position: relative;
    width:100%;
}

.bottom .bottom-details{
	width:100%;	
	word-break:break-all;
	overflow-x: hidden; 
}

.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{
	word-break:break-all;
}

.bottom > p:first-child {
	text-indent: 1em;
}

.bottom > p img{
    width: 1em;
    position: absolute;
    top:0.8em;
    right: 1em;
}

.bottom-details p {
	text-indent: 1em;
	word-break:break-all;
}

.inline-padding {
	display: inline-block;
	padding-left: 0.8em;
}

.inline-paddings {
	display: inline-block;
	padding-left: 1.6em;
}

.footer {
	width: 100%;
	height: 3em;
	position: fixed;
	bottom: 0;
	background: #fff;
	color: #b6b6b6;
	text-align: center;
	border-top: 1px solid #eaeaea;
}

.footer a {
	color: #626262;
	display: inline-block;
	height:1em;
	line-height:1em;
	padding-top: 1em;
	padding-bottom: 1em;
}
.footer .inline-paddings-right{
    padding-top: 1em;
    float: right;
}
.footer img {
	display: inline-block;
	width: 1em;
}

.top-bg{
    position: fixed;
    bottom: 3.5em;
    right: 1em;
    width: 2em;
    display: none;
    filter:alpha(opacity=40);       /* IE */
    -moz-opacity:0.4;              /* Moz + FF */
    opacity: 0.4;     
}
.spec{
    display: inline-block;
    margin: 0 1em 0.8em 0;
    font-size:0.7em;
    padding:0.3em 1em;
    border:1px solid #ccc;
    border-radius:3px;
    cursor:pointer;
}
.fonts a.active{
    border: 2px solid #d2b57b;
}
.guige{
    float: left;
    width: 40px;
}
.guige-detail{
    margin-left: 40px;
}
.guige-detail a[disabled]{
    background: none repeat scroll 0 0 #fff;
    color: #e3e3e3;
    cursor: default;
}
/* 本例子css -------------------------------------- */
.slideBox {
	position: relative;
	width: 100%;
	height: 240px;
	overflow: hidden;
}

.slideBox .hd {
	position: absolute;
	width: 100%;
	height: 27px;
	bottom: 0;
	left: 0;
	z-index: 1;
}

.slideBox .hd img {
	width: 11px;
}

.slideBox .bd {
	position: relative;
	z-index: 0;
}

.slideBox .bd li {
	position: relative;
}

.slideBox .bd li img {
	width: 100%;
	height: 240px;
	display: block;
}

.slideBox .bd li a {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */
}

.slideBox .hd a {
	display: block;
	width: auto;
	position: absolute;
	bottom: 0.5em;
	right: 0.5em;
	padding: 0.1em 0.7em;
	text-align: center;
	color: #fff;
	background-color: rgba(0, 0, 0, 0.6);
	border-radius: 4px;
}
.slideBox>.a-img{
    position: fixed;
    top:1em;
    right: 0.5em;
    display: block;
    width:2em;
    height: 2em;
    border-radius: 2em;
    background-color: rgba(0, 0, 0, 0.6); 
    z-index: 2;
}
.slideBox>.a-img>img{
    width: 1em;            
    position: absolute;
    top:50%;
    left: 50%;
    margin-top:-0.5em;
    margin-left: -0.5em;
}
.carts{
	position: relative;
}
.cartNum{                      
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    line-height:1.2em;
    border-radius: 1.5em;
    background:#ff0000;  
    position: absolute;
    right: -0.7em;
    top: 0.3em;
    color: #fff;
}
#soldCount{
	float: right; 
	font-size: 0.8em; 
	padding-top: 0.3em;
	color:#adadad;
}
.freight{
	font-size:0.8em;
	color:#adadad;
}
.standard_sku{
	font-size:0.9em;
	color:#adadad;
}
@media all and (max-width:320px){
	.slideBox{
		height:240px;
	}
	.slideBox .bd li img {
		height:240px;
	}
}
@media all and (min-width:321px) and (max-width:360px){
	.slideBox{
		height:270px;
	}
	.slideBox .bd li img {
		height:270px;
	}
}
@media all and (min-width:361px) and (max-width:375px){
	.slideBox{
		height:281px;
	}
	.slideBox .bd li img {
		height:281px;
	}
}
@media all and (min-width:376px) and (max-width:384px){
	.slideBox{
		height:288px;
	}
	.slideBox .bd li img {
		height:288px;
	}
}
@media all and (min-width:385px) and (max-width:414px){
	.slideBox{
		height:311px;
	}
	.slideBox .bd li img {
		height:311px;
	}
}
@media all and (min-width:415px){
	.slideBox{
		height:360px;
	}
	.slideBox .bd li img {
		height:360px;
	}
}

2016-07-20 19:45:29,824 htmlparser.py[line: 25] INFO: End tag: style
2016-07-20 19:45:29,824 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,824 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-20 19:45:29,825 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:29,825 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:29,825 htmlparser.py[line: 28] INFO: Data 
		
2016-07-20 19:45:29,825 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:29,825 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:29,826 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:29,826 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,826 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-20 19:45:29,826 htmlparser.py[line: 28] INFO: Data 
                  
2016-07-20 19:45:29,826 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:45:29,827 htmlparser.py[line: 28] INFO: Data 
              	
2016-07-20 19:45:29,827 htmlparser.py[line: 25] INFO: End tag: a
2016-07-20 19:45:29,827 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,827 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:29,827 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:29,828 htmlparser.py[line: 19] INFO: Start tag: ul
2016-07-20 19:45:29,828 htmlparser.py[line: 28] INFO: Data 
						
							
								
2016-07-20 19:45:29,828 htmlparser.py[line: 19] INFO: Start tag: li
2016-07-20 19:45:29,828 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:45:29,829 htmlparser.py[line: 25] INFO: End tag: img
2016-07-20 19:45:29,829 htmlparser.py[line: 25] INFO: End tag: li
2016-07-20 19:45:29,829 htmlparser.py[line: 28] INFO: Data 
							
						
					
2016-07-20 19:45:29,829 htmlparser.py[line: 25] INFO: End tag: ul
2016-07-20 19:45:29,829 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,830 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:29,830 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,830 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:29,830 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:29,831 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-20 19:45:29,831 htmlparser.py[line: 25] INFO: End tag: a
2016-07-20 19:45:29,831 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,831 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:29,831 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:29,831 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:29,832 htmlparser.py[line: 28] INFO: Data 
		
2016-07-20 19:45:29,832 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:29,832 htmlparser.py[line: 28] INFO: Data 		
		
2016-07-20 19:45:29,832 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:29,833 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:29,833 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:29,833 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,833 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:29,833 htmlparser.py[line: 28] INFO: Data 
					接口-测试商品1
				
2016-07-20 19:45:29,834 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:29,834 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,834 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:29,834 htmlparser.py[line: 28] INFO: Data 
					接口测试专用,烦请勿删,勿操作
				
2016-07-20 19:45:29,834 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:29,835 htmlparser.py[line: 28] INFO: Data 				
				
2016-07-20 19:45:29,835 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:29,835 htmlparser.py[line: 28] INFO: Data 
					单价:
					
2016-07-20 19:45:29,835 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:29,835 htmlparser.py[line: 28] INFO: Data 
					
					
						
							￥0.01
						
						
					
					
					
2016-07-20 19:45:29,835 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:29,836 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:29,836 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:29,836 htmlparser.py[line: 28] INFO: Data 销量:6件
2016-07-20 19:45:29,836 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:29,836 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,836 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:29,836 htmlparser.py[line: 28] INFO: Data 
				
					
2016-07-20 19:45:29,836 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:29,837 htmlparser.py[line: 28] INFO: Data 运费:
2016-07-20 19:45:29,837 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:29,837 htmlparser.py[line: 28] INFO: Data 4.00元
2016-07-20 19:45:29,837 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:29,837 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:29,837 htmlparser.py[line: 28] INFO: Data 
				
				
				
2016-07-20 19:45:29,837 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:29,837 htmlparser.py[line: 28] INFO: Data 
					数量:
2016-07-20 19:45:29,838 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:29,838 htmlparser.py[line: 28] INFO: Data -
2016-07-20 19:45:29,838 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:29,838 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:29,838 htmlparser.py[line: 28] INFO: Data 1
2016-07-20 19:45:29,838 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:29,838 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:29,839 htmlparser.py[line: 28] INFO: Data +
2016-07-20 19:45:29,839 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:29,839 htmlparser.py[line: 28] INFO: Data 
					
						
						
							
2016-07-20 19:45:29,839 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:45:29,839 htmlparser.py[line: 28] INFO: Data (库存：999994件)
2016-07-20 19:45:29,839 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:45:29,839 htmlparser.py[line: 28] INFO: Data 
						
						
						
					
				
2016-07-20 19:45:29,839 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:29,839 htmlparser.py[line: 28] INFO: Data  
				
2016-07-20 19:45:29,840 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:29,840 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:29,840 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-20 19:45:29,840 htmlparser.py[line: 25] INFO: End tag: input
2016-07-20 19:45:29,840 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:29,840 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-20 19:45:29,840 htmlparser.py[line: 25] INFO: End tag: input
2016-07-20 19:45:29,841 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,841 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:29,841 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:29,841 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:29,841 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:29,841 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:29,841 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,841 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:29,842 htmlparser.py[line: 28] INFO: Data 图文详情
2016-07-20 19:45:29,842 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:45:29,842 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:29,842 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,842 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:45:29,842 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:45:29,842 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:29,843 htmlparser.py[line: 28] INFO: Data 											
2016-07-20 19:45:29,843 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:29,843 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:29,843 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:45:29,843 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:45:29,843 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:29,843 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:29,843 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:45:29,844 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:45:29,844 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:29,844 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:29,844 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:45:29,844 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:45:29,844 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:29,844 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:45:29,844 htmlparser.py[line: 28] INFO: Data 接口测试专用商品,商品详情简介
2016-07-20 19:45:29,844 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:45:29,845 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:45:29,845 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:45:29,845 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:45:29,845 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:29,845 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:45:29,845 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:29,845 htmlparser.py[line: 28] INFO: Data 
		
2016-07-20 19:45:29,845 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:29,846 htmlparser.py[line: 28] INFO: Data 		
	
2016-07-20 19:45:29,846 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:45:29,846 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:29,846 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:45:29,846 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:29,847 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:29,847 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:29,848 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:29,848 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:29,848 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:29,848 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:29,848 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:29,848 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:29,848 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:29,849 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:29,849 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:29,849 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:29,849 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:29,849 htmlparser.py[line: 28] INFO: Data 
			
	var priceLimita = $(".orange").text();
	var soldCounta = $("#soldCount").text();
	var skua = $(".standard_sku").text();
	
            // 滚动窗口来判断按钮显示或隐藏
            $(window).scroll(function() {
                if ($(this).scrollTop() > 120) {
                    $('.top-bg').show(100);
                } else {
                    $('.top-bg').hide(100);
                }
            });
            
            function choose(obj,price,sku,standardSoldCount){
            	if(!$(obj).attr('disabled')){
            	if($(obj).hasClass('active')){
            		$(".orange").text(priceLimita);
                	$("#soldCount").text(soldCounta);
                	$(".standard_sku").text(skua);
                	 $(obj).removeClass('active');
            	}else{
	            	$(".standard_sku").text("(库存:"+sku+"件)");
	            	$(".orange").text("￥"+price);
	            	$("#soldCount").text("销量:"+standardSoldCount+"件");
	            	$(".spec").removeClass('active');
                    $(obj).addClass('active');
            	}
            	}
            }
            
           
            
            $(function(){
            	/* $(".spec").tap(function(){
                    if(!$(this).attr('disabled')){
                        if($(this).hasClass('active')){
                            $(this).removeClass('active');
                            
                        }else{
                        	
                        }
                    }                    
                }); */
                
            	TouchSlide({
    				slideCell : "#slideBox",
    				mainCell : ".bd ul",
    				effect : "leftLoop",
    				pageStateCell : ".pageState"
    			});            	            	
				
            	$(".bottom-details img").width($(".top").width());
            });
            
            // jQuery实现动画滚动
            $('.top-bg').click(function(event) {
                event.preventDefault();
                $('html, body').scrollTop(0);
            });
			
			$(".bottom > p img").click(function(){
                $(this).parent().next().toggle();
                if($(this).parent().next().css("display")=="block"){
                    $(this).attr("src","/images/mall/down.png");
                }else{
                    $(this).attr("src","/images/mall/up.png");
                }
            });
            
            $(".jia").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count)) {
                	count = 1;
                } else {
                	count += 1;
                }
                val.text(count);
            });
            $(".jian").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count) || count <= 1) {
                	count = 1;
                } else {
                	count -= 1;
                }
                val.text(count);
            });
            
            $(".addbtn").click(function(event){
            	if($(this).prop("disabled") == true)
            		return false;
            	var params = {
   					mallGoodsId : "26838",
   					standardId : standardId,
   					amount : $(".val").text(),
   					serial : "10549840601068216320",
   					openId : "ous64uFCCLMyXYDJ-MkNilyCI5C"
   				};
            	
            	var standard = 1;
            	if(standard == 2 && $(".active").length < 1){
    				doAlert("no", "请选择商品的规格");
    				return;
    			}
            	if(standard == 2){
            		var standardId = $(".active").attr("data");
    				params.standardId = standardId;
            	}
            	$.post("/addtocart", params, function(result){
            		if (null == result || !result.success) {
            			toast(result.message);
    					return;
    				}
    				//更新购物车数量
    				/* var cartNum = $(".cartNum").text();
    				if (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {
    					$(".carts").append("<span class='cartNum'>1</span>");
    				} else {
    					if (null != result.attach && result.attach > 0) {
    						$(".cartNum").text(result.attach);
    					}
    				} */
    				toast("已经成功加入购物车");
            	});
            });
		$(".buybtn").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			$(this).attr("disabled","disabled");
			var standard = 1;
        	if(standard == 2 && $(".active").length < 1){
				doAlert("no", "请选择商品的规格");
				$(this).removeAttr("disabled");
				return;
        	}
        	if(standard == 2){
        		var standardId = $(".active").attr("data");
        		window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;
        		return;
        	}
			window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";
		});
	
2016-07-20 19:45:29,850 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:29,850 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,850 htmlparser.py[line: 25] INFO: End tag: body
2016-07-20 19:45:29,851 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,851 htmlparser.py[line: 25] INFO: End tag: html
2016-07-20 19:45:29,851 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,851 htmlparser.py[line: 33] INFO: Comment：加入判断用户是否关注公众号功能 add by lipengfei at 2015-11-9  
2016-07-20 19:45:29,851 htmlparser.py[line: 28] INFO: Data 
  	
	
2016-07-20 19:45:29,851 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:29,851 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:29,852 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:45:29,852 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:29,852 htmlparser.py[line: 28] INFO: Data 
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	
2016-07-20 19:45:29,852 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:29,852 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:29,853 testcase.py[line: 83] INFO: 步骤[1]执行失败,停止执行用例[id=80, name=test-n-点击商品]
2016-07-20 19:45:29,853 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File E:\Projects\interface_project\interface\wechatno_wemall.py, line 108, in test_click_goods    self.assertEqual(find_flag, 1, msg=无法打开商品详情)AssertionError: 0 != 1 : 无法打开商品详情", protocol_method="get", runtime="2016-07-20 19:45:29" WHERE executed_history_id = 20160720194529 AND testcase_id = 80 AND step_id = 82 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:45:29,856 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-20 19:45:29,856 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2016-07-20 19:45:29" WHERE executed_history_id = 20160720194529 and testcase_id = 80 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:45:30,006 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-20 19:45:30,006 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194529', '102', 'test-n-点击立即购买按钮', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-20 19:45:30,007 testsuite.py[line: 63] INFO: 开始执行测试用例[id=102，name=test-n-点击立即购买按钮]
2016-07-20 19:45:30,008 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-20 19:45:30,008 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194529', '102', 'test-n-点击立即购买按钮', '无计划', 'pj_wecharno', 104, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"ToBuyGoods","function":"test_to_buy_goods","method":"get","url":"/mall/tobuy/1?","params":{"mallGoodsId":"26838","amount":1,"type":1,"serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-20 19:45:30,008 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-20 19:45:30,009 casestep.py[line: 64] INFO: 调用的方法为：ToBuyGoods.test_to_buy_goods
2016-07-20 19:45:30,009 wechatno_wemall.py[line: 219] INFO: 正在发起GET请求...
2016-07-20 19:45:30,009 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/mall/tobuy/1?serial=10549840601068216320&amount=1&mallGoodsId=26838&type=1
2016-07-20 19:45:30,009 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-20 19:45:30,019 wechatno_wemall.py[line: 225] INFO: 正在解析返回结果:





<!DOCTYPE html>
<link rel="stylesheet" href="/css/bind/banner.css?v=3.4.0-f5bd5" />  
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
        <link rel="stylesheet" href="/css/skin-nr-min.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" href="/css/cpn.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" type="text/css" href="/css/zepto.alert.css?v=3.4.0-f5bd5">
        <title>哎哟~出错啦~</title>
    </head>
    <body>
        <script type="text/javascript" src="/js/zepto.min.js?v=3.4.0-f5bd5" ></script>
        <script type="text/javascript" src="/js/zepto.alert.min.js?v=3.4.0-f5bd5"></script>
        <script type="text/javascript">
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        </script>
    </body>
</html>

2016-07-20 19:45:30,020 htmlparser.py[line: 28] INFO: Data 






2016-07-20 19:45:30,020 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:30,020 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:30,020 htmlparser.py[line: 25] INFO: End tag: link
2016-07-20 19:45:30,020 htmlparser.py[line: 28] INFO: Data   

2016-07-20 19:45:30,020 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:30,020 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-20 19:45:30,021 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:30,021 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-20 19:45:30,021 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:30,021 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:30,021 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:30,021 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:45:30,021 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:30,021 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:30,021 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:30,022 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:30,022 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:30,022 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:45:30,022 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:30,022 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-20 19:45:30,022 htmlparser.py[line: 28] INFO: Data 哎哟~出错啦~
2016-07-20 19:45:30,022 htmlparser.py[line: 25] INFO: End tag: title
2016-07-20 19:45:30,022 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:30,022 htmlparser.py[line: 25] INFO: End tag: head
2016-07-20 19:45:30,022 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:30,022 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-20 19:45:30,023 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:30,023 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:30,023 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:30,023 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:30,023 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:30,023 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:30,023 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:45:30,023 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:45:30,023 htmlparser.py[line: 28] INFO: Data 
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        
2016-07-20 19:45:30,024 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:45:30,024 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:45:30,024 htmlparser.py[line: 25] INFO: End tag: body
2016-07-20 19:45:30,024 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:30,024 htmlparser.py[line: 25] INFO: End tag: html
2016-07-20 19:45:30,024 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:45:30,024 wechatno_wemall.py[line: 231] INFO: [['', '\r\n\r\n\r\n\r\n\r\n\r\n'], ['', '\r\n'], ['link', '  \r\n'], ['link', '\r\n'], ['html', '\r\n    '], ['head', '\r\n        '], ['meta', '\r\n        '], ['meta', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['title', '哎哟~出错啦~'], ['title', '\r\n    '], ['title', '\r\n    '], ['body', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        Zepto(function($){\r\n\t\t\tfunction myAlert(content) {\r\n\t\t    \t$.dialog({\r\n\t\t    \t\tcontent : content,\r\n\t\t    \t\ttitle : "alert"\r\n\t\t    \t});\r\n\t\t    }\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tmyAlert("噢...出错了!请等待管理员处理,稍后重试");\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n        });\r\n        '], ['script', '\r\n    '], ['script', '\r\n'], ['script', '\r\n']]
2016-07-20 19:45:30,024 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-20 19:45:30,024 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-20 19:45:30" WHERE executed_history_id = 20160720194529 AND testcase_id = 102 AND step_id = 104 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:45:30,027 testcase.py[line: 101] INFO: 测试用例[id=102, name=test-n-点击立即购买按钮]执行成功
2016-07-20 19:45:30,027 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-20 19:45:30,027 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-20 19:45:30" WHERE executed_history_id = 20160720194529 and testcase_id = 102 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:45:30,029 testsuite.py[line: 74] INFO: 测试套件[id=79 ,name=微商城-模拟点击页面跳转]已执行完
2016-07-20 19:45:30,029 main.py[line: 229] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-07-20 19:45:30,029 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-07-20 19:45:30,029 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20160720194529',)
2016-07-20 19:45:30,030 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-07-20 19:45:30,030 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20160720194529')
2016-07-20 19:45:30,031 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-07-20 19:45:30,031 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20160720194529')
2016-07-20 19:45:30,032 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-07-20 19:45:30,032 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20160720194529')
2016-07-20 19:45:30,033 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-07-20 19:45:30,033 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20160720194529')
2016-07-20 19:45:30,034 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-07-20 19:45:30,034 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160720194529',)
2016-07-20 19:45:30,035 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]的测试用例执行结果
2016-07-20 19:45:30,035 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160720194529')
2016-07-20 19:45:30,037 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_wecharno, testplan：无计划]的测试用例运行结果到测试报告
2016-07-20 19:45:30,037 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-07-20 19:45:30,037 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160720194529',)
2016-07-20 19:45:30,038 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]已运行的测试用例
2016-07-20 19:45:30,038 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160720194529')
2016-07-20 19:45:30,039 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=80]步骤运行结果
2016-07-20 19:45:30,039 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 80, '20160720194529')
2016-07-20 19:45:30,041 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=102]步骤运行结果
2016-07-20 19:45:30,041 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 102, '20160720194529')
2016-07-20 19:45:30,043 htmlreporter.py[line: 177] INFO: 正在设置测试报告结果文件名
2016-07-20 19:45:30,043 htmlreporter.py[line: 187] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20160720194529.html
2016-07-20 19:45:30,043 htmlreporter.py[line: 180] INFO: 正在生成测试报告
2016-07-20 19:45:30,044 main.py[line: 252] INFO: 生成测试报告成功
2016-07-20 19:45:30,249 main.py[line: 259] INFO: E:\\Projects\\report\\test_report20160720194529.html
2016-07-20 19:45:30,249 main.py[line: 262] INFO: 正在发送测试报告邮件...
2016-07-20 19:45:30,249 main.py[line: 266] INFO: 发送邮件成功
2016-07-20 19:46:38,247 globalpy.py[line: 14] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-07-20 19:46:38,256 globalpy.py[line: 17] INFO: 正在初始化数据库[名称：SAOFUDB]对象
2016-07-20 19:46:38,261 globalpy.py[line: 20] INFO: 正在获取testlink
2016-07-20 19:46:38,322 main.py[line: 60] INFO: 正在创建测试用例报告报表
2016-07-20 19:46:38,323 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-07-20 19:46:38,324 main.py[line: 63] INFO: 正在创建测试步骤报告报表
2016-07-20 19:46:38,324 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-07-20 19:46:38,326 main.py[line: 66] INFO: 正在读取运行模式配置
2016-07-20 19:46:38,327 main.py[line: 187] INFO: 按套件运行测试
2016-07-20 19:46:38,327 main.py[line: 189] INFO: 已获取配置的套件id列表：[79]
2016-07-20 19:46:38,579 main.py[line: 205] INFO: 正在读取套件[id=79，name=微商城-模拟点击页面跳转]的协议，host，端口配置...
2016-07-20 19:46:38,580 main.py[line: 223] INFO: 正在执行测试套件[id=79 ,name=微商城-模拟点击页面跳转]
2016-07-20 19:46:38,580 testsuite.py[line: 42] INFO: 正在获取套件[id=79，name=微商城-模拟点击页面跳转]的测试用例...
2016-07-20 19:46:38,849 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-20 19:46:38,849 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194638', '80', 'test-n-点击商品', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-20 19:46:38,851 testsuite.py[line: 63] INFO: 开始执行测试用例[id=80，name=test-n-点击商品]
2016-07-20 19:46:38,851 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-20 19:46:38,852 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194638', '80', 'test-n-点击商品', '无计划', 'pj_wecharno', 82, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"Goods","function":"test_click_goods","method":"get","url":"/goods/item?","params":{"id":26838, "serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-20 19:46:38,853 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-20 19:46:38,853 casestep.py[line: 64] INFO: 调用的方法为：Goods.test_click_goods
2016-07-20 19:46:38,853 wechatno_wemall.py[line: 89] INFO: 正在发起GET请求...
2016-07-20 19:46:38,853 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/goods/item?id=26838&serial=10549840601068216320
2016-07-20 19:46:38,853 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-20 19:46:39,012 htmlparser.py[line: 28] INFO: Data 






2016-07-20 19:46:39,013 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,014 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:46:39,014 htmlparser.py[line: 25] INFO: End tag: link
2016-07-20 19:46:39,015 htmlparser.py[line: 28] INFO: Data   

2016-07-20 19:46:39,015 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,016 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-20 19:46:39,016 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,017 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-20 19:46:39,017 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,017 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:46:39,018 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,018 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:46:39,018 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,019 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:46:39,019 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,020 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:46:39,020 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,020 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:46:39,021 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,021 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:46:39,022 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,022 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-20 19:46:39,022 htmlparser.py[line: 28] INFO: Data 微商城
2016-07-20 19:46:39,023 htmlparser.py[line: 25] INFO: End tag: title
2016-07-20 19:46:39,023 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,024 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:46:39,024 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,025 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:46:39,025 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,025 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:46:39,026 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,026 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:46:39,027 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:46:39,027 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,028 htmlparser.py[line: 25] INFO: End tag: head
2016-07-20 19:46:39,028 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,029 htmlparser.py[line: 19] INFO: Start tag: style
2016-07-20 19:46:39,030 htmlparser.py[line: 28] INFO: Data 
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
	overflow: hidden;
	border-bottom: 1px solid #eaeaea;
}

.top {
	width: 90%;
	margin: 0 auto;
	padding-bottom: 1em;
}

.top p {
	margin: 0.5em 0;
	font-size: 0.8em;
}
.top>p:first-child{
	font-size:1.1em;
}

.fonts {
	font-size: 1em !important;
	margin: 0.8em 0 !important;
}


.jian {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-right: 0 none;
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
	text-align: center;
	margin-left:0.4em;
}

.val {
	background: #fff;
	display: inline-block;
	width: 3.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	text-align: center;
}

.jia {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-left: 0 none;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	text-align: center;
}

.button {
	width: 47%;
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
}

.addbtn {
	background: #edb23e;
	margin-right: 3%;
}

.buybtn {
	background: #f96364;
}

.bottom {
	border-top: 0.5em solid #eeeeee;
	padding-bottom: 3em;
    position: relative;
    width:100%;
}

.bottom .bottom-details{
	width:100%;	
	word-break:break-all;
	overflow-x: hidden; 
}

.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{
	word-break:break-all;
}

.bottom > p:first-child {
	text-indent: 1em;
}

.bottom > p img{
    width: 1em;
    position: absolute;
    top:0.8em;
    right: 1em;
}

.bottom-details p {
	text-indent: 1em;
	word-break:break-all;
}

.inline-padding {
	display: inline-block;
	padding-left: 0.8em;
}

.inline-paddings {
	display: inline-block;
	padding-left: 1.6em;
}

.footer {
	width: 100%;
	height: 3em;
	position: fixed;
	bottom: 0;
	background: #fff;
	color: #b6b6b6;
	text-align: center;
	border-top: 1px solid #eaeaea;
}

.footer a {
	color: #626262;
	display: inline-block;
	height:1em;
	line-height:1em;
	padding-top: 1em;
	padding-bottom: 1em;
}
.footer .inline-paddings-right{
    padding-top: 1em;
    float: right;
}
.footer img {
	display: inline-block;
	width: 1em;
}

.top-bg{
    position: fixed;
    bottom: 3.5em;
    right: 1em;
    width: 2em;
    display: none;
    filter:alpha(opacity=40);       /* IE */
    -moz-opacity:0.4;              /* Moz + FF */
    opacity: 0.4;     
}
.spec{
    display: inline-block;
    margin: 0 1em 0.8em 0;
    font-size:0.7em;
    padding:0.3em 1em;
    border:1px solid #ccc;
    border-radius:3px;
    cursor:pointer;
}
.fonts a.active{
    border: 2px solid #d2b57b;
}
.guige{
    float: left;
    width: 40px;
}
.guige-detail{
    margin-left: 40px;
}
.guige-detail a[disabled]{
    background: none repeat scroll 0 0 #fff;
    color: #e3e3e3;
    cursor: default;
}
/* 本例子css -------------------------------------- */
.slideBox {
	position: relative;
	width: 100%;
	height: 240px;
	overflow: hidden;
}

.slideBox .hd {
	position: absolute;
	width: 100%;
	height: 27px;
	bottom: 0;
	left: 0;
	z-index: 1;
}

.slideBox .hd img {
	width: 11px;
}

.slideBox .bd {
	position: relative;
	z-index: 0;
}

.slideBox .bd li {
	position: relative;
}

.slideBox .bd li img {
	width: 100%;
	height: 240px;
	display: block;
}

.slideBox .bd li a {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */
}

.slideBox .hd a {
	display: block;
	width: auto;
	position: absolute;
	bottom: 0.5em;
	right: 0.5em;
	padding: 0.1em 0.7em;
	text-align: center;
	color: #fff;
	background-color: rgba(0, 0, 0, 0.6);
	border-radius: 4px;
}
.slideBox>.a-img{
    position: fixed;
    top:1em;
    right: 0.5em;
    display: block;
    width:2em;
    height: 2em;
    border-radius: 2em;
    background-color: rgba(0, 0, 0, 0.6); 
    z-index: 2;
}
.slideBox>.a-img>img{
    width: 1em;            
    position: absolute;
    top:50%;
    left: 50%;
    margin-top:-0.5em;
    margin-left: -0.5em;
}
.carts{
	position: relative;
}
.cartNum{                      
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    line-height:1.2em;
    border-radius: 1.5em;
    background:#ff0000;  
    position: absolute;
    right: -0.7em;
    top: 0.3em;
    color: #fff;
}
#soldCount{
	float: right; 
	font-size: 0.8em; 
	padding-top: 0.3em;
	color:#adadad;
}
.freight{
	font-size:0.8em;
	color:#adadad;
}
.standard_sku{
	font-size:0.9em;
	color:#adadad;
}
@media all and (max-width:320px){
	.slideBox{
		height:240px;
	}
	.slideBox .bd li img {
		height:240px;
	}
}
@media all and (min-width:321px) and (max-width:360px){
	.slideBox{
		height:270px;
	}
	.slideBox .bd li img {
		height:270px;
	}
}
@media all and (min-width:361px) and (max-width:375px){
	.slideBox{
		height:281px;
	}
	.slideBox .bd li img {
		height:281px;
	}
}
@media all and (min-width:376px) and (max-width:384px){
	.slideBox{
		height:288px;
	}
	.slideBox .bd li img {
		height:288px;
	}
}
@media all and (min-width:385px) and (max-width:414px){
	.slideBox{
		height:311px;
	}
	.slideBox .bd li img {
		height:311px;
	}
}
@media all and (min-width:415px){
	.slideBox{
		height:360px;
	}
	.slideBox .bd li img {
		height:360px;
	}
}

2016-07-20 19:46:39,031 htmlparser.py[line: 25] INFO: End tag: style
2016-07-20 19:46:39,031 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,032 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-20 19:46:39,032 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:46:39,032 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:46:39,033 htmlparser.py[line: 28] INFO: Data 
		
2016-07-20 19:46:39,033 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:46:39,033 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:46:39,034 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:46:39,034 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,035 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-20 19:46:39,035 htmlparser.py[line: 28] INFO: Data 
                  
2016-07-20 19:46:39,035 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:46:39,036 htmlparser.py[line: 28] INFO: Data 
              	
2016-07-20 19:46:39,036 htmlparser.py[line: 25] INFO: End tag: a
2016-07-20 19:46:39,036 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,037 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:46:39,037 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:46:39,037 htmlparser.py[line: 19] INFO: Start tag: ul
2016-07-20 19:46:39,038 htmlparser.py[line: 28] INFO: Data 
						
							
								
2016-07-20 19:46:39,038 htmlparser.py[line: 19] INFO: Start tag: li
2016-07-20 19:46:39,039 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:46:39,039 htmlparser.py[line: 25] INFO: End tag: img
2016-07-20 19:46:39,039 htmlparser.py[line: 25] INFO: End tag: li
2016-07-20 19:46:39,040 htmlparser.py[line: 28] INFO: Data 
							
						
					
2016-07-20 19:46:39,040 htmlparser.py[line: 25] INFO: End tag: ul
2016-07-20 19:46:39,041 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,041 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:46:39,041 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,042 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:46:39,042 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:46:39,042 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-20 19:46:39,043 htmlparser.py[line: 25] INFO: End tag: a
2016-07-20 19:46:39,043 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,043 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:46:39,044 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:46:39,044 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:46:39,044 htmlparser.py[line: 28] INFO: Data 
		
2016-07-20 19:46:39,045 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:46:39,045 htmlparser.py[line: 28] INFO: Data 		
		
2016-07-20 19:46:39,045 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:46:39,045 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:46:39,046 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:46:39,046 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,046 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:46:39,046 htmlparser.py[line: 28] INFO: Data 
					接口-测试商品1
				
2016-07-20 19:46:39,046 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:46:39,047 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,047 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:46:39,047 htmlparser.py[line: 28] INFO: Data 
					接口测试专用,烦请勿删,勿操作
				
2016-07-20 19:46:39,047 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:46:39,048 htmlparser.py[line: 28] INFO: Data 				
				
2016-07-20 19:46:39,048 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:46:39,048 htmlparser.py[line: 28] INFO: Data 
					单价:
					
2016-07-20 19:46:39,048 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:46:39,048 htmlparser.py[line: 28] INFO: Data 
					
					
						
							￥0.01
						
						
					
					
					
2016-07-20 19:46:39,049 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:46:39,049 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:46:39,049 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:46:39,049 htmlparser.py[line: 28] INFO: Data 销量:6件
2016-07-20 19:46:39,050 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:46:39,050 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,050 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:46:39,050 htmlparser.py[line: 28] INFO: Data 
				
					
2016-07-20 19:46:39,051 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:46:39,051 htmlparser.py[line: 28] INFO: Data 运费:
2016-07-20 19:46:39,051 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:46:39,051 htmlparser.py[line: 28] INFO: Data 4.00元
2016-07-20 19:46:39,051 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:46:39,052 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:46:39,052 htmlparser.py[line: 28] INFO: Data 
				
				
				
2016-07-20 19:46:39,052 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:46:39,052 htmlparser.py[line: 28] INFO: Data 
					数量:
2016-07-20 19:46:39,052 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:46:39,053 htmlparser.py[line: 28] INFO: Data -
2016-07-20 19:46:39,053 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:46:39,053 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:46:39,053 htmlparser.py[line: 28] INFO: Data 1
2016-07-20 19:46:39,053 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:46:39,054 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:46:39,054 htmlparser.py[line: 28] INFO: Data +
2016-07-20 19:46:39,055 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:46:39,055 htmlparser.py[line: 28] INFO: Data 
					
						
						
							
2016-07-20 19:46:39,055 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-20 19:46:39,055 htmlparser.py[line: 28] INFO: Data (库存：999994件)
2016-07-20 19:46:39,056 htmlparser.py[line: 25] INFO: End tag: span
2016-07-20 19:46:39,056 htmlparser.py[line: 28] INFO: Data 
						
						
						
					
				
2016-07-20 19:46:39,056 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:46:39,056 htmlparser.py[line: 28] INFO: Data  
				
2016-07-20 19:46:39,056 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:46:39,057 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:46:39,057 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-20 19:46:39,057 htmlparser.py[line: 25] INFO: End tag: input
2016-07-20 19:46:39,057 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:46:39,058 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-20 19:46:39,058 htmlparser.py[line: 25] INFO: End tag: input
2016-07-20 19:46:39,058 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,058 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:46:39,058 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:46:39,059 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:46:39,059 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:46:39,059 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:46:39,059 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,060 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:46:39,060 htmlparser.py[line: 28] INFO: Data 图文详情
2016-07-20 19:46:39,060 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:46:39,061 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:46:39,061 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,061 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-20 19:46:39,062 htmlparser.py[line: 28] INFO: Data 
					
2016-07-20 19:46:39,062 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:46:39,062 htmlparser.py[line: 28] INFO: Data 											
2016-07-20 19:46:39,062 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:46:39,062 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:46:39,063 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:46:39,063 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:46:39,063 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:46:39,063 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:46:39,063 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:46:39,064 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:46:39,064 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:46:39,064 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:46:39,065 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:46:39,065 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:46:39,065 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:46:39,065 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-20 19:46:39,065 htmlparser.py[line: 28] INFO: Data 接口测试专用商品,商品详情简介
2016-07-20 19:46:39,066 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-20 19:46:39,066 htmlparser.py[line: 25] INFO: End tag: br
2016-07-20 19:46:39,066 htmlparser.py[line: 25] INFO: End tag: p
2016-07-20 19:46:39,066 htmlparser.py[line: 28] INFO: Data 
				
2016-07-20 19:46:39,066 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:46:39,067 htmlparser.py[line: 28] INFO: Data 
			
2016-07-20 19:46:39,067 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:46:39,067 htmlparser.py[line: 28] INFO: Data 
		
2016-07-20 19:46:39,067 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:46:39,067 htmlparser.py[line: 28] INFO: Data 		
	
2016-07-20 19:46:39,068 htmlparser.py[line: 25] INFO: End tag: div
2016-07-20 19:46:39,068 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:46:39,068 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-20 19:46:39,068 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:46:39,068 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:46:39,069 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:46:39,069 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:46:39,069 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:46:39,069 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:46:39,069 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:46:39,070 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:46:39,070 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:46:39,070 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:46:39,070 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:46:39,071 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:46:39,071 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:46:39,071 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:46:39,071 htmlparser.py[line: 28] INFO: Data 
			
	var priceLimita = $(".orange").text();
	var soldCounta = $("#soldCount").text();
	var skua = $(".standard_sku").text();
	
            // 滚动窗口来判断按钮显示或隐藏
            $(window).scroll(function() {
                if ($(this).scrollTop() > 120) {
                    $('.top-bg').show(100);
                } else {
                    $('.top-bg').hide(100);
                }
            });
            
            function choose(obj,price,sku,standardSoldCount){
            	if(!$(obj).attr('disabled')){
            	if($(obj).hasClass('active')){
            		$(".orange").text(priceLimita);
                	$("#soldCount").text(soldCounta);
                	$(".standard_sku").text(skua);
                	 $(obj).removeClass('active');
            	}else{
	            	$(".standard_sku").text("(库存:"+sku+"件)");
	            	$(".orange").text("￥"+price);
	            	$("#soldCount").text("销量:"+standardSoldCount+"件");
	            	$(".spec").removeClass('active');
                    $(obj).addClass('active');
            	}
            	}
            }
            
           
            
            $(function(){
            	/* $(".spec").tap(function(){
                    if(!$(this).attr('disabled')){
                        if($(this).hasClass('active')){
                            $(this).removeClass('active');
                            
                        }else{
                        	
                        }
                    }                    
                }); */
                
            	TouchSlide({
    				slideCell : "#slideBox",
    				mainCell : ".bd ul",
    				effect : "leftLoop",
    				pageStateCell : ".pageState"
    			});            	            	
				
            	$(".bottom-details img").width($(".top").width());
            });
            
            // jQuery实现动画滚动
            $('.top-bg').click(function(event) {
                event.preventDefault();
                $('html, body').scrollTop(0);
            });
			
			$(".bottom > p img").click(function(){
                $(this).parent().next().toggle();
                if($(this).parent().next().css("display")=="block"){
                    $(this).attr("src","/images/mall/down.png");
                }else{
                    $(this).attr("src","/images/mall/up.png");
                }
            });
            
            $(".jia").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count)) {
                	count = 1;
                } else {
                	count += 1;
                }
                val.text(count);
            });
            $(".jian").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count) || count <= 1) {
                	count = 1;
                } else {
                	count -= 1;
                }
                val.text(count);
            });
            
            $(".addbtn").click(function(event){
            	if($(this).prop("disabled") == true)
            		return false;
            	var params = {
   					mallGoodsId : "26838",
   					standardId : standardId,
   					amount : $(".val").text(),
   					serial : "10549840601068216320",
   					openId : "ous64uFCCLMyXYDJ-MkNilyCI5C"
   				};
            	
            	var standard = 1;
            	if(standard == 2 && $(".active").length < 1){
    				doAlert("no", "请选择商品的规格");
    				return;
    			}
            	if(standard == 2){
            		var standardId = $(".active").attr("data");
    				params.standardId = standardId;
            	}
            	$.post("/addtocart", params, function(result){
            		if (null == result || !result.success) {
            			toast(result.message);
    					return;
    				}
    				//更新购物车数量
    				/* var cartNum = $(".cartNum").text();
    				if (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {
    					$(".carts").append("<span class='cartNum'>1</span>");
    				} else {
    					if (null != result.attach && result.attach > 0) {
    						$(".cartNum").text(result.attach);
    					}
    				} */
    				toast("已经成功加入购物车");
            	});
            });
		$(".buybtn").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			$(this).attr("disabled","disabled");
			var standard = 1;
        	if(standard == 2 && $(".active").length < 1){
				doAlert("no", "请选择商品的规格");
				$(this).removeAttr("disabled");
				return;
        	}
        	if(standard == 2){
        		var standardId = $(".active").attr("data");
        		window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;
        		return;
        	}
			window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";
		});
	
2016-07-20 19:46:39,072 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:46:39,072 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,072 htmlparser.py[line: 25] INFO: End tag: body
2016-07-20 19:46:39,072 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,073 htmlparser.py[line: 25] INFO: End tag: html
2016-07-20 19:46:39,073 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,073 htmlparser.py[line: 28] INFO: Data 
  	
	
2016-07-20 19:46:39,073 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:46:39,074 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:46:39,074 htmlparser.py[line: 28] INFO: Data 
	
2016-07-20 19:46:39,074 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:46:39,075 htmlparser.py[line: 28] INFO: Data 
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	
2016-07-20 19:46:39,075 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:46:39,076 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,076 wechatno_wemall.py[line: 103] INFO: ['', '\r\n\r\n\r\n\r\n\r\n\r\n']
2016-07-20 19:46:39,076 wechatno_wemall.py[line: 103] INFO: ['', '\r\n']
2016-07-20 19:46:39,077 wechatno_wemall.py[line: 103] INFO: ['link', '  \r\n']
2016-07-20 19:46:39,077 wechatno_wemall.py[line: 103] INFO: ['link', '\r\n']
2016-07-20 19:46:39,077 wechatno_wemall.py[line: 103] INFO: ['html', '\r\n']
2016-07-20 19:46:39,077 wechatno_wemall.py[line: 103] INFO: ['head', '\r\n']
2016-07-20 19:46:39,077 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-20 19:46:39,077 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-20 19:46:39,077 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-20 19:46:39,077 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-20 19:46:39,077 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-20 19:46:39,077 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-20 19:46:39,078 wechatno_wemall.py[line: 103] INFO: ['title', '微商城']
2016-07-20 19:46:39,078 wechatno_wemall.py[line: 103] INFO: ['title', '\r\n']
2016-07-20 19:46:39,078 wechatno_wemall.py[line: 103] INFO: ['link', '\r\n']
2016-07-20 19:46:39,078 wechatno_wemall.py[line: 103] INFO: ['link', '\r\n']
2016-07-20 19:46:39,078 wechatno_wemall.py[line: 103] INFO: ['link', '\r\n']
2016-07-20 19:46:39,078 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-20 19:46:39,078 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-20 19:46:39,078 wechatno_wemall.py[line: 103] INFO: ['style', '\r\n* {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\nhtml {\r\n\tcolor: #626262;\r\n}\r\n\r\na {\r\n\ttext-decoration: none;\r\n}\r\n\r\nol,ul {\r\n\tlist-style: outside none none;\r\n}\r\n\r\n.left {\r\n\tfloat: left;\r\n}\r\n\r\n.right {\r\n\tfloat: right;\r\n}\r\n\r\n.in-block {\r\n\tdisplay: inline-block;\r\n}\r\n\r\n.orange {\r\n\tcolor: #c58d04;\r\n}\r\n\r\n.grey {\r\n\tcolor: #adadad;\r\n}\r\n\r\n.bg-color {\r\n\tbackground: #ececec;\r\n}\r\n\r\n#wrapper {\r\n\twidth: 100%;\r\n\tmargin: 0 auto;\r\n}\r\n\r\n.header {\r\n\twidth: 100%;\r\n\toverflow: hidden;\r\n\tborder-bottom: 1px solid #eaeaea;\r\n}\r\n\r\n.top {\r\n\twidth: 90%;\r\n\tmargin: 0 auto;\r\n\tpadding-bottom: 1em;\r\n}\r\n\r\n.top p {\r\n\tmargin: 0.5em 0;\r\n\tfont-size: 0.8em;\r\n}\r\n.top>p:first-child{\r\n\tfont-size:1.1em;\r\n}\r\n\r\n.fonts {\r\n\tfont-size: 1em !important;\r\n\tmargin: 0.8em 0 !important;\r\n}\r\n\r\n\r\n.jian {\r\n\tdisplay: inline-block;\r\n\twidth: 1.5em;\r\n\theight: 1.5em;\r\n\tline-height: 1.5em;\r\n\tborder: 1px solid #d1d1d1;\r\n\tborder-right: 0 none;\r\n\tborder-top-left-radius: 4px;\r\n\tborder-bottom-left-radius: 4px;\r\n\ttext-align: center;\r\n\tmargin-left:0.4em;\r\n}\r\n\r\n.val {\r\n\tbackground: #fff;\r\n\tdisplay: inline-block;\r\n\twidth: 3.5em;\r\n\theight: 1.5em;\r\n\tline-height: 1.5em;\r\n\tborder: 1px solid #d1d1d1;\r\n\ttext-align: center;\r\n}\r\n\r\n.jia {\r\n\tdisplay: inline-block;\r\n\twidth: 1.5em;\r\n\theight: 1.5em;\r\n\tline-height: 1.5em;\r\n\tborder: 1px solid #d1d1d1;\r\n\tborder-left: 0 none;\r\n\tborder-top-right-radius: 4px;\r\n\tborder-bottom-right-radius: 4px;\r\n\ttext-align: center;\r\n}\r\n\r\n.button {\r\n\twidth: 47%;\r\n\theight: 3em;\r\n\tcolor: #fff;\r\n\tborder: none;\r\n\tborder-radius: 4px;\r\n}\r\n\r\n.addbtn {\r\n\tbackground: #edb23e;\r\n\tmargin-right: 3%;\r\n}\r\n\r\n.buybtn {\r\n\tbackground: #f96364;\r\n}\r\n\r\n.bottom {\r\n\tborder-top: 0.5em solid #eeeeee;\r\n\tpadding-bottom: 3em;\r\n    position: relative;\r\n    width:100%;\r\n}\r\n\r\n.bottom .bottom-details{\r\n\twidth:100%;\t\r\n\tword-break:break-all;\r\n\toverflow-x: hidden; \r\n}\r\n\r\n.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{\r\n\tword-break:break-all;\r\n}\r\n\r\n.bottom > p:first-child {\r\n\ttext-indent: 1em;\r\n}\r\n\r\n.bottom > p img{\r\n    width: 1em;\r\n    position: absolute;\r\n    top:0.8em;\r\n    right: 1em;\r\n}\r\n\r\n.bottom-details p {\r\n\ttext-indent: 1em;\r\n\tword-break:break-all;\r\n}\r\n\r\n.inline-padding {\r\n\tdisplay: inline-block;\r\n\tpadding-left: 0.8em;\r\n}\r\n\r\n.inline-paddings {\r\n\tdisplay: inline-block;\r\n\tpadding-left: 1.6em;\r\n}\r\n\r\n.footer {\r\n\twidth: 100%;\r\n\theight: 3em;\r\n\tposition: fixed;\r\n\tbottom: 0;\r\n\tbackground: #fff;\r\n\tcolor: #b6b6b6;\r\n\ttext-align: center;\r\n\tborder-top: 1px solid #eaeaea;\r\n}\r\n\r\n.footer a {\r\n\tcolor: #626262;\r\n\tdisplay: inline-block;\r\n\theight:1em;\r\n\tline-height:1em;\r\n\tpadding-top: 1em;\r\n\tpadding-bottom: 1em;\r\n}\r\n.footer .inline-paddings-right{\r\n    padding-top: 1em;\r\n    float: right;\r\n}\r\n.footer img {\r\n\tdisplay: inline-block;\r\n\twidth: 1em;\r\n}\r\n\r\n.top-bg{\r\n    position: fixed;\r\n    bottom: 3.5em;\r\n    right: 1em;\r\n    width: 2em;\r\n    display: none;\r\n    filter:alpha(opacity=40);       /* IE */\r\n    -moz-opacity:0.4;              /* Moz + FF */\r\n    opacity: 0.4;     \r\n}\r\n.spec{\r\n    display: inline-block;\r\n    margin: 0 1em 0.8em 0;\r\n    font-size:0.7em;\r\n    padding:0.3em 1em;\r\n    border:1px solid #ccc;\r\n    border-radius:3px;\r\n    cursor:pointer;\r\n}\r\n.fonts a.active{\r\n    border: 2px solid #d2b57b;\r\n}\r\n.guige{\r\n    float: left;\r\n    width: 40px;\r\n}\r\n.guige-detail{\r\n    margin-left: 40px;\r\n}\r\n.guige-detail a[disabled]{\r\n    background: none repeat scroll 0 0 #fff;\r\n    color: #e3e3e3;\r\n    cursor: default;\r\n}\r\n/* 本例子css -------------------------------------- */\r\n.slideBox {\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\theight: 240px;\r\n\toverflow: hidden;\r\n}\r\n\r\n.slideBox .hd {\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: 27px;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tz-index: 1;\r\n}\r\n\r\n.slideBox .hd img {\r\n\twidth: 11px;\r\n}\r\n\r\n.slideBox .bd {\r\n\tposition: relative;\r\n\tz-index: 0;\r\n}\r\n\r\n.slideBox .bd li {\r\n\tposition: relative;\r\n}\r\n\r\n.slideBox .bd li img {\r\n\twidth: 100%;\r\n\theight: 240px;\r\n\tdisplay: block;\r\n}\r\n\r\n.slideBox .bd li a {\r\n\t-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */\r\n}\r\n\r\n.slideBox .hd a {\r\n\tdisplay: block;\r\n\twidth: auto;\r\n\tposition: absolute;\r\n\tbottom: 0.5em;\r\n\tright: 0.5em;\r\n\tpadding: 0.1em 0.7em;\r\n\ttext-align: center;\r\n\tcolor: #fff;\r\n\tbackground-color: rgba(0, 0, 0, 0.6);\r\n\tborder-radius: 4px;\r\n}\r\n.slideBox>.a-img{\r\n    position: fixed;\r\n    top:1em;\r\n    right: 0.5em;\r\n    display: block;\r\n    width:2em;\r\n    height: 2em;\r\n    border-radius: 2em;\r\n    background-color: rgba(0, 0, 0, 0.6); \r\n    z-index: 2;\r\n}\r\n.slideBox>.a-img>img{\r\n    width: 1em;            \r\n    position: absolute;\r\n    top:50%;\r\n    left: 50%;\r\n    margin-top:-0.5em;\r\n    margin-left: -0.5em;\r\n}\r\n.carts{\r\n\tposition: relative;\r\n}\r\n.cartNum{                      \r\n    display: inline-block;\r\n    width: 1.2em;\r\n    height: 1.2em;\r\n    line-height:1.2em;\r\n    border-radius: 1.5em;\r\n    background:#ff0000;  \r\n    position: absolute;\r\n    right: -0.7em;\r\n    top: 0.3em;\r\n    color: #fff;\r\n}\r\n#soldCount{\r\n\tfloat: right; \r\n\tfont-size: 0.8em; \r\n\tpadding-top: 0.3em;\r\n\tcolor:#adadad;\r\n}\r\n.freight{\r\n\tfont-size:0.8em;\r\n\tcolor:#adadad;\r\n}\r\n.standard_sku{\r\n\tfont-size:0.9em;\r\n\tcolor:#adadad;\r\n}\r\n@media all and (max-width:320px){\r\n\t.slideBox{\r\n\t\theight:240px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:240px;\r\n\t}\r\n}\r\n@media all and (min-width:321px) and (max-width:360px){\r\n\t.slideBox{\r\n\t\theight:270px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:270px;\r\n\t}\r\n}\r\n@media all and (min-width:361px) and (max-width:375px){\r\n\t.slideBox{\r\n\t\theight:281px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:281px;\r\n\t}\r\n}\r\n@media all and (min-width:376px) and (max-width:384px){\r\n\t.slideBox{\r\n\t\theight:288px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:288px;\r\n\t}\r\n}\r\n@media all and (min-width:385px) and (max-width:414px){\r\n\t.slideBox{\r\n\t\theight:311px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:311px;\r\n\t}\r\n}\r\n@media all and (min-width:415px){\r\n\t.slideBox{\r\n\t\theight:360px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:360px;\r\n\t}\r\n}\r\n']
2016-07-20 19:46:39,079 wechatno_wemall.py[line: 103] INFO: ['style', '\r\n']
2016-07-20 19:46:39,079 wechatno_wemall.py[line: 103] INFO: ['body', '\r\n\t']
2016-07-20 19:46:39,079 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t']
2016-07-20 19:46:39,079 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t']
2016-07-20 19:46:39,079 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t']
2016-07-20 19:46:39,079 wechatno_wemall.py[line: 103] INFO: ['a', '\r\n                  ']
2016-07-20 19:46:39,079 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n              \t']
2016-07-20 19:46:39,079 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t\t\t\t']
2016-07-20 19:46:39,079 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t\t']
2016-07-20 19:46:39,080 wechatno_wemall.py[line: 103] INFO: ['ul', '\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t']
2016-07-20 19:46:39,080 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t']
2016-07-20 19:46:39,080 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t\t\t\t']
2016-07-20 19:46:39,080 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t\t\t\t']
2016-07-20 19:46:39,080 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t\t']
2016-07-20 19:46:39,080 wechatno_wemall.py[line: 103] INFO: ['a', '\r\n\t\t\t\t']
2016-07-20 19:46:39,080 wechatno_wemall.py[line: 103] INFO: ['a', '\r\n\t\t\t']
2016-07-20 19:46:39,080 wechatno_wemall.py[line: 103] INFO: ['a', '\r\n\t\t']
2016-07-20 19:46:39,080 wechatno_wemall.py[line: 103] INFO: ['a', '\t\t\r\n\t\t']
2016-07-20 19:46:39,080 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t']
2016-07-20 19:46:39,081 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t']
2016-07-20 19:46:39,081 wechatno_wemall.py[line: 103] INFO: ['p', '\r\n\t\t\t\t\t接口-测试商品1\r\n\t\t\t\t']
2016-07-20 19:46:39,081 wechatno_wemall.py[line: 103] INFO: ['p', '\r\n\t\t\t\t']
2016-07-20 19:46:39,081 wechatno_wemall.py[line: 103] INFO: ['p', '\r\n\t\t\t\t\t接口测试专用,烦请勿删,勿操作\r\n\t\t\t\t']
2016-07-20 19:46:39,081 wechatno_wemall.py[line: 103] INFO: ['p', '\t\t\t\t\r\n\t\t\t\t']
2016-07-20 19:46:39,081 wechatno_wemall.py[line: 103] INFO: ['p', '\r\n\t\t\t\t\t单价:\r\n\t\t\t\t\t']
2016-07-20 19:46:39,081 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t￥0.01\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t']
2016-07-20 19:46:39,081 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\t']
2016-07-20 19:46:39,081 wechatno_wemall.py[line: 103] INFO: ['span', '销量:6件']
2016-07-20 19:46:39,082 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t']
2016-07-20 19:46:39,082 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\r\n\t\t\t\t\t']
2016-07-20 19:46:39,082 wechatno_wemall.py[line: 103] INFO: ['p', '运费:']
2016-07-20 19:46:39,082 wechatno_wemall.py[line: 103] INFO: ['span', '4.00元']
2016-07-20 19:46:39,082 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t']
2016-07-20 19:46:39,082 wechatno_wemall.py[line: 103] INFO: ['p', '\r\n\t\t\t\t\t数量:']
2016-07-20 19:46:39,082 wechatno_wemall.py[line: 103] INFO: ['span', '-']
2016-07-20 19:46:39,082 wechatno_wemall.py[line: 103] INFO: ['span', '1']
2016-07-20 19:46:39,082 wechatno_wemall.py[line: 103] INFO: ['span', '+']
2016-07-20 19:46:39,082 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t']
2016-07-20 19:46:39,082 wechatno_wemall.py[line: 103] INFO: ['span', '(库存：999994件)']
2016-07-20 19:46:39,083 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t']
2016-07-20 19:46:39,083 wechatno_wemall.py[line: 103] INFO: ['span', ' \r\n\t\t\t\t']
2016-07-20 19:46:39,083 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t\t']
2016-07-20 19:46:39,083 wechatno_wemall.py[line: 103] INFO: ['input', '\r\n\t\t\t\t\t']
2016-07-20 19:46:39,083 wechatno_wemall.py[line: 103] INFO: ['input', '\r\n\t\t\t\t']
2016-07-20 19:46:39,083 wechatno_wemall.py[line: 103] INFO: ['input', '\r\n\t\t\t']
2016-07-20 19:46:39,083 wechatno_wemall.py[line: 103] INFO: ['input', '\r\n\t\t\t']
2016-07-20 19:46:39,083 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t']
2016-07-20 19:46:39,083 wechatno_wemall.py[line: 103] INFO: ['p', '图文详情']
2016-07-20 19:46:39,083 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t\t\t\t']
2016-07-20 19:46:39,083 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t\t']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['p', '\t\t\t\t\t\t\t\t\t\t\t']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['p', '接口测试专用商品,商品详情简介']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['br', '\r\n\t\t\t\t']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['br', '\r\n\t\t\t']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['br', '\r\n\t\t']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['br', '\t\t\r\n\t']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['br', '\r\n\t']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n    ']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n    ']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n\t']
2016-07-20 19:46:39,084 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n\t']
2016-07-20 19:46:39,085 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n\t\t\t\r\n\tvar priceLimita = $(".orange").text();\r\n\tvar soldCounta = $("#soldCount").text();\r\n\tvar skua = $(".standard_sku").text();\r\n\t\r\n            // 滚动窗口来判断按钮显示或隐藏\r\n            $(window).scroll(function() {\r\n                if ($(this).scrollTop() > 120) {\r\n                    $(\'.top-bg\').show(100);\r\n                } else {\r\n                    $(\'.top-bg\').hide(100);\r\n                }\r\n            });\r\n            \r\n            function choose(obj,price,sku,standardSoldCount){\r\n            \tif(!$(obj).attr(\'disabled\')){\r\n            \tif($(obj).hasClass(\'active\')){\r\n            \t\t$(".orange").text(priceLimita);\r\n                \t$("#soldCount").text(soldCounta);\r\n                \t$(".standard_sku").text(skua);\r\n                \t $(obj).removeClass(\'active\');\r\n            \t}else{\r\n\t            \t$(".standard_sku").text("(库存:"+sku+"件)");\r\n\t            \t$(".orange").text("￥"+price);\r\n\t            \t$("#soldCount").text("销量:"+standardSoldCount+"件");\r\n\t            \t$(".spec").removeClass(\'active\');\r\n                    $(obj).addClass(\'active\');\r\n            \t}\r\n            \t}\r\n            }\r\n            \r\n           \r\n            \r\n            $(function(){\r\n            \t/* $(".spec").tap(function(){\r\n                    if(!$(this).attr(\'disabled\')){\r\n                        if($(this).hasClass(\'active\')){\r\n                            $(this).removeClass(\'active\');\r\n                            \r\n                        }else{\r\n                        \t\r\n                        }\r\n                    }                    \r\n                }); */\r\n                \r\n            \tTouchSlide({\r\n    \t\t\t\tslideCell : "#slideBox",\r\n    \t\t\t\tmainCell : ".bd ul",\r\n    \t\t\t\teffect : "leftLoop",\r\n    \t\t\t\tpageStateCell : ".pageState"\r\n    \t\t\t});            \t            \t\r\n\t\t\t\t\r\n            \t$(".bottom-details img").width($(".top").width());\r\n            });\r\n            \r\n            // jQuery实现动画滚动\r\n            $(\'.top-bg\').click(function(event) {\r\n                event.preventDefault();\r\n                $(\'html, body\').scrollTop(0);\r\n            });\r\n\t\t\t\r\n\t\t\t$(".bottom > p img").click(function(){\r\n                $(this).parent().next().toggle();\r\n                if($(this).parent().next().css("display")=="block"){\r\n                    $(this).attr("src","/images/mall/down.png");\r\n                }else{\r\n                    $(this).attr("src","/images/mall/up.png");\r\n                }\r\n            });\r\n            \r\n            $(".jia").click(function(){\r\n            \tvar val = $(this).siblings(".val");\r\n            \tvar count = parseInt(val.text());\r\n                if (isNaN(count)) {\r\n                \tcount = 1;\r\n                } else {\r\n                \tcount += 1;\r\n                }\r\n                val.text(count);\r\n            });\r\n            $(".jian").click(function(){\r\n            \tvar val = $(this).siblings(".val");\r\n            \tvar count = parseInt(val.text());\r\n                if (isNaN(count) || count <= 1) {\r\n                \tcount = 1;\r\n                } else {\r\n                \tcount -= 1;\r\n                }\r\n                val.text(count);\r\n            });\r\n            \r\n            $(".addbtn").click(function(event){\r\n            \tif($(this).prop("disabled") == true)\r\n            \t\treturn false;\r\n            \tvar params = {\r\n   \t\t\t\t\tmallGoodsId : "26838",\r\n   \t\t\t\t\tstandardId : standardId,\r\n   \t\t\t\t\tamount : $(".val").text(),\r\n   \t\t\t\t\tserial : "10549840601068216320",\r\n   \t\t\t\t\topenId : "ous64uFCCLMyXYDJ-MkNilyCI5C"\r\n   \t\t\t\t};\r\n            \t\r\n            \tvar standard = 1;\r\n            \tif(standard == 2 && $(".active").length < 1){\r\n    \t\t\t\tdoAlert("no", "请选择商品的规格");\r\n    \t\t\t\treturn;\r\n    \t\t\t}\r\n            \tif(standard == 2){\r\n            \t\tvar standardId = $(".active").attr("data");\r\n    \t\t\t\tparams.standardId = standardId;\r\n            \t}\r\n            \t$.post("/addtocart", params, function(result){\r\n            \t\tif (null == result || !result.success) {\r\n            \t\t\ttoast(result.message);\r\n    \t\t\t\t\treturn;\r\n    \t\t\t\t}\r\n    \t\t\t\t//更新购物车数量\r\n    \t\t\t\t/* var cartNum = $(".cartNum").text();\r\n    \t\t\t\tif (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {\r\n    \t\t\t\t\t$(".carts").append("<span class=\'cartNum\'>1</span>");\r\n    \t\t\t\t} else {\r\n    \t\t\t\t\tif (null != result.attach && result.attach > 0) {\r\n    \t\t\t\t\t\t$(".cartNum").text(result.attach);\r\n    \t\t\t\t\t}\r\n    \t\t\t\t} */\r\n    \t\t\t\ttoast("已经成功加入购物车");\r\n            \t});\r\n            });\r\n\t\t$(".buybtn").click(function(event) {\r\n\t\t\tif($(this).prop("disabled") == true)\r\n        \t\treturn false;\r\n\t\t\t$(this).attr("disabled","disabled");\r\n\t\t\tvar standard = 1;\r\n        \tif(standard == 2 && $(".active").length < 1){\r\n\t\t\t\tdoAlert("no", "请选择商品的规格");\r\n\t\t\t\t$(this).removeAttr("disabled");\r\n\t\t\t\treturn;\r\n        \t}\r\n        \tif(standard == 2){\r\n        \t\tvar standardId = $(".active").attr("data");\r\n        \t\twindow.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;\r\n        \t\treturn;\r\n        \t}\r\n\t\t\twindow.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";\r\n\t\t});\r\n\t']
2016-07-20 19:46:39,086 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-20 19:46:39,086 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-20 19:46:39,086 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-20 19:46:39,086 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n  \t\r\n\t']
2016-07-20 19:46:39,086 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n\t']
2016-07-20 19:46:39,086 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n\t\t$(function() {\r\n\t\t\t//var SHOP_SERIAL = getCookie("SHOP_SERIAL");\r\n\t\t\tvar SHOP_SERIAL = "10549840601068216320";\r\n\t\t\tif(null != SHOP_SERIAL && SHOP_SERIAL != ""){\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl : \'/saofu_mobile/checkUserBindStatus\',\r\n\t\t\t\t\tdata : {\r\n\t\t\t\t\t\t"serial" : SHOP_SERIAL\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype : \'post\',\r\n\t\t\t\t\tcache : false,\r\n\t\t\t\t\tdataType : \'json\',\r\n\t\t\t\t\tsuccess : function(data) {\r\n\t\t\t\t\t\tif (data != null) {\r\n\t\t\t\t\t\t\tvar guildFocusStr = data.guildFocusStr;\r\n\t\t\t\t\t\t\tif(guildFocusStr != null && guildFocusStr == "1"){\r\n\t\t\t\t\t\t\t\tvar hasBindedShop = data.hasBindedShop;\r\n\t\t\t\t\t\t\t\tif(hasBindedShop == "0"){\r\n\t\t\t\t\t\t\t\t\tvar qrName = data.QRPublicName;\r\n\t\t\t\t\t\t\t\t\tvar qrUrl = data.QRCodeURL;\r\n\t\t\t\t\t\t\t\t\tif(qrName != "" && qrUrl != ""){\r\n\t\t\t\t\t\t\t\t\t\tvar params = qrName+"**"+qrUrl;\r\n\t\t\t\t\t\t\t\t\t\tfollowModule(params);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t},\r\n\t\t\t\t\terror : function() {\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\t\t\t\r\n\t']
2016-07-20 19:46:39,086 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-20 19:46:39,087 testcase.py[line: 83] INFO: 步骤[1]执行失败,停止执行用例[id=80, name=test-n-点击商品]
2016-07-20 19:46:39,087 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File E:\Projects\interface_project\interface\wechatno_wemall.py, line 109, in test_click_goods    self.assertEqual(find_flag, 1, msg=无法打开商品详情)AssertionError: 0 != 1 : 无法打开商品详情", protocol_method="get", runtime="2016-07-20 19:46:38" WHERE executed_history_id = 20160720194638 AND testcase_id = 80 AND step_id = 82 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:46:39,089 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-20 19:46:39,090 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2016-07-20 19:46:38" WHERE executed_history_id = 20160720194638 and testcase_id = 80 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:46:39,215 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-20 19:46:39,215 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194638', '102', 'test-n-点击立即购买按钮', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-20 19:46:39,217 testsuite.py[line: 63] INFO: 开始执行测试用例[id=102，name=test-n-点击立即购买按钮]
2016-07-20 19:46:39,217 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-20 19:46:39,217 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160720194638', '102', 'test-n-点击立即购买按钮', '无计划', 'pj_wecharno', 104, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"ToBuyGoods","function":"test_to_buy_goods","method":"get","url":"/mall/tobuy/1?","params":{"mallGoodsId":"26838","amount":1,"type":1,"serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-20 19:46:39,218 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-20 19:46:39,219 casestep.py[line: 64] INFO: 调用的方法为：ToBuyGoods.test_to_buy_goods
2016-07-20 19:46:39,219 wechatno_wemall.py[line: 220] INFO: 正在发起GET请求...
2016-07-20 19:46:39,219 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/mall/tobuy/1?serial=10549840601068216320&mallGoodsId=26838&type=1&amount=1
2016-07-20 19:46:39,219 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-20 19:46:39,230 wechatno_wemall.py[line: 226] INFO: 正在解析返回结果:





<!DOCTYPE html>
<link rel="stylesheet" href="/css/bind/banner.css?v=3.4.0-f5bd5" />  
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
        <link rel="stylesheet" href="/css/skin-nr-min.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" href="/css/cpn.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" type="text/css" href="/css/zepto.alert.css?v=3.4.0-f5bd5">
        <title>哎哟~出错啦~</title>
    </head>
    <body>
        <script type="text/javascript" src="/js/zepto.min.js?v=3.4.0-f5bd5" ></script>
        <script type="text/javascript" src="/js/zepto.alert.min.js?v=3.4.0-f5bd5"></script>
        <script type="text/javascript">
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        </script>
    </body>
</html>

2016-07-20 19:46:39,230 htmlparser.py[line: 28] INFO: Data 






2016-07-20 19:46:39,230 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,230 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:46:39,230 htmlparser.py[line: 25] INFO: End tag: link
2016-07-20 19:46:39,230 htmlparser.py[line: 28] INFO: Data   

2016-07-20 19:46:39,231 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,231 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-20 19:46:39,231 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:46:39,231 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-20 19:46:39,231 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:46:39,232 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:46:39,232 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:46:39,232 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-20 19:46:39,232 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:46:39,232 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:46:39,232 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:46:39,232 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:46:39,232 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:46:39,232 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-20 19:46:39,232 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:46:39,233 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-20 19:46:39,233 htmlparser.py[line: 28] INFO: Data 哎哟~出错啦~
2016-07-20 19:46:39,233 htmlparser.py[line: 25] INFO: End tag: title
2016-07-20 19:46:39,233 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:46:39,233 htmlparser.py[line: 25] INFO: End tag: head
2016-07-20 19:46:39,233 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:46:39,233 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-20 19:46:39,233 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:46:39,233 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:46:39,233 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:46:39,233 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:46:39,234 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:46:39,234 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:46:39,234 htmlparser.py[line: 28] INFO: Data 
        
2016-07-20 19:46:39,234 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-20 19:46:39,234 htmlparser.py[line: 28] INFO: Data 
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        
2016-07-20 19:46:39,234 htmlparser.py[line: 25] INFO: End tag: script
2016-07-20 19:46:39,234 htmlparser.py[line: 28] INFO: Data 
    
2016-07-20 19:46:39,234 htmlparser.py[line: 25] INFO: End tag: body
2016-07-20 19:46:39,234 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,235 htmlparser.py[line: 25] INFO: End tag: html
2016-07-20 19:46:39,235 htmlparser.py[line: 28] INFO: Data 

2016-07-20 19:46:39,235 wechatno_wemall.py[line: 232] INFO: [['', '\r\n\r\n\r\n\r\n\r\n\r\n'], ['', '\r\n'], ['link', '  \r\n'], ['link', '\r\n'], ['html', '\r\n    '], ['head', '\r\n        '], ['meta', '\r\n        '], ['meta', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['title', '哎哟~出错啦~'], ['title', '\r\n    '], ['title', '\r\n    '], ['body', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        Zepto(function($){\r\n\t\t\tfunction myAlert(content) {\r\n\t\t    \t$.dialog({\r\n\t\t    \t\tcontent : content,\r\n\t\t    \t\ttitle : "alert"\r\n\t\t    \t});\r\n\t\t    }\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tmyAlert("噢...出错了!请等待管理员处理,稍后重试");\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n        });\r\n        '], ['script', '\r\n    '], ['script', '\r\n'], ['script', '\r\n']]
2016-07-20 19:46:39,235 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-20 19:46:39,235 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-20 19:46:39" WHERE executed_history_id = 20160720194638 AND testcase_id = 102 AND step_id = 104 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:46:39,237 testcase.py[line: 101] INFO: 测试用例[id=102, name=test-n-点击立即购买按钮]执行成功
2016-07-20 19:46:39,238 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-20 19:46:39,238 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-20 19:46:39" WHERE executed_history_id = 20160720194638 and testcase_id = 102 AND project='pj_wecharno' AND testplan='无计划'
2016-07-20 19:46:39,240 testsuite.py[line: 74] INFO: 测试套件[id=79 ,name=微商城-模拟点击页面跳转]已执行完
2016-07-20 19:46:39,240 main.py[line: 229] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-07-20 19:46:39,241 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-07-20 19:46:39,241 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20160720194638',)
2016-07-20 19:46:39,242 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-07-20 19:46:39,242 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20160720194638')
2016-07-20 19:46:39,243 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-07-20 19:46:39,243 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20160720194638')
2016-07-20 19:46:39,244 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-07-20 19:46:39,244 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20160720194638')
2016-07-20 19:46:39,245 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-07-20 19:46:39,245 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20160720194638')
2016-07-20 19:46:39,246 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-07-20 19:46:39,246 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160720194638',)
2016-07-20 19:46:39,248 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]的测试用例执行结果
2016-07-20 19:46:39,248 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160720194638')
2016-07-20 19:46:39,249 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_wecharno, testplan：无计划]的测试用例运行结果到测试报告
2016-07-20 19:46:39,250 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-07-20 19:46:39,250 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160720194638',)
2016-07-20 19:46:39,251 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]已运行的测试用例
2016-07-20 19:46:39,251 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160720194638')
2016-07-20 19:46:39,253 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=80]步骤运行结果
2016-07-20 19:46:39,253 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 80, '20160720194638')
2016-07-20 19:46:39,254 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=102]步骤运行结果
2016-07-20 19:46:39,254 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 102, '20160720194638')
2016-07-20 19:46:39,256 htmlreporter.py[line: 177] INFO: 正在设置测试报告结果文件名
2016-07-20 19:46:39,256 htmlreporter.py[line: 187] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20160720194638.html
2016-07-20 19:46:39,257 htmlreporter.py[line: 180] INFO: 正在生成测试报告
2016-07-20 19:46:39,258 main.py[line: 252] INFO: 生成测试报告成功
2016-07-20 19:46:39,474 main.py[line: 259] INFO: E:\\Projects\\report\\test_report20160720194638.html
2016-07-20 19:46:39,474 main.py[line: 262] INFO: 正在发送测试报告邮件...
2016-07-20 19:46:39,475 main.py[line: 266] INFO: 发送邮件成功
2016-07-21 10:07:52,304 globalpy.py[line: 14] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-07-21 10:07:52,316 globalpy.py[line: 17] INFO: 正在初始化数据库[名称：SAOFUDB]对象
2016-07-21 10:07:52,322 globalpy.py[line: 20] INFO: 正在获取testlink
2016-07-21 10:07:52,386 main.py[line: 60] INFO: 正在创建测试用例报告报表
2016-07-21 10:07:52,386 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-07-21 10:07:52,388 main.py[line: 63] INFO: 正在创建测试步骤报告报表
2016-07-21 10:07:52,388 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-07-21 10:07:52,389 main.py[line: 66] INFO: 正在读取运行模式配置
2016-07-21 10:07:52,391 main.py[line: 187] INFO: 按套件运行测试
2016-07-21 10:07:52,391 main.py[line: 189] INFO: 已获取配置的套件id列表：[79]
2016-07-21 10:07:52,753 main.py[line: 205] INFO: 正在读取套件[id=79，name=微商城-模拟点击页面跳转]的协议，host，端口配置...
2016-07-21 10:07:52,754 main.py[line: 223] INFO: 正在执行测试套件[id=79 ,name=微商城-模拟点击页面跳转]
2016-07-21 10:07:52,754 testsuite.py[line: 42] INFO: 正在获取套件[id=79，name=微商城-模拟点击页面跳转]的测试用例...
2016-07-21 10:07:53,058 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-21 10:07:53,058 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721100752', '80', 'test-n-点击商品', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-21 10:07:53,060 testsuite.py[line: 63] INFO: 开始执行测试用例[id=80，name=test-n-点击商品]
2016-07-21 10:07:53,060 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 10:07:53,060 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721100752', '80', 'test-n-点击商品', '无计划', 'pj_wecharno', 82, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"Goods","function":"test_click_goods","method":"get","url":"/goods/item?","params":{"id":26838, "serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-21 10:07:53,061 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 10:07:53,061 casestep.py[line: 64] INFO: 调用的方法为：Goods.test_click_goods
2016-07-21 10:07:53,061 wechatno_wemall.py[line: 89] INFO: 正在发起GET请求...
2016-07-21 10:07:53,061 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/goods/item?serial=10549840601068216320&id=26838
2016-07-21 10:07:53,061 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-21 10:07:53,233 htmlparser.py[line: 28] INFO: Data 






2016-07-21 10:07:53,233 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,233 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:07:53,233 htmlparser.py[line: 25] INFO: End tag: link
2016-07-21 10:07:53,234 htmlparser.py[line: 28] INFO: Data   

2016-07-21 10:07:53,234 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,234 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-21 10:07:53,234 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,234 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-21 10:07:53,234 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,234 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:07:53,234 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,234 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:07:53,235 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,235 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:07:53,235 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,235 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:07:53,235 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,235 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:07:53,235 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,236 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:07:53,236 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,236 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-21 10:07:53,236 htmlparser.py[line: 28] INFO: Data 微商城
2016-07-21 10:07:53,237 htmlparser.py[line: 25] INFO: End tag: title
2016-07-21 10:07:53,238 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,238 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:07:53,238 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,239 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:07:53,239 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,240 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:07:53,240 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,240 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:07:53,241 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:07:53,241 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,241 htmlparser.py[line: 25] INFO: End tag: head
2016-07-21 10:07:53,242 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,242 htmlparser.py[line: 19] INFO: Start tag: style
2016-07-21 10:07:53,243 htmlparser.py[line: 28] INFO: Data 
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
	overflow: hidden;
	border-bottom: 1px solid #eaeaea;
}

.top {
	width: 90%;
	margin: 0 auto;
	padding-bottom: 1em;
}

.top p {
	margin: 0.5em 0;
	font-size: 0.8em;
}
.top>p:first-child{
	font-size:1.1em;
}

.fonts {
	font-size: 1em !important;
	margin: 0.8em 0 !important;
}


.jian {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-right: 0 none;
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
	text-align: center;
	margin-left:0.4em;
}

.val {
	background: #fff;
	display: inline-block;
	width: 3.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	text-align: center;
}

.jia {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-left: 0 none;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	text-align: center;
}

.button {
	width: 47%;
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
}

.addbtn {
	background: #edb23e;
	margin-right: 3%;
}

.buybtn {
	background: #f96364;
}

.bottom {
	border-top: 0.5em solid #eeeeee;
	padding-bottom: 3em;
    position: relative;
    width:100%;
}

.bottom .bottom-details{
	width:100%;	
	word-break:break-all;
	overflow-x: hidden; 
}

.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{
	word-break:break-all;
}

.bottom > p:first-child {
	text-indent: 1em;
}

.bottom > p img{
    width: 1em;
    position: absolute;
    top:0.8em;
    right: 1em;
}

.bottom-details p {
	text-indent: 1em;
	word-break:break-all;
}

.inline-padding {
	display: inline-block;
	padding-left: 0.8em;
}

.inline-paddings {
	display: inline-block;
	padding-left: 1.6em;
}

.footer {
	width: 100%;
	height: 3em;
	position: fixed;
	bottom: 0;
	background: #fff;
	color: #b6b6b6;
	text-align: center;
	border-top: 1px solid #eaeaea;
}

.footer a {
	color: #626262;
	display: inline-block;
	height:1em;
	line-height:1em;
	padding-top: 1em;
	padding-bottom: 1em;
}
.footer .inline-paddings-right{
    padding-top: 1em;
    float: right;
}
.footer img {
	display: inline-block;
	width: 1em;
}

.top-bg{
    position: fixed;
    bottom: 3.5em;
    right: 1em;
    width: 2em;
    display: none;
    filter:alpha(opacity=40);       /* IE */
    -moz-opacity:0.4;              /* Moz + FF */
    opacity: 0.4;     
}
.spec{
    display: inline-block;
    margin: 0 1em 0.8em 0;
    font-size:0.7em;
    padding:0.3em 1em;
    border:1px solid #ccc;
    border-radius:3px;
    cursor:pointer;
}
.fonts a.active{
    border: 2px solid #d2b57b;
}
.guige{
    float: left;
    width: 40px;
}
.guige-detail{
    margin-left: 40px;
}
.guige-detail a[disabled]{
    background: none repeat scroll 0 0 #fff;
    color: #e3e3e3;
    cursor: default;
}
/* 本例子css -------------------------------------- */
.slideBox {
	position: relative;
	width: 100%;
	height: 240px;
	overflow: hidden;
}

.slideBox .hd {
	position: absolute;
	width: 100%;
	height: 27px;
	bottom: 0;
	left: 0;
	z-index: 1;
}

.slideBox .hd img {
	width: 11px;
}

.slideBox .bd {
	position: relative;
	z-index: 0;
}

.slideBox .bd li {
	position: relative;
}

.slideBox .bd li img {
	width: 100%;
	height: 240px;
	display: block;
}

.slideBox .bd li a {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */
}

.slideBox .hd a {
	display: block;
	width: auto;
	position: absolute;
	bottom: 0.5em;
	right: 0.5em;
	padding: 0.1em 0.7em;
	text-align: center;
	color: #fff;
	background-color: rgba(0, 0, 0, 0.6);
	border-radius: 4px;
}
.slideBox>.a-img{
    position: fixed;
    top:1em;
    right: 0.5em;
    display: block;
    width:2em;
    height: 2em;
    border-radius: 2em;
    background-color: rgba(0, 0, 0, 0.6); 
    z-index: 2;
}
.slideBox>.a-img>img{
    width: 1em;            
    position: absolute;
    top:50%;
    left: 50%;
    margin-top:-0.5em;
    margin-left: -0.5em;
}
.carts{
	position: relative;
}
.cartNum{                      
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    line-height:1.2em;
    border-radius: 1.5em;
    background:#ff0000;  
    position: absolute;
    right: -0.7em;
    top: 0.3em;
    color: #fff;
}
#soldCount{
	float: right; 
	font-size: 0.8em; 
	padding-top: 0.3em;
	color:#adadad;
}
.freight{
	font-size:0.8em;
	color:#adadad;
}
.standard_sku{
	font-size:0.9em;
	color:#adadad;
}
@media all and (max-width:320px){
	.slideBox{
		height:240px;
	}
	.slideBox .bd li img {
		height:240px;
	}
}
@media all and (min-width:321px) and (max-width:360px){
	.slideBox{
		height:270px;
	}
	.slideBox .bd li img {
		height:270px;
	}
}
@media all and (min-width:361px) and (max-width:375px){
	.slideBox{
		height:281px;
	}
	.slideBox .bd li img {
		height:281px;
	}
}
@media all and (min-width:376px) and (max-width:384px){
	.slideBox{
		height:288px;
	}
	.slideBox .bd li img {
		height:288px;
	}
}
@media all and (min-width:385px) and (max-width:414px){
	.slideBox{
		height:311px;
	}
	.slideBox .bd li img {
		height:311px;
	}
}
@media all and (min-width:415px){
	.slideBox{
		height:360px;
	}
	.slideBox .bd li img {
		height:360px;
	}
}

2016-07-21 10:07:53,244 htmlparser.py[line: 25] INFO: End tag: style
2016-07-21 10:07:53,244 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,245 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-21 10:07:53,245 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:07:53,245 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:07:53,246 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:07:53,246 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:07:53,247 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:07:53,247 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:07:53,247 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,247 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:07:53,248 htmlparser.py[line: 28] INFO: Data 
                  
2016-07-21 10:07:53,248 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:07:53,248 htmlparser.py[line: 28] INFO: Data 
              	
2016-07-21 10:07:53,248 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:07:53,249 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,249 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:07:53,249 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:07:53,249 htmlparser.py[line: 19] INFO: Start tag: ul
2016-07-21 10:07:53,250 htmlparser.py[line: 28] INFO: Data 
						
							
								
2016-07-21 10:07:53,250 htmlparser.py[line: 19] INFO: Start tag: li
2016-07-21 10:07:53,250 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:07:53,250 htmlparser.py[line: 25] INFO: End tag: img
2016-07-21 10:07:53,251 htmlparser.py[line: 25] INFO: End tag: li
2016-07-21 10:07:53,251 htmlparser.py[line: 28] INFO: Data 
							
						
					
2016-07-21 10:07:53,251 htmlparser.py[line: 25] INFO: End tag: ul
2016-07-21 10:07:53,251 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,251 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:07:53,252 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,252 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:07:53,252 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:07:53,252 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:07:53,253 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:07:53,253 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,253 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:07:53,254 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:07:53,254 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:07:53,255 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:07:53,255 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:07:53,255 htmlparser.py[line: 28] INFO: Data 		
		
2016-07-21 10:07:53,256 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:07:53,256 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:07:53,256 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:07:53,256 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,257 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:07:53,257 htmlparser.py[line: 28] INFO: Data 
					接口-测试商品1
				
2016-07-21 10:07:53,257 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:07:53,257 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,258 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:07:53,258 htmlparser.py[line: 28] INFO: Data 
					接口测试专用,烦请勿删,勿操作
				
2016-07-21 10:07:53,258 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:07:53,258 htmlparser.py[line: 28] INFO: Data 				
				
2016-07-21 10:07:53,259 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:07:53,259 htmlparser.py[line: 28] INFO: Data 
					单价:
					
2016-07-21 10:07:53,259 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:07:53,259 htmlparser.py[line: 28] INFO: Data 
					
					
						
							￥0.01
						
						
					
					
					
2016-07-21 10:07:53,259 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:07:53,260 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:07:53,260 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:07:53,260 htmlparser.py[line: 28] INFO: Data 销量:6件
2016-07-21 10:07:53,270 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:07:53,271 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,271 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:07:53,271 htmlparser.py[line: 28] INFO: Data 
				
					
2016-07-21 10:07:53,271 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:07:53,272 htmlparser.py[line: 28] INFO: Data 运费:
2016-07-21 10:07:53,272 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:07:53,272 htmlparser.py[line: 28] INFO: Data 4.00元
2016-07-21 10:07:53,272 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:07:53,272 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:07:53,272 htmlparser.py[line: 28] INFO: Data 
				
				
				
2016-07-21 10:07:53,272 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:07:53,272 htmlparser.py[line: 28] INFO: Data 
					数量:
2016-07-21 10:07:53,272 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:07:53,273 htmlparser.py[line: 28] INFO: Data -
2016-07-21 10:07:53,273 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:07:53,273 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:07:53,273 htmlparser.py[line: 28] INFO: Data 1
2016-07-21 10:07:53,273 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:07:53,273 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:07:53,273 htmlparser.py[line: 28] INFO: Data +
2016-07-21 10:07:53,273 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:07:53,273 htmlparser.py[line: 28] INFO: Data 
					
						
						
							
2016-07-21 10:07:53,273 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:07:53,273 htmlparser.py[line: 28] INFO: Data (库存：999994件)
2016-07-21 10:07:53,273 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:07:53,273 htmlparser.py[line: 28] INFO: Data 
						
						
						
					
				
2016-07-21 10:07:53,273 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:07:53,275 htmlparser.py[line: 28] INFO: Data  
				
2016-07-21 10:07:53,275 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:07:53,275 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:07:53,275 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:07:53,275 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:07:53,275 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:07:53,276 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:07:53,276 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:07:53,276 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,276 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:07:53,276 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:07:53,276 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:07:53,276 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:07:53,276 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:07:53,276 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,276 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:07:53,276 htmlparser.py[line: 28] INFO: Data 图文详情
2016-07-21 10:07:53,276 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:07:53,276 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:07:53,276 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,277 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:07:53,277 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:07:53,277 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:07:53,277 htmlparser.py[line: 28] INFO: Data 											
2016-07-21 10:07:53,278 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:07:53,278 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:07:53,278 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:07:53,278 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:07:53,278 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:07:53,278 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:07:53,278 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:07:53,279 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:07:53,279 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:07:53,279 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:07:53,279 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:07:53,279 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:07:53,279 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:07:53,280 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:07:53,280 htmlparser.py[line: 28] INFO: Data 接口测试专用商品,商品详情简介
2016-07-21 10:07:53,280 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:07:53,280 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:07:53,280 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:07:53,280 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:07:53,280 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:07:53,280 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:07:53,280 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:07:53,281 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:07:53,281 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:07:53,281 htmlparser.py[line: 28] INFO: Data 		
	
2016-07-21 10:07:53,281 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:07:53,281 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:07:53,281 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:07:53,281 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:07:53,281 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:07:53,281 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:07:53,282 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:07:53,282 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:07:53,282 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:07:53,282 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:07:53,282 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:07:53,282 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:07:53,282 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:07:53,282 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:07:53,282 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:07:53,282 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:07:53,283 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:07:53,283 htmlparser.py[line: 28] INFO: Data 
			
	var priceLimita = $(".orange").text();
	var soldCounta = $("#soldCount").text();
	var skua = $(".standard_sku").text();
	
            // 滚动窗口来判断按钮显示或隐藏
            $(window).scroll(function() {
                if ($(this).scrollTop() > 120) {
                    $('.top-bg').show(100);
                } else {
                    $('.top-bg').hide(100);
                }
            });
            
            function choose(obj,price,sku,standardSoldCount){
            	if(!$(obj).attr('disabled')){
            	if($(obj).hasClass('active')){
            		$(".orange").text(priceLimita);
                	$("#soldCount").text(soldCounta);
                	$(".standard_sku").text(skua);
                	 $(obj).removeClass('active');
            	}else{
	            	$(".standard_sku").text("(库存:"+sku+"件)");
	            	$(".orange").text("￥"+price);
	            	$("#soldCount").text("销量:"+standardSoldCount+"件");
	            	$(".spec").removeClass('active');
                    $(obj).addClass('active');
            	}
            	}
            }
            
           
            
            $(function(){
            	/* $(".spec").tap(function(){
                    if(!$(this).attr('disabled')){
                        if($(this).hasClass('active')){
                            $(this).removeClass('active');
                            
                        }else{
                        	
                        }
                    }                    
                }); */
                
            	TouchSlide({
    				slideCell : "#slideBox",
    				mainCell : ".bd ul",
    				effect : "leftLoop",
    				pageStateCell : ".pageState"
    			});            	            	
				
            	$(".bottom-details img").width($(".top").width());
            });
            
            // jQuery实现动画滚动
            $('.top-bg').click(function(event) {
                event.preventDefault();
                $('html, body').scrollTop(0);
            });
			
			$(".bottom > p img").click(function(){
                $(this).parent().next().toggle();
                if($(this).parent().next().css("display")=="block"){
                    $(this).attr("src","/images/mall/down.png");
                }else{
                    $(this).attr("src","/images/mall/up.png");
                }
            });
            
            $(".jia").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count)) {
                	count = 1;
                } else {
                	count += 1;
                }
                val.text(count);
            });
            $(".jian").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count) || count <= 1) {
                	count = 1;
                } else {
                	count -= 1;
                }
                val.text(count);
            });
            
            $(".addbtn").click(function(event){
            	if($(this).prop("disabled") == true)
            		return false;
            	var params = {
   					mallGoodsId : "26838",
   					standardId : standardId,
   					amount : $(".val").text(),
   					serial : "10549840601068216320",
   					openId : "ous64uFCCLMyXYDJ-MkNilyCI5C"
   				};
            	
            	var standard = 1;
            	if(standard == 2 && $(".active").length < 1){
    				doAlert("no", "请选择商品的规格");
    				return;
    			}
            	if(standard == 2){
            		var standardId = $(".active").attr("data");
    				params.standardId = standardId;
            	}
            	$.post("/addtocart", params, function(result){
            		if (null == result || !result.success) {
            			toast(result.message);
    					return;
    				}
    				//更新购物车数量
    				/* var cartNum = $(".cartNum").text();
    				if (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {
    					$(".carts").append("<span class='cartNum'>1</span>");
    				} else {
    					if (null != result.attach && result.attach > 0) {
    						$(".cartNum").text(result.attach);
    					}
    				} */
    				toast("已经成功加入购物车");
            	});
            });
		$(".buybtn").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			$(this).attr("disabled","disabled");
			var standard = 1;
        	if(standard == 2 && $(".active").length < 1){
				doAlert("no", "请选择商品的规格");
				$(this).removeAttr("disabled");
				return;
        	}
        	if(standard == 2){
        		var standardId = $(".active").attr("data");
        		window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;
        		return;
        	}
			window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";
		});
	
2016-07-21 10:07:53,284 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:07:53,284 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,284 htmlparser.py[line: 25] INFO: End tag: body
2016-07-21 10:07:53,284 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,284 htmlparser.py[line: 25] INFO: End tag: html
2016-07-21 10:07:53,284 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,284 htmlparser.py[line: 28] INFO: Data 
  	
	
2016-07-21 10:07:53,284 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:07:53,285 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:07:53,285 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:07:53,285 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:07:53,285 htmlparser.py[line: 28] INFO: Data 
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	
2016-07-21 10:07:53,285 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:07:53,285 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,285 wechatno_wemall.py[line: 103] INFO: ['', '\r\n\r\n\r\n\r\n\r\n\r\n']
2016-07-21 10:07:53,285 wechatno_wemall.py[line: 103] INFO: ['', '\r\n']
2016-07-21 10:07:53,286 wechatno_wemall.py[line: 103] INFO: ['link', '  \r\n']
2016-07-21 10:07:53,286 wechatno_wemall.py[line: 103] INFO: ['link', '\r\n']
2016-07-21 10:07:53,286 wechatno_wemall.py[line: 103] INFO: ['html', '\r\n']
2016-07-21 10:07:53,286 wechatno_wemall.py[line: 103] INFO: ['head', '\r\n']
2016-07-21 10:07:53,286 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-21 10:07:53,286 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-21 10:07:53,286 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-21 10:07:53,286 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-21 10:07:53,286 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-21 10:07:53,287 wechatno_wemall.py[line: 103] INFO: ['meta', '\r\n']
2016-07-21 10:07:53,287 wechatno_wemall.py[line: 103] INFO: ['title', '微商城']
2016-07-21 10:07:53,287 wechatno_wemall.py[line: 103] INFO: ['title', '\r\n']
2016-07-21 10:07:53,287 wechatno_wemall.py[line: 103] INFO: ['link', '\r\n']
2016-07-21 10:07:53,287 wechatno_wemall.py[line: 103] INFO: ['link', '\r\n']
2016-07-21 10:07:53,287 wechatno_wemall.py[line: 103] INFO: ['link', '\r\n']
2016-07-21 10:07:53,287 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-21 10:07:53,287 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-21 10:07:53,287 wechatno_wemall.py[line: 103] INFO: ['style', '\r\n* {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\nhtml {\r\n\tcolor: #626262;\r\n}\r\n\r\na {\r\n\ttext-decoration: none;\r\n}\r\n\r\nol,ul {\r\n\tlist-style: outside none none;\r\n}\r\n\r\n.left {\r\n\tfloat: left;\r\n}\r\n\r\n.right {\r\n\tfloat: right;\r\n}\r\n\r\n.in-block {\r\n\tdisplay: inline-block;\r\n}\r\n\r\n.orange {\r\n\tcolor: #c58d04;\r\n}\r\n\r\n.grey {\r\n\tcolor: #adadad;\r\n}\r\n\r\n.bg-color {\r\n\tbackground: #ececec;\r\n}\r\n\r\n#wrapper {\r\n\twidth: 100%;\r\n\tmargin: 0 auto;\r\n}\r\n\r\n.header {\r\n\twidth: 100%;\r\n\toverflow: hidden;\r\n\tborder-bottom: 1px solid #eaeaea;\r\n}\r\n\r\n.top {\r\n\twidth: 90%;\r\n\tmargin: 0 auto;\r\n\tpadding-bottom: 1em;\r\n}\r\n\r\n.top p {\r\n\tmargin: 0.5em 0;\r\n\tfont-size: 0.8em;\r\n}\r\n.top>p:first-child{\r\n\tfont-size:1.1em;\r\n}\r\n\r\n.fonts {\r\n\tfont-size: 1em !important;\r\n\tmargin: 0.8em 0 !important;\r\n}\r\n\r\n\r\n.jian {\r\n\tdisplay: inline-block;\r\n\twidth: 1.5em;\r\n\theight: 1.5em;\r\n\tline-height: 1.5em;\r\n\tborder: 1px solid #d1d1d1;\r\n\tborder-right: 0 none;\r\n\tborder-top-left-radius: 4px;\r\n\tborder-bottom-left-radius: 4px;\r\n\ttext-align: center;\r\n\tmargin-left:0.4em;\r\n}\r\n\r\n.val {\r\n\tbackground: #fff;\r\n\tdisplay: inline-block;\r\n\twidth: 3.5em;\r\n\theight: 1.5em;\r\n\tline-height: 1.5em;\r\n\tborder: 1px solid #d1d1d1;\r\n\ttext-align: center;\r\n}\r\n\r\n.jia {\r\n\tdisplay: inline-block;\r\n\twidth: 1.5em;\r\n\theight: 1.5em;\r\n\tline-height: 1.5em;\r\n\tborder: 1px solid #d1d1d1;\r\n\tborder-left: 0 none;\r\n\tborder-top-right-radius: 4px;\r\n\tborder-bottom-right-radius: 4px;\r\n\ttext-align: center;\r\n}\r\n\r\n.button {\r\n\twidth: 47%;\r\n\theight: 3em;\r\n\tcolor: #fff;\r\n\tborder: none;\r\n\tborder-radius: 4px;\r\n}\r\n\r\n.addbtn {\r\n\tbackground: #edb23e;\r\n\tmargin-right: 3%;\r\n}\r\n\r\n.buybtn {\r\n\tbackground: #f96364;\r\n}\r\n\r\n.bottom {\r\n\tborder-top: 0.5em solid #eeeeee;\r\n\tpadding-bottom: 3em;\r\n    position: relative;\r\n    width:100%;\r\n}\r\n\r\n.bottom .bottom-details{\r\n\twidth:100%;\t\r\n\tword-break:break-all;\r\n\toverflow-x: hidden; \r\n}\r\n\r\n.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{\r\n\tword-break:break-all;\r\n}\r\n\r\n.bottom > p:first-child {\r\n\ttext-indent: 1em;\r\n}\r\n\r\n.bottom > p img{\r\n    width: 1em;\r\n    position: absolute;\r\n    top:0.8em;\r\n    right: 1em;\r\n}\r\n\r\n.bottom-details p {\r\n\ttext-indent: 1em;\r\n\tword-break:break-all;\r\n}\r\n\r\n.inline-padding {\r\n\tdisplay: inline-block;\r\n\tpadding-left: 0.8em;\r\n}\r\n\r\n.inline-paddings {\r\n\tdisplay: inline-block;\r\n\tpadding-left: 1.6em;\r\n}\r\n\r\n.footer {\r\n\twidth: 100%;\r\n\theight: 3em;\r\n\tposition: fixed;\r\n\tbottom: 0;\r\n\tbackground: #fff;\r\n\tcolor: #b6b6b6;\r\n\ttext-align: center;\r\n\tborder-top: 1px solid #eaeaea;\r\n}\r\n\r\n.footer a {\r\n\tcolor: #626262;\r\n\tdisplay: inline-block;\r\n\theight:1em;\r\n\tline-height:1em;\r\n\tpadding-top: 1em;\r\n\tpadding-bottom: 1em;\r\n}\r\n.footer .inline-paddings-right{\r\n    padding-top: 1em;\r\n    float: right;\r\n}\r\n.footer img {\r\n\tdisplay: inline-block;\r\n\twidth: 1em;\r\n}\r\n\r\n.top-bg{\r\n    position: fixed;\r\n    bottom: 3.5em;\r\n    right: 1em;\r\n    width: 2em;\r\n    display: none;\r\n    filter:alpha(opacity=40);       /* IE */\r\n    -moz-opacity:0.4;              /* Moz + FF */\r\n    opacity: 0.4;     \r\n}\r\n.spec{\r\n    display: inline-block;\r\n    margin: 0 1em 0.8em 0;\r\n    font-size:0.7em;\r\n    padding:0.3em 1em;\r\n    border:1px solid #ccc;\r\n    border-radius:3px;\r\n    cursor:pointer;\r\n}\r\n.fonts a.active{\r\n    border: 2px solid #d2b57b;\r\n}\r\n.guige{\r\n    float: left;\r\n    width: 40px;\r\n}\r\n.guige-detail{\r\n    margin-left: 40px;\r\n}\r\n.guige-detail a[disabled]{\r\n    background: none repeat scroll 0 0 #fff;\r\n    color: #e3e3e3;\r\n    cursor: default;\r\n}\r\n/* 本例子css -------------------------------------- */\r\n.slideBox {\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\theight: 240px;\r\n\toverflow: hidden;\r\n}\r\n\r\n.slideBox .hd {\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: 27px;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tz-index: 1;\r\n}\r\n\r\n.slideBox .hd img {\r\n\twidth: 11px;\r\n}\r\n\r\n.slideBox .bd {\r\n\tposition: relative;\r\n\tz-index: 0;\r\n}\r\n\r\n.slideBox .bd li {\r\n\tposition: relative;\r\n}\r\n\r\n.slideBox .bd li img {\r\n\twidth: 100%;\r\n\theight: 240px;\r\n\tdisplay: block;\r\n}\r\n\r\n.slideBox .bd li a {\r\n\t-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */\r\n}\r\n\r\n.slideBox .hd a {\r\n\tdisplay: block;\r\n\twidth: auto;\r\n\tposition: absolute;\r\n\tbottom: 0.5em;\r\n\tright: 0.5em;\r\n\tpadding: 0.1em 0.7em;\r\n\ttext-align: center;\r\n\tcolor: #fff;\r\n\tbackground-color: rgba(0, 0, 0, 0.6);\r\n\tborder-radius: 4px;\r\n}\r\n.slideBox>.a-img{\r\n    position: fixed;\r\n    top:1em;\r\n    right: 0.5em;\r\n    display: block;\r\n    width:2em;\r\n    height: 2em;\r\n    border-radius: 2em;\r\n    background-color: rgba(0, 0, 0, 0.6); \r\n    z-index: 2;\r\n}\r\n.slideBox>.a-img>img{\r\n    width: 1em;            \r\n    position: absolute;\r\n    top:50%;\r\n    left: 50%;\r\n    margin-top:-0.5em;\r\n    margin-left: -0.5em;\r\n}\r\n.carts{\r\n\tposition: relative;\r\n}\r\n.cartNum{                      \r\n    display: inline-block;\r\n    width: 1.2em;\r\n    height: 1.2em;\r\n    line-height:1.2em;\r\n    border-radius: 1.5em;\r\n    background:#ff0000;  \r\n    position: absolute;\r\n    right: -0.7em;\r\n    top: 0.3em;\r\n    color: #fff;\r\n}\r\n#soldCount{\r\n\tfloat: right; \r\n\tfont-size: 0.8em; \r\n\tpadding-top: 0.3em;\r\n\tcolor:#adadad;\r\n}\r\n.freight{\r\n\tfont-size:0.8em;\r\n\tcolor:#adadad;\r\n}\r\n.standard_sku{\r\n\tfont-size:0.9em;\r\n\tcolor:#adadad;\r\n}\r\n@media all and (max-width:320px){\r\n\t.slideBox{\r\n\t\theight:240px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:240px;\r\n\t}\r\n}\r\n@media all and (min-width:321px) and (max-width:360px){\r\n\t.slideBox{\r\n\t\theight:270px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:270px;\r\n\t}\r\n}\r\n@media all and (min-width:361px) and (max-width:375px){\r\n\t.slideBox{\r\n\t\theight:281px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:281px;\r\n\t}\r\n}\r\n@media all and (min-width:376px) and (max-width:384px){\r\n\t.slideBox{\r\n\t\theight:288px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:288px;\r\n\t}\r\n}\r\n@media all and (min-width:385px) and (max-width:414px){\r\n\t.slideBox{\r\n\t\theight:311px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:311px;\r\n\t}\r\n}\r\n@media all and (min-width:415px){\r\n\t.slideBox{\r\n\t\theight:360px;\r\n\t}\r\n\t.slideBox .bd li img {\r\n\t\theight:360px;\r\n\t}\r\n}\r\n']
2016-07-21 10:07:53,288 wechatno_wemall.py[line: 103] INFO: ['style', '\r\n']
2016-07-21 10:07:53,288 wechatno_wemall.py[line: 103] INFO: ['body', '\r\n\t']
2016-07-21 10:07:53,288 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t']
2016-07-21 10:07:53,288 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t']
2016-07-21 10:07:53,288 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t']
2016-07-21 10:07:53,288 wechatno_wemall.py[line: 103] INFO: ['a', '\r\n                  ']
2016-07-21 10:07:53,288 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n              \t']
2016-07-21 10:07:53,288 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t\t\t\t']
2016-07-21 10:07:53,289 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t\t']
2016-07-21 10:07:53,289 wechatno_wemall.py[line: 103] INFO: ['ul', '\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t']
2016-07-21 10:07:53,289 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t']
2016-07-21 10:07:53,289 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t\t\t\t']
2016-07-21 10:07:53,289 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t\t\t\t']
2016-07-21 10:07:53,289 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t\t']
2016-07-21 10:07:53,289 wechatno_wemall.py[line: 103] INFO: ['a', '\r\n\t\t\t\t']
2016-07-21 10:07:53,289 wechatno_wemall.py[line: 103] INFO: ['a', '\r\n\t\t\t']
2016-07-21 10:07:53,290 wechatno_wemall.py[line: 103] INFO: ['a', '\r\n\t\t']
2016-07-21 10:07:53,290 wechatno_wemall.py[line: 103] INFO: ['a', '\t\t\r\n\t\t']
2016-07-21 10:07:53,290 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t']
2016-07-21 10:07:53,290 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t']
2016-07-21 10:07:53,290 wechatno_wemall.py[line: 103] INFO: ['p', '\r\n\t\t\t\t\t接口-测试商品1\r\n\t\t\t\t']
2016-07-21 10:07:53,290 wechatno_wemall.py[line: 103] INFO: ['p', '\r\n\t\t\t\t']
2016-07-21 10:07:53,290 wechatno_wemall.py[line: 103] INFO: ['p', '\r\n\t\t\t\t\t接口测试专用,烦请勿删,勿操作\r\n\t\t\t\t']
2016-07-21 10:07:53,290 wechatno_wemall.py[line: 103] INFO: ['p', '\t\t\t\t\r\n\t\t\t\t']
2016-07-21 10:07:53,290 wechatno_wemall.py[line: 103] INFO: ['p', '\r\n\t\t\t\t\t单价:\r\n\t\t\t\t\t']
2016-07-21 10:07:53,290 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t￥0.01\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t']
2016-07-21 10:07:53,290 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\t']
2016-07-21 10:07:53,291 wechatno_wemall.py[line: 103] INFO: ['span', '销量:6件']
2016-07-21 10:07:53,291 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t']
2016-07-21 10:07:53,291 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\r\n\t\t\t\t\t']
2016-07-21 10:07:53,291 wechatno_wemall.py[line: 103] INFO: ['p', '运费:']
2016-07-21 10:07:53,291 wechatno_wemall.py[line: 103] INFO: ['span', '4.00元']
2016-07-21 10:07:53,291 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t']
2016-07-21 10:07:53,291 wechatno_wemall.py[line: 103] INFO: ['p', '\r\n\t\t\t\t\t数量:']
2016-07-21 10:07:53,291 wechatno_wemall.py[line: 103] INFO: ['span', '-']
2016-07-21 10:07:53,291 wechatno_wemall.py[line: 103] INFO: ['span', '1']
2016-07-21 10:07:53,291 wechatno_wemall.py[line: 103] INFO: ['span', '+']
2016-07-21 10:07:53,291 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t']
2016-07-21 10:07:53,292 wechatno_wemall.py[line: 103] INFO: ['span', '(库存：999994件)']
2016-07-21 10:07:53,292 wechatno_wemall.py[line: 103] INFO: ['span', '\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t']
2016-07-21 10:07:53,292 wechatno_wemall.py[line: 103] INFO: ['span', ' \r\n\t\t\t\t']
2016-07-21 10:07:53,292 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t\t']
2016-07-21 10:07:53,292 wechatno_wemall.py[line: 103] INFO: ['input', '\r\n\t\t\t\t\t']
2016-07-21 10:07:53,292 wechatno_wemall.py[line: 103] INFO: ['input', '\r\n\t\t\t\t']
2016-07-21 10:07:53,292 wechatno_wemall.py[line: 103] INFO: ['input', '\r\n\t\t\t']
2016-07-21 10:07:53,292 wechatno_wemall.py[line: 103] INFO: ['input', '\r\n\t\t\t']
2016-07-21 10:07:53,292 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t']
2016-07-21 10:07:53,292 wechatno_wemall.py[line: 103] INFO: ['p', '图文详情']
2016-07-21 10:07:53,292 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t\t\t\t']
2016-07-21 10:07:53,293 wechatno_wemall.py[line: 103] INFO: ['div', '\r\n\t\t\t\t\t']
2016-07-21 10:07:53,293 wechatno_wemall.py[line: 103] INFO: ['p', '\t\t\t\t\t\t\t\t\t\t\t']
2016-07-21 10:07:53,293 wechatno_wemall.py[line: 103] INFO: ['p', '接口测试专用商品,商品详情简介']
2016-07-21 10:07:53,293 wechatno_wemall.py[line: 103] INFO: ['br', '\r\n\t\t\t\t']
2016-07-21 10:07:53,293 wechatno_wemall.py[line: 103] INFO: ['br', '\r\n\t\t\t']
2016-07-21 10:07:53,293 wechatno_wemall.py[line: 103] INFO: ['br', '\r\n\t\t']
2016-07-21 10:07:53,293 wechatno_wemall.py[line: 103] INFO: ['br', '\t\t\r\n\t']
2016-07-21 10:07:53,293 wechatno_wemall.py[line: 103] INFO: ['br', '\r\n\t']
2016-07-21 10:07:53,293 wechatno_wemall.py[line: 103] INFO: ['img', '\r\n\t']
2016-07-21 10:07:53,293 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n    ']
2016-07-21 10:07:53,293 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n    ']
2016-07-21 10:07:53,294 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n\t']
2016-07-21 10:07:53,294 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n\t']
2016-07-21 10:07:53,294 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n\t\t\t\r\n\tvar priceLimita = $(".orange").text();\r\n\tvar soldCounta = $("#soldCount").text();\r\n\tvar skua = $(".standard_sku").text();\r\n\t\r\n            // 滚动窗口来判断按钮显示或隐藏\r\n            $(window).scroll(function() {\r\n                if ($(this).scrollTop() > 120) {\r\n                    $(\'.top-bg\').show(100);\r\n                } else {\r\n                    $(\'.top-bg\').hide(100);\r\n                }\r\n            });\r\n            \r\n            function choose(obj,price,sku,standardSoldCount){\r\n            \tif(!$(obj).attr(\'disabled\')){\r\n            \tif($(obj).hasClass(\'active\')){\r\n            \t\t$(".orange").text(priceLimita);\r\n                \t$("#soldCount").text(soldCounta);\r\n                \t$(".standard_sku").text(skua);\r\n                \t $(obj).removeClass(\'active\');\r\n            \t}else{\r\n\t            \t$(".standard_sku").text("(库存:"+sku+"件)");\r\n\t            \t$(".orange").text("￥"+price);\r\n\t            \t$("#soldCount").text("销量:"+standardSoldCount+"件");\r\n\t            \t$(".spec").removeClass(\'active\');\r\n                    $(obj).addClass(\'active\');\r\n            \t}\r\n            \t}\r\n            }\r\n            \r\n           \r\n            \r\n            $(function(){\r\n            \t/* $(".spec").tap(function(){\r\n                    if(!$(this).attr(\'disabled\')){\r\n                        if($(this).hasClass(\'active\')){\r\n                            $(this).removeClass(\'active\');\r\n                            \r\n                        }else{\r\n                        \t\r\n                        }\r\n                    }                    \r\n                }); */\r\n                \r\n            \tTouchSlide({\r\n    \t\t\t\tslideCell : "#slideBox",\r\n    \t\t\t\tmainCell : ".bd ul",\r\n    \t\t\t\teffect : "leftLoop",\r\n    \t\t\t\tpageStateCell : ".pageState"\r\n    \t\t\t});            \t            \t\r\n\t\t\t\t\r\n            \t$(".bottom-details img").width($(".top").width());\r\n            });\r\n            \r\n            // jQuery实现动画滚动\r\n            $(\'.top-bg\').click(function(event) {\r\n                event.preventDefault();\r\n                $(\'html, body\').scrollTop(0);\r\n            });\r\n\t\t\t\r\n\t\t\t$(".bottom > p img").click(function(){\r\n                $(this).parent().next().toggle();\r\n                if($(this).parent().next().css("display")=="block"){\r\n                    $(this).attr("src","/images/mall/down.png");\r\n                }else{\r\n                    $(this).attr("src","/images/mall/up.png");\r\n                }\r\n            });\r\n            \r\n            $(".jia").click(function(){\r\n            \tvar val = $(this).siblings(".val");\r\n            \tvar count = parseInt(val.text());\r\n                if (isNaN(count)) {\r\n                \tcount = 1;\r\n                } else {\r\n                \tcount += 1;\r\n                }\r\n                val.text(count);\r\n            });\r\n            $(".jian").click(function(){\r\n            \tvar val = $(this).siblings(".val");\r\n            \tvar count = parseInt(val.text());\r\n                if (isNaN(count) || count <= 1) {\r\n                \tcount = 1;\r\n                } else {\r\n                \tcount -= 1;\r\n                }\r\n                val.text(count);\r\n            });\r\n            \r\n            $(".addbtn").click(function(event){\r\n            \tif($(this).prop("disabled") == true)\r\n            \t\treturn false;\r\n            \tvar params = {\r\n   \t\t\t\t\tmallGoodsId : "26838",\r\n   \t\t\t\t\tstandardId : standardId,\r\n   \t\t\t\t\tamount : $(".val").text(),\r\n   \t\t\t\t\tserial : "10549840601068216320",\r\n   \t\t\t\t\topenId : "ous64uFCCLMyXYDJ-MkNilyCI5C"\r\n   \t\t\t\t};\r\n            \t\r\n            \tvar standard = 1;\r\n            \tif(standard == 2 && $(".active").length < 1){\r\n    \t\t\t\tdoAlert("no", "请选择商品的规格");\r\n    \t\t\t\treturn;\r\n    \t\t\t}\r\n            \tif(standard == 2){\r\n            \t\tvar standardId = $(".active").attr("data");\r\n    \t\t\t\tparams.standardId = standardId;\r\n            \t}\r\n            \t$.post("/addtocart", params, function(result){\r\n            \t\tif (null == result || !result.success) {\r\n            \t\t\ttoast(result.message);\r\n    \t\t\t\t\treturn;\r\n    \t\t\t\t}\r\n    \t\t\t\t//更新购物车数量\r\n    \t\t\t\t/* var cartNum = $(".cartNum").text();\r\n    \t\t\t\tif (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {\r\n    \t\t\t\t\t$(".carts").append("<span class=\'cartNum\'>1</span>");\r\n    \t\t\t\t} else {\r\n    \t\t\t\t\tif (null != result.attach && result.attach > 0) {\r\n    \t\t\t\t\t\t$(".cartNum").text(result.attach);\r\n    \t\t\t\t\t}\r\n    \t\t\t\t} */\r\n    \t\t\t\ttoast("已经成功加入购物车");\r\n            \t});\r\n            });\r\n\t\t$(".buybtn").click(function(event) {\r\n\t\t\tif($(this).prop("disabled") == true)\r\n        \t\treturn false;\r\n\t\t\t$(this).attr("disabled","disabled");\r\n\t\t\tvar standard = 1;\r\n        \tif(standard == 2 && $(".active").length < 1){\r\n\t\t\t\tdoAlert("no", "请选择商品的规格");\r\n\t\t\t\t$(this).removeAttr("disabled");\r\n\t\t\t\treturn;\r\n        \t}\r\n        \tif(standard == 2){\r\n        \t\tvar standardId = $(".active").attr("data");\r\n        \t\twindow.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;\r\n        \t\treturn;\r\n        \t}\r\n\t\t\twindow.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";\r\n\t\t});\r\n\t']
2016-07-21 10:07:53,294 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-21 10:07:53,294 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-21 10:07:53,294 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-21 10:07:53,295 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n  \t\r\n\t']
2016-07-21 10:07:53,295 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n\t']
2016-07-21 10:07:53,295 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n\t\t$(function() {\r\n\t\t\t//var SHOP_SERIAL = getCookie("SHOP_SERIAL");\r\n\t\t\tvar SHOP_SERIAL = "10549840601068216320";\r\n\t\t\tif(null != SHOP_SERIAL && SHOP_SERIAL != ""){\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl : \'/saofu_mobile/checkUserBindStatus\',\r\n\t\t\t\t\tdata : {\r\n\t\t\t\t\t\t"serial" : SHOP_SERIAL\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttype : \'post\',\r\n\t\t\t\t\tcache : false,\r\n\t\t\t\t\tdataType : \'json\',\r\n\t\t\t\t\tsuccess : function(data) {\r\n\t\t\t\t\t\tif (data != null) {\r\n\t\t\t\t\t\t\tvar guildFocusStr = data.guildFocusStr;\r\n\t\t\t\t\t\t\tif(guildFocusStr != null && guildFocusStr == "1"){\r\n\t\t\t\t\t\t\t\tvar hasBindedShop = data.hasBindedShop;\r\n\t\t\t\t\t\t\t\tif(hasBindedShop == "0"){\r\n\t\t\t\t\t\t\t\t\tvar qrName = data.QRPublicName;\r\n\t\t\t\t\t\t\t\t\tvar qrUrl = data.QRCodeURL;\r\n\t\t\t\t\t\t\t\t\tif(qrName != "" && qrUrl != ""){\r\n\t\t\t\t\t\t\t\t\t\tvar params = qrName+"**"+qrUrl;\r\n\t\t\t\t\t\t\t\t\t\tfollowModule(params);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t},\r\n\t\t\t\t\terror : function() {\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\t\t\t\r\n\t']
2016-07-21 10:07:53,295 wechatno_wemall.py[line: 103] INFO: ['script', '\r\n']
2016-07-21 10:07:53,295 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 10:07:53,295 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 10:07:53" WHERE executed_history_id = 20160721100752 AND testcase_id = 80 AND step_id = 82 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:07:53,298 testcase.py[line: 101] INFO: 测试用例[id=80, name=test-n-点击商品]执行成功
2016-07-21 10:07:53,298 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-21 10:07:53,298 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 10:07:53" WHERE executed_history_id = 20160721100752 and testcase_id = 80 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:07:53,441 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-21 10:07:53,441 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721100752', '102', 'test-n-点击立即购买按钮', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-21 10:07:53,442 testsuite.py[line: 63] INFO: 开始执行测试用例[id=102，name=test-n-点击立即购买按钮]
2016-07-21 10:07:53,443 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 10:07:53,443 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721100752', '102', 'test-n-点击立即购买按钮', '无计划', 'pj_wecharno', 104, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"ToBuyGoods","function":"test_to_buy_goods","method":"get","url":"/mall/tobuy/1?","params":{"mallGoodsId":"26838","amount":1,"type":1,"serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-21 10:07:53,444 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 10:07:53,444 casestep.py[line: 64] INFO: 调用的方法为：ToBuyGoods.test_to_buy_goods
2016-07-21 10:07:53,444 wechatno_wemall.py[line: 220] INFO: 正在发起GET请求...
2016-07-21 10:07:53,444 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/mall/tobuy/1?type=1&amount=1&mallGoodsId=26838&serial=10549840601068216320
2016-07-21 10:07:53,444 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-21 10:07:53,455 wechatno_wemall.py[line: 226] INFO: 正在解析返回结果:





<!DOCTYPE html>
<link rel="stylesheet" href="/css/bind/banner.css?v=3.4.0-f5bd5" />  
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
        <link rel="stylesheet" href="/css/skin-nr-min.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" href="/css/cpn.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" type="text/css" href="/css/zepto.alert.css?v=3.4.0-f5bd5">
        <title>哎哟~出错啦~</title>
    </head>
    <body>
        <script type="text/javascript" src="/js/zepto.min.js?v=3.4.0-f5bd5" ></script>
        <script type="text/javascript" src="/js/zepto.alert.min.js?v=3.4.0-f5bd5"></script>
        <script type="text/javascript">
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        </script>
    </body>
</html>

2016-07-21 10:07:53,455 htmlparser.py[line: 28] INFO: Data 






2016-07-21 10:07:53,456 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,456 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:07:53,456 htmlparser.py[line: 25] INFO: End tag: link
2016-07-21 10:07:53,456 htmlparser.py[line: 28] INFO: Data   

2016-07-21 10:07:53,456 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,456 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-21 10:07:53,457 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:07:53,457 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-21 10:07:53,457 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:07:53,457 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:07:53,457 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:07:53,457 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:07:53,457 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:07:53,457 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:07:53,457 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:07:53,457 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:07:53,458 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:07:53,458 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:07:53,458 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:07:53,458 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-21 10:07:53,458 htmlparser.py[line: 28] INFO: Data 哎哟~出错啦~
2016-07-21 10:07:53,458 htmlparser.py[line: 25] INFO: End tag: title
2016-07-21 10:07:53,458 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:07:53,458 htmlparser.py[line: 25] INFO: End tag: head
2016-07-21 10:07:53,458 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:07:53,458 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-21 10:07:53,459 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:07:53,459 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:07:53,459 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:07:53,459 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:07:53,459 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:07:53,459 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:07:53,459 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:07:53,459 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:07:53,459 htmlparser.py[line: 28] INFO: Data 
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        
2016-07-21 10:07:53,459 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:07:53,460 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:07:53,460 htmlparser.py[line: 25] INFO: End tag: body
2016-07-21 10:07:53,460 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,460 htmlparser.py[line: 25] INFO: End tag: html
2016-07-21 10:07:53,460 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:07:53,460 wechatno_wemall.py[line: 232] INFO: [['', '\r\n\r\n\r\n\r\n\r\n\r\n'], ['', '\r\n'], ['link', '  \r\n'], ['link', '\r\n'], ['html', '\r\n    '], ['head', '\r\n        '], ['meta', '\r\n        '], ['meta', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['title', '哎哟~出错啦~'], ['title', '\r\n    '], ['title', '\r\n    '], ['body', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        Zepto(function($){\r\n\t\t\tfunction myAlert(content) {\r\n\t\t    \t$.dialog({\r\n\t\t    \t\tcontent : content,\r\n\t\t    \t\ttitle : "alert"\r\n\t\t    \t});\r\n\t\t    }\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tmyAlert("噢...出错了!请等待管理员处理,稍后重试");\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n        });\r\n        '], ['script', '\r\n    '], ['script', '\r\n'], ['script', '\r\n']]
2016-07-21 10:07:53,460 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 10:07:53,460 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 10:07:53" WHERE executed_history_id = 20160721100752 AND testcase_id = 102 AND step_id = 104 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:07:53,463 testcase.py[line: 101] INFO: 测试用例[id=102, name=test-n-点击立即购买按钮]执行成功
2016-07-21 10:07:53,463 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-21 10:07:53,463 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 10:07:53" WHERE executed_history_id = 20160721100752 and testcase_id = 102 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:07:53,465 testsuite.py[line: 74] INFO: 测试套件[id=79 ,name=微商城-模拟点击页面跳转]已执行完
2016-07-21 10:07:53,465 main.py[line: 229] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-07-21 10:07:53,465 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-07-21 10:07:53,466 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20160721100752',)
2016-07-21 10:07:53,467 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-07-21 10:07:53,467 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20160721100752')
2016-07-21 10:07:53,468 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-07-21 10:07:53,468 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20160721100752')
2016-07-21 10:07:53,470 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-07-21 10:07:53,470 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20160721100752')
2016-07-21 10:07:53,471 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-07-21 10:07:53,471 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20160721100752')
2016-07-21 10:07:53,473 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-07-21 10:07:53,473 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160721100752',)
2016-07-21 10:07:53,475 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]的测试用例执行结果
2016-07-21 10:07:53,475 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160721100752')
2016-07-21 10:07:53,477 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_wecharno, testplan：无计划]的测试用例运行结果到测试报告
2016-07-21 10:07:53,478 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-07-21 10:07:53,478 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160721100752',)
2016-07-21 10:07:53,479 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]已运行的测试用例
2016-07-21 10:07:53,479 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160721100752')
2016-07-21 10:07:53,481 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=80]步骤运行结果
2016-07-21 10:07:53,481 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 80, '20160721100752')
2016-07-21 10:07:53,483 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=102]步骤运行结果
2016-07-21 10:07:53,483 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 102, '20160721100752')
2016-07-21 10:07:53,484 htmlreporter.py[line: 177] INFO: 正在设置测试报告结果文件名
2016-07-21 10:07:53,484 htmlreporter.py[line: 187] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20160721100752.html
2016-07-21 10:07:53,485 htmlreporter.py[line: 180] INFO: 正在生成测试报告
2016-07-21 10:07:53,486 main.py[line: 252] INFO: 生成测试报告成功
2016-07-21 10:07:54,710 main.py[line: 259] INFO: E:\\Projects\\report\\test_report20160721100752.html
2016-07-21 10:07:54,711 main.py[line: 262] INFO: 正在发送测试报告邮件...
2016-07-21 10:07:54,711 main.py[line: 266] INFO: 发送邮件成功
2016-07-21 10:12:06,010 globalpy.py[line: 14] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-07-21 10:12:06,020 globalpy.py[line: 17] INFO: 正在初始化数据库[名称：SAOFUDB]对象
2016-07-21 10:12:06,025 globalpy.py[line: 20] INFO: 正在获取testlink
2016-07-21 10:12:06,079 main.py[line: 60] INFO: 正在创建测试用例报告报表
2016-07-21 10:12:06,080 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-07-21 10:12:06,081 main.py[line: 63] INFO: 正在创建测试步骤报告报表
2016-07-21 10:12:06,081 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-07-21 10:12:06,082 main.py[line: 66] INFO: 正在读取运行模式配置
2016-07-21 10:12:06,083 main.py[line: 187] INFO: 按套件运行测试
2016-07-21 10:12:06,083 main.py[line: 189] INFO: 已获取配置的套件id列表：[79]
2016-07-21 10:12:06,322 main.py[line: 205] INFO: 正在读取套件[id=79，name=微商城-模拟点击页面跳转]的协议，host，端口配置...
2016-07-21 10:12:06,323 main.py[line: 223] INFO: 正在执行测试套件[id=79 ,name=微商城-模拟点击页面跳转]
2016-07-21 10:12:06,323 testsuite.py[line: 42] INFO: 正在获取套件[id=79，name=微商城-模拟点击页面跳转]的测试用例...
2016-07-21 10:12:06,568 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-21 10:12:06,569 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721101206', '80', 'test-n-点击商品', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-21 10:12:06,573 testsuite.py[line: 63] INFO: 开始执行测试用例[id=80，name=test-n-点击商品]
2016-07-21 10:12:06,573 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 10:12:06,573 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721101206', '80', 'test-n-点击商品', '无计划', 'pj_wecharno', 82, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"Goods","function":"test_click_goods","method":"get","url":"/goods/item?","params":{"id":26838, "serial":"var"}}', '{"status":200, "find_flag":1}', 'Block', '', '')
2016-07-21 10:12:06,574 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 10:12:06,574 casestep.py[line: 64] INFO: 调用的方法为：Goods.test_click_goods
2016-07-21 10:12:06,575 wechatno_wemall.py[line: 89] INFO: 正在发起GET请求...
2016-07-21 10:12:06,575 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/goods/item?serial=10549840601068216320&id=26838
2016-07-21 10:12:06,575 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-21 10:12:06,733 htmlparser.py[line: 28] INFO: Data 






2016-07-21 10:12:06,733 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,733 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:12:06,733 htmlparser.py[line: 25] INFO: End tag: link
2016-07-21 10:12:06,733 htmlparser.py[line: 28] INFO: Data   

2016-07-21 10:12:06,734 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,734 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-21 10:12:06,734 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,734 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-21 10:12:06,734 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,735 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:12:06,735 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,735 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:12:06,735 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,735 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:12:06,736 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,736 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:12:06,736 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,736 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:12:06,737 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,737 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:12:06,737 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,738 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-21 10:12:06,738 htmlparser.py[line: 28] INFO: Data 微商城
2016-07-21 10:12:06,738 htmlparser.py[line: 25] INFO: End tag: title
2016-07-21 10:12:06,738 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,739 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:12:06,739 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,739 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:12:06,739 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,740 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:12:06,740 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,740 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:12:06,741 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:12:06,741 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,742 htmlparser.py[line: 25] INFO: End tag: head
2016-07-21 10:12:06,742 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,742 htmlparser.py[line: 19] INFO: Start tag: style
2016-07-21 10:12:06,743 htmlparser.py[line: 28] INFO: Data 
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
	overflow: hidden;
	border-bottom: 1px solid #eaeaea;
}

.top {
	width: 90%;
	margin: 0 auto;
	padding-bottom: 1em;
}

.top p {
	margin: 0.5em 0;
	font-size: 0.8em;
}
.top>p:first-child{
	font-size:1.1em;
}

.fonts {
	font-size: 1em !important;
	margin: 0.8em 0 !important;
}


.jian {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-right: 0 none;
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
	text-align: center;
	margin-left:0.4em;
}

.val {
	background: #fff;
	display: inline-block;
	width: 3.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	text-align: center;
}

.jia {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-left: 0 none;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	text-align: center;
}

.button {
	width: 47%;
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
}

.addbtn {
	background: #edb23e;
	margin-right: 3%;
}

.buybtn {
	background: #f96364;
}

.bottom {
	border-top: 0.5em solid #eeeeee;
	padding-bottom: 3em;
    position: relative;
    width:100%;
}

.bottom .bottom-details{
	width:100%;	
	word-break:break-all;
	overflow-x: hidden; 
}

.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{
	word-break:break-all;
}

.bottom > p:first-child {
	text-indent: 1em;
}

.bottom > p img{
    width: 1em;
    position: absolute;
    top:0.8em;
    right: 1em;
}

.bottom-details p {
	text-indent: 1em;
	word-break:break-all;
}

.inline-padding {
	display: inline-block;
	padding-left: 0.8em;
}

.inline-paddings {
	display: inline-block;
	padding-left: 1.6em;
}

.footer {
	width: 100%;
	height: 3em;
	position: fixed;
	bottom: 0;
	background: #fff;
	color: #b6b6b6;
	text-align: center;
	border-top: 1px solid #eaeaea;
}

.footer a {
	color: #626262;
	display: inline-block;
	height:1em;
	line-height:1em;
	padding-top: 1em;
	padding-bottom: 1em;
}
.footer .inline-paddings-right{
    padding-top: 1em;
    float: right;
}
.footer img {
	display: inline-block;
	width: 1em;
}

.top-bg{
    position: fixed;
    bottom: 3.5em;
    right: 1em;
    width: 2em;
    display: none;
    filter:alpha(opacity=40);       /* IE */
    -moz-opacity:0.4;              /* Moz + FF */
    opacity: 0.4;     
}
.spec{
    display: inline-block;
    margin: 0 1em 0.8em 0;
    font-size:0.7em;
    padding:0.3em 1em;
    border:1px solid #ccc;
    border-radius:3px;
    cursor:pointer;
}
.fonts a.active{
    border: 2px solid #d2b57b;
}
.guige{
    float: left;
    width: 40px;
}
.guige-detail{
    margin-left: 40px;
}
.guige-detail a[disabled]{
    background: none repeat scroll 0 0 #fff;
    color: #e3e3e3;
    cursor: default;
}
/* 本例子css -------------------------------------- */
.slideBox {
	position: relative;
	width: 100%;
	height: 240px;
	overflow: hidden;
}

.slideBox .hd {
	position: absolute;
	width: 100%;
	height: 27px;
	bottom: 0;
	left: 0;
	z-index: 1;
}

.slideBox .hd img {
	width: 11px;
}

.slideBox .bd {
	position: relative;
	z-index: 0;
}

.slideBox .bd li {
	position: relative;
}

.slideBox .bd li img {
	width: 100%;
	height: 240px;
	display: block;
}

.slideBox .bd li a {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */
}

.slideBox .hd a {
	display: block;
	width: auto;
	position: absolute;
	bottom: 0.5em;
	right: 0.5em;
	padding: 0.1em 0.7em;
	text-align: center;
	color: #fff;
	background-color: rgba(0, 0, 0, 0.6);
	border-radius: 4px;
}
.slideBox>.a-img{
    position: fixed;
    top:1em;
    right: 0.5em;
    display: block;
    width:2em;
    height: 2em;
    border-radius: 2em;
    background-color: rgba(0, 0, 0, 0.6); 
    z-index: 2;
}
.slideBox>.a-img>img{
    width: 1em;            
    position: absolute;
    top:50%;
    left: 50%;
    margin-top:-0.5em;
    margin-left: -0.5em;
}
.carts{
	position: relative;
}
.cartNum{                      
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    line-height:1.2em;
    border-radius: 1.5em;
    background:#ff0000;  
    position: absolute;
    right: -0.7em;
    top: 0.3em;
    color: #fff;
}
#soldCount{
	float: right; 
	font-size: 0.8em; 
	padding-top: 0.3em;
	color:#adadad;
}
.freight{
	font-size:0.8em;
	color:#adadad;
}
.standard_sku{
	font-size:0.9em;
	color:#adadad;
}
@media all and (max-width:320px){
	.slideBox{
		height:240px;
	}
	.slideBox .bd li img {
		height:240px;
	}
}
@media all and (min-width:321px) and (max-width:360px){
	.slideBox{
		height:270px;
	}
	.slideBox .bd li img {
		height:270px;
	}
}
@media all and (min-width:361px) and (max-width:375px){
	.slideBox{
		height:281px;
	}
	.slideBox .bd li img {
		height:281px;
	}
}
@media all and (min-width:376px) and (max-width:384px){
	.slideBox{
		height:288px;
	}
	.slideBox .bd li img {
		height:288px;
	}
}
@media all and (min-width:385px) and (max-width:414px){
	.slideBox{
		height:311px;
	}
	.slideBox .bd li img {
		height:311px;
	}
}
@media all and (min-width:415px){
	.slideBox{
		height:360px;
	}
	.slideBox .bd li img {
		height:360px;
	}
}

2016-07-21 10:12:06,744 htmlparser.py[line: 25] INFO: End tag: style
2016-07-21 10:12:06,745 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,745 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-21 10:12:06,745 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:12:06,746 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:12:06,746 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:12:06,746 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:12:06,746 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:12:06,747 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:12:06,747 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,747 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:12:06,748 htmlparser.py[line: 28] INFO: Data 
                  
2016-07-21 10:12:06,748 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:12:06,748 htmlparser.py[line: 28] INFO: Data 
              	
2016-07-21 10:12:06,748 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:12:06,749 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,749 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:12:06,749 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:12:06,750 htmlparser.py[line: 19] INFO: Start tag: ul
2016-07-21 10:12:06,750 htmlparser.py[line: 28] INFO: Data 
						
							
								
2016-07-21 10:12:06,750 htmlparser.py[line: 19] INFO: Start tag: li
2016-07-21 10:12:06,751 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:12:06,751 htmlparser.py[line: 25] INFO: End tag: img
2016-07-21 10:12:06,751 htmlparser.py[line: 25] INFO: End tag: li
2016-07-21 10:12:06,751 htmlparser.py[line: 28] INFO: Data 
							
						
					
2016-07-21 10:12:06,752 htmlparser.py[line: 25] INFO: End tag: ul
2016-07-21 10:12:06,752 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,752 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:12:06,752 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,753 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:12:06,753 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:12:06,753 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:12:06,753 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:12:06,754 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,754 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:12:06,754 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:12:06,754 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:12:06,755 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:12:06,755 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:12:06,755 htmlparser.py[line: 28] INFO: Data 		
		
2016-07-21 10:12:06,756 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:12:06,756 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:12:06,756 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:12:06,757 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,757 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:12:06,757 htmlparser.py[line: 28] INFO: Data 
					接口-测试商品1
				
2016-07-21 10:12:06,757 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:12:06,758 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,758 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:12:06,759 htmlparser.py[line: 28] INFO: Data 
					接口测试专用,烦请勿删,勿操作
				
2016-07-21 10:12:06,759 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:12:06,759 htmlparser.py[line: 28] INFO: Data 				
				
2016-07-21 10:12:06,760 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:12:06,760 htmlparser.py[line: 28] INFO: Data 
					单价:
					
2016-07-21 10:12:06,760 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:12:06,760 htmlparser.py[line: 28] INFO: Data 
					
					
						
							￥0.01
						
						
					
					
					
2016-07-21 10:12:06,761 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:12:06,761 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:12:06,761 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:12:06,761 htmlparser.py[line: 28] INFO: Data 销量:6件
2016-07-21 10:12:06,762 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:12:06,762 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,762 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:12:06,762 htmlparser.py[line: 28] INFO: Data 
				
					
2016-07-21 10:12:06,763 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:12:06,763 htmlparser.py[line: 28] INFO: Data 运费:
2016-07-21 10:12:06,763 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:12:06,763 htmlparser.py[line: 28] INFO: Data 4.00元
2016-07-21 10:12:06,764 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:12:06,764 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:12:06,764 htmlparser.py[line: 28] INFO: Data 
				
				
				
2016-07-21 10:12:06,764 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:12:06,765 htmlparser.py[line: 28] INFO: Data 
					数量:
2016-07-21 10:12:06,765 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:12:06,765 htmlparser.py[line: 28] INFO: Data -
2016-07-21 10:12:06,765 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:12:06,765 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:12:06,766 htmlparser.py[line: 28] INFO: Data 1
2016-07-21 10:12:06,766 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:12:06,766 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:12:06,766 htmlparser.py[line: 28] INFO: Data +
2016-07-21 10:12:06,766 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:12:06,766 htmlparser.py[line: 28] INFO: Data 
					
						
						
							
2016-07-21 10:12:06,766 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:12:06,766 htmlparser.py[line: 28] INFO: Data (库存：999994件)
2016-07-21 10:12:06,766 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:12:06,767 htmlparser.py[line: 28] INFO: Data 
						
						
						
					
				
2016-07-21 10:12:06,767 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:12:06,767 htmlparser.py[line: 28] INFO: Data  
				
2016-07-21 10:12:06,767 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:12:06,767 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:12:06,767 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:12:06,767 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:12:06,767 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:12:06,768 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:12:06,768 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:12:06,768 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,768 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:12:06,768 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:12:06,768 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:12:06,768 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:12:06,768 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:12:06,768 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,768 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:12:06,769 htmlparser.py[line: 28] INFO: Data 图文详情
2016-07-21 10:12:06,769 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:12:06,769 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:12:06,769 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,769 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:12:06,769 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:12:06,769 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:12:06,769 htmlparser.py[line: 28] INFO: Data 											
2016-07-21 10:12:06,770 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:12:06,770 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:12:06,770 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:12:06,770 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:12:06,770 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:12:06,770 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:12:06,770 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:12:06,770 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:12:06,770 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:12:06,771 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:12:06,771 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:12:06,771 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:12:06,771 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:12:06,771 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:12:06,771 htmlparser.py[line: 28] INFO: Data 接口测试专用商品,商品详情简介
2016-07-21 10:12:06,771 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:12:06,771 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:12:06,771 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:12:06,772 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:12:06,772 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:12:06,772 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:12:06,772 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:12:06,772 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:12:06,772 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:12:06,772 htmlparser.py[line: 28] INFO: Data 		
	
2016-07-21 10:12:06,772 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:12:06,772 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:12:06,773 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:12:06,773 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:12:06,773 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:12:06,773 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:12:06,773 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:12:06,773 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:12:06,773 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:12:06,773 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:12:06,773 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:12:06,774 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:12:06,774 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:12:06,774 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:12:06,774 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:12:06,774 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:12:06,774 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:12:06,774 htmlparser.py[line: 28] INFO: Data 
			
	var priceLimita = $(".orange").text();
	var soldCounta = $("#soldCount").text();
	var skua = $(".standard_sku").text();
	
            // 滚动窗口来判断按钮显示或隐藏
            $(window).scroll(function() {
                if ($(this).scrollTop() > 120) {
                    $('.top-bg').show(100);
                } else {
                    $('.top-bg').hide(100);
                }
            });
            
            function choose(obj,price,sku,standardSoldCount){
            	if(!$(obj).attr('disabled')){
            	if($(obj).hasClass('active')){
            		$(".orange").text(priceLimita);
                	$("#soldCount").text(soldCounta);
                	$(".standard_sku").text(skua);
                	 $(obj).removeClass('active');
            	}else{
	            	$(".standard_sku").text("(库存:"+sku+"件)");
	            	$(".orange").text("￥"+price);
	            	$("#soldCount").text("销量:"+standardSoldCount+"件");
	            	$(".spec").removeClass('active');
                    $(obj).addClass('active');
            	}
            	}
            }
            
           
            
            $(function(){
            	/* $(".spec").tap(function(){
                    if(!$(this).attr('disabled')){
                        if($(this).hasClass('active')){
                            $(this).removeClass('active');
                            
                        }else{
                        	
                        }
                    }                    
                }); */
                
            	TouchSlide({
    				slideCell : "#slideBox",
    				mainCell : ".bd ul",
    				effect : "leftLoop",
    				pageStateCell : ".pageState"
    			});            	            	
				
            	$(".bottom-details img").width($(".top").width());
            });
            
            // jQuery实现动画滚动
            $('.top-bg').click(function(event) {
                event.preventDefault();
                $('html, body').scrollTop(0);
            });
			
			$(".bottom > p img").click(function(){
                $(this).parent().next().toggle();
                if($(this).parent().next().css("display")=="block"){
                    $(this).attr("src","/images/mall/down.png");
                }else{
                    $(this).attr("src","/images/mall/up.png");
                }
            });
            
            $(".jia").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count)) {
                	count = 1;
                } else {
                	count += 1;
                }
                val.text(count);
            });
            $(".jian").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count) || count <= 1) {
                	count = 1;
                } else {
                	count -= 1;
                }
                val.text(count);
            });
            
            $(".addbtn").click(function(event){
            	if($(this).prop("disabled") == true)
            		return false;
            	var params = {
   					mallGoodsId : "26838",
   					standardId : standardId,
   					amount : $(".val").text(),
   					serial : "10549840601068216320",
   					openId : "ous64uFCCLMyXYDJ-MkNilyCI5C"
   				};
            	
            	var standard = 1;
            	if(standard == 2 && $(".active").length < 1){
    				doAlert("no", "请选择商品的规格");
    				return;
    			}
            	if(standard == 2){
            		var standardId = $(".active").attr("data");
    				params.standardId = standardId;
            	}
            	$.post("/addtocart", params, function(result){
            		if (null == result || !result.success) {
            			toast(result.message);
    					return;
    				}
    				//更新购物车数量
    				/* var cartNum = $(".cartNum").text();
    				if (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {
    					$(".carts").append("<span class='cartNum'>1</span>");
    				} else {
    					if (null != result.attach && result.attach > 0) {
    						$(".cartNum").text(result.attach);
    					}
    				} */
    				toast("已经成功加入购物车");
            	});
            });
		$(".buybtn").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			$(this).attr("disabled","disabled");
			var standard = 1;
        	if(standard == 2 && $(".active").length < 1){
				doAlert("no", "请选择商品的规格");
				$(this).removeAttr("disabled");
				return;
        	}
        	if(standard == 2){
        		var standardId = $(".active").attr("data");
        		window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;
        		return;
        	}
			window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";
		});
	
2016-07-21 10:12:06,775 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:12:06,775 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,775 htmlparser.py[line: 25] INFO: End tag: body
2016-07-21 10:12:06,776 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,776 htmlparser.py[line: 25] INFO: End tag: html
2016-07-21 10:12:06,776 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,776 htmlparser.py[line: 28] INFO: Data 
  	
	
2016-07-21 10:12:06,776 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:12:06,776 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:12:06,776 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:12:06,776 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:12:06,777 htmlparser.py[line: 28] INFO: Data 
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	
2016-07-21 10:12:06,777 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:12:06,777 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,777 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 10:12:06,777 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 10:12:06" WHERE executed_history_id = 20160721101206 AND testcase_id = 80 AND step_id = 82 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:12:06,781 testcase.py[line: 101] INFO: 测试用例[id=80, name=test-n-点击商品]执行成功
2016-07-21 10:12:06,782 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-21 10:12:06,782 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 10:12:06" WHERE executed_history_id = 20160721101206 and testcase_id = 80 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:12:06,919 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-21 10:12:06,920 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721101206', '102', 'test-n-点击立即购买按钮', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-21 10:12:06,922 testsuite.py[line: 63] INFO: 开始执行测试用例[id=102，name=test-n-点击立即购买按钮]
2016-07-21 10:12:06,922 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 10:12:06,922 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721101206', '102', 'test-n-点击立即购买按钮', '无计划', 'pj_wecharno', 104, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"ToBuyGoods","function":"test_to_buy_goods","method":"get","url":"/mall/tobuy/1?","params":{"mallGoodsId":"26838","amount":1,"type":1,"serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-21 10:12:06,923 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 10:12:06,923 casestep.py[line: 64] INFO: 调用的方法为：ToBuyGoods.test_to_buy_goods
2016-07-21 10:12:06,924 wechatno_wemall.py[line: 219] INFO: 正在发起GET请求...
2016-07-21 10:12:06,924 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/mall/tobuy/1?amount=1&type=1&serial=10549840601068216320&mallGoodsId=26838
2016-07-21 10:12:06,924 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-21 10:12:06,935 wechatno_wemall.py[line: 225] INFO: 正在解析返回结果:





<!DOCTYPE html>
<link rel="stylesheet" href="/css/bind/banner.css?v=3.4.0-f5bd5" />  
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
        <link rel="stylesheet" href="/css/skin-nr-min.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" href="/css/cpn.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" type="text/css" href="/css/zepto.alert.css?v=3.4.0-f5bd5">
        <title>哎哟~出错啦~</title>
    </head>
    <body>
        <script type="text/javascript" src="/js/zepto.min.js?v=3.4.0-f5bd5" ></script>
        <script type="text/javascript" src="/js/zepto.alert.min.js?v=3.4.0-f5bd5"></script>
        <script type="text/javascript">
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        </script>
    </body>
</html>

2016-07-21 10:12:06,935 htmlparser.py[line: 28] INFO: Data 






2016-07-21 10:12:06,935 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,936 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:12:06,936 htmlparser.py[line: 25] INFO: End tag: link
2016-07-21 10:12:06,936 htmlparser.py[line: 28] INFO: Data   

2016-07-21 10:12:06,936 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,936 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-21 10:12:06,936 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:12:06,936 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-21 10:12:06,936 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:12:06,937 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:12:06,937 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:12:06,937 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:12:06,937 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:12:06,937 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:12:06,937 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:12:06,937 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:12:06,937 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:12:06,937 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:12:06,937 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:12:06,938 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-21 10:12:06,938 htmlparser.py[line: 28] INFO: Data 哎哟~出错啦~
2016-07-21 10:12:06,938 htmlparser.py[line: 25] INFO: End tag: title
2016-07-21 10:12:06,938 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:12:06,938 htmlparser.py[line: 25] INFO: End tag: head
2016-07-21 10:12:06,938 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:12:06,938 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-21 10:12:06,938 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:12:06,938 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:12:06,938 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:12:06,939 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:12:06,939 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:12:06,939 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:12:06,939 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:12:06,939 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:12:06,939 htmlparser.py[line: 28] INFO: Data 
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        
2016-07-21 10:12:06,939 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:12:06,939 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:12:06,939 htmlparser.py[line: 25] INFO: End tag: body
2016-07-21 10:12:06,940 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,940 htmlparser.py[line: 25] INFO: End tag: html
2016-07-21 10:12:06,940 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:12:06,940 wechatno_wemall.py[line: 231] INFO: [['', '\r\n\r\n\r\n\r\n\r\n\r\n'], ['', '\r\n'], ['link', '  \r\n'], ['link', '\r\n'], ['html', '\r\n    '], ['head', '\r\n        '], ['meta', '\r\n        '], ['meta', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['title', '哎哟~出错啦~'], ['title', '\r\n    '], ['title', '\r\n    '], ['body', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        Zepto(function($){\r\n\t\t\tfunction myAlert(content) {\r\n\t\t    \t$.dialog({\r\n\t\t    \t\tcontent : content,\r\n\t\t    \t\ttitle : "alert"\r\n\t\t    \t});\r\n\t\t    }\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tmyAlert("噢...出错了!请等待管理员处理,稍后重试");\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n        });\r\n        '], ['script', '\r\n    '], ['script', '\r\n'], ['script', '\r\n']]
2016-07-21 10:12:06,940 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 10:12:06,940 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 10:12:06" WHERE executed_history_id = 20160721101206 AND testcase_id = 102 AND step_id = 104 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:12:06,942 testcase.py[line: 101] INFO: 测试用例[id=102, name=test-n-点击立即购买按钮]执行成功
2016-07-21 10:12:06,943 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-21 10:12:06,943 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 10:12:06" WHERE executed_history_id = 20160721101206 and testcase_id = 102 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:12:06,945 testsuite.py[line: 74] INFO: 测试套件[id=79 ,name=微商城-模拟点击页面跳转]已执行完
2016-07-21 10:12:06,945 main.py[line: 229] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-07-21 10:12:06,945 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-07-21 10:12:06,946 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20160721101206',)
2016-07-21 10:12:06,947 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-07-21 10:12:06,947 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20160721101206')
2016-07-21 10:12:06,948 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-07-21 10:12:06,948 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20160721101206')
2016-07-21 10:12:06,949 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-07-21 10:12:06,949 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20160721101206')
2016-07-21 10:12:06,950 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-07-21 10:12:06,950 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20160721101206')
2016-07-21 10:12:06,951 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-07-21 10:12:06,951 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160721101206',)
2016-07-21 10:12:06,952 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]的测试用例执行结果
2016-07-21 10:12:06,952 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160721101206')
2016-07-21 10:12:06,954 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_wecharno, testplan：无计划]的测试用例运行结果到测试报告
2016-07-21 10:12:06,954 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-07-21 10:12:06,954 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160721101206',)
2016-07-21 10:12:06,955 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]已运行的测试用例
2016-07-21 10:12:06,955 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160721101206')
2016-07-21 10:12:06,957 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=80]步骤运行结果
2016-07-21 10:12:06,957 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 80, '20160721101206')
2016-07-21 10:12:06,960 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=102]步骤运行结果
2016-07-21 10:12:06,960 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 102, '20160721101206')
2016-07-21 10:12:06,961 htmlreporter.py[line: 177] INFO: 正在设置测试报告结果文件名
2016-07-21 10:12:06,961 htmlreporter.py[line: 187] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20160721101206.html
2016-07-21 10:12:06,961 htmlreporter.py[line: 180] INFO: 正在生成测试报告
2016-07-21 10:12:06,962 main.py[line: 252] INFO: 生成测试报告成功
2016-07-21 10:12:07,167 main.py[line: 259] INFO: E:\\Projects\\report\\test_report20160721101206.html
2016-07-21 10:12:07,168 main.py[line: 262] INFO: 正在发送测试报告邮件...
2016-07-21 10:12:07,168 main.py[line: 266] INFO: 发送邮件成功
2016-07-21 10:27:33,746 globalpy.py[line: 14] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-07-21 10:27:33,756 globalpy.py[line: 17] INFO: 正在初始化数据库[名称：SAOFUDB]对象
2016-07-21 10:27:33,763 globalpy.py[line: 20] INFO: 正在获取testlink
2016-07-21 10:27:33,811 main.py[line: 60] INFO: 正在创建测试用例报告报表
2016-07-21 10:27:33,811 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-07-21 10:27:33,813 main.py[line: 63] INFO: 正在创建测试步骤报告报表
2016-07-21 10:27:33,813 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-07-21 10:27:33,814 main.py[line: 66] INFO: 正在读取运行模式配置
2016-07-21 10:27:33,815 main.py[line: 187] INFO: 按套件运行测试
2016-07-21 10:27:33,815 main.py[line: 189] INFO: 已获取配置的套件id列表：[79]
2016-07-21 10:27:34,150 main.py[line: 205] INFO: 正在读取套件[id=79，name=微商城-模拟点击页面跳转]的协议，host，端口配置...
2016-07-21 10:27:34,151 main.py[line: 223] INFO: 正在执行测试套件[id=79 ,name=微商城-模拟点击页面跳转]
2016-07-21 10:27:34,151 testsuite.py[line: 42] INFO: 正在获取套件[id=79，name=微商城-模拟点击页面跳转]的测试用例...
2016-07-21 10:27:34,447 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-21 10:27:34,447 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721102733', '80', 'test-n-点击商品', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-21 10:27:34,448 testsuite.py[line: 63] INFO: 开始执行测试用例[id=80，name=test-n-点击商品]
2016-07-21 10:27:34,448 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 10:27:34,449 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721102733', '80', 'test-n-点击商品', '无计划', 'pj_wecharno', 82, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"Goods","function":"test_click_goods","method":"get","url":"/goods/item?","params":{"id":26838, "serial":"var"}}', '{"status":200, "find_flag":1}', 'Block', '', '')
2016-07-21 10:27:34,451 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 10:27:34,451 casestep.py[line: 64] INFO: 调用的方法为：Goods.test_click_goods
2016-07-21 10:27:34,451 wechatno_wemall.py[line: 89] INFO: 正在发起GET请求...
2016-07-21 10:27:34,452 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/goods/item?serial=10549840601068216320&id=26838
2016-07-21 10:27:34,452 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-21 10:27:34,620 htmlparser.py[line: 28] INFO: Data 






2016-07-21 10:27:34,620 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,621 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:27:34,622 htmlparser.py[line: 25] INFO: End tag: link
2016-07-21 10:27:34,623 htmlparser.py[line: 28] INFO: Data   

2016-07-21 10:27:34,623 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,624 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-21 10:27:34,625 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,625 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-21 10:27:34,626 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,626 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:27:34,627 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,627 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:27:34,628 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,628 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:27:34,629 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,629 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:27:34,630 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,630 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:27:34,630 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,631 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:27:34,632 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,633 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-21 10:27:34,633 htmlparser.py[line: 28] INFO: Data 微商城
2016-07-21 10:27:34,634 htmlparser.py[line: 25] INFO: End tag: title
2016-07-21 10:27:34,634 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,634 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:27:34,635 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,635 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:27:34,636 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,636 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:27:34,636 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,637 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:27:34,638 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:27:34,639 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,639 htmlparser.py[line: 25] INFO: End tag: head
2016-07-21 10:27:34,640 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,641 htmlparser.py[line: 19] INFO: Start tag: style
2016-07-21 10:27:34,642 htmlparser.py[line: 28] INFO: Data 
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
	overflow: hidden;
	border-bottom: 1px solid #eaeaea;
}

.top {
	width: 90%;
	margin: 0 auto;
	padding-bottom: 1em;
}

.top p {
	margin: 0.5em 0;
	font-size: 0.8em;
}
.top>p:first-child{
	font-size:1.1em;
}

.fonts {
	font-size: 1em !important;
	margin: 0.8em 0 !important;
}


.jian {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-right: 0 none;
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
	text-align: center;
	margin-left:0.4em;
}

.val {
	background: #fff;
	display: inline-block;
	width: 3.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	text-align: center;
}

.jia {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-left: 0 none;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	text-align: center;
}

.button {
	width: 47%;
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
}

.addbtn {
	background: #edb23e;
	margin-right: 3%;
}

.buybtn {
	background: #f96364;
}

.bottom {
	border-top: 0.5em solid #eeeeee;
	padding-bottom: 3em;
    position: relative;
    width:100%;
}

.bottom .bottom-details{
	width:100%;	
	word-break:break-all;
	overflow-x: hidden; 
}

.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{
	word-break:break-all;
}

.bottom > p:first-child {
	text-indent: 1em;
}

.bottom > p img{
    width: 1em;
    position: absolute;
    top:0.8em;
    right: 1em;
}

.bottom-details p {
	text-indent: 1em;
	word-break:break-all;
}

.inline-padding {
	display: inline-block;
	padding-left: 0.8em;
}

.inline-paddings {
	display: inline-block;
	padding-left: 1.6em;
}

.footer {
	width: 100%;
	height: 3em;
	position: fixed;
	bottom: 0;
	background: #fff;
	color: #b6b6b6;
	text-align: center;
	border-top: 1px solid #eaeaea;
}

.footer a {
	color: #626262;
	display: inline-block;
	height:1em;
	line-height:1em;
	padding-top: 1em;
	padding-bottom: 1em;
}
.footer .inline-paddings-right{
    padding-top: 1em;
    float: right;
}
.footer img {
	display: inline-block;
	width: 1em;
}

.top-bg{
    position: fixed;
    bottom: 3.5em;
    right: 1em;
    width: 2em;
    display: none;
    filter:alpha(opacity=40);       /* IE */
    -moz-opacity:0.4;              /* Moz + FF */
    opacity: 0.4;     
}
.spec{
    display: inline-block;
    margin: 0 1em 0.8em 0;
    font-size:0.7em;
    padding:0.3em 1em;
    border:1px solid #ccc;
    border-radius:3px;
    cursor:pointer;
}
.fonts a.active{
    border: 2px solid #d2b57b;
}
.guige{
    float: left;
    width: 40px;
}
.guige-detail{
    margin-left: 40px;
}
.guige-detail a[disabled]{
    background: none repeat scroll 0 0 #fff;
    color: #e3e3e3;
    cursor: default;
}
/* 本例子css -------------------------------------- */
.slideBox {
	position: relative;
	width: 100%;
	height: 240px;
	overflow: hidden;
}

.slideBox .hd {
	position: absolute;
	width: 100%;
	height: 27px;
	bottom: 0;
	left: 0;
	z-index: 1;
}

.slideBox .hd img {
	width: 11px;
}

.slideBox .bd {
	position: relative;
	z-index: 0;
}

.slideBox .bd li {
	position: relative;
}

.slideBox .bd li img {
	width: 100%;
	height: 240px;
	display: block;
}

.slideBox .bd li a {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */
}

.slideBox .hd a {
	display: block;
	width: auto;
	position: absolute;
	bottom: 0.5em;
	right: 0.5em;
	padding: 0.1em 0.7em;
	text-align: center;
	color: #fff;
	background-color: rgba(0, 0, 0, 0.6);
	border-radius: 4px;
}
.slideBox>.a-img{
    position: fixed;
    top:1em;
    right: 0.5em;
    display: block;
    width:2em;
    height: 2em;
    border-radius: 2em;
    background-color: rgba(0, 0, 0, 0.6); 
    z-index: 2;
}
.slideBox>.a-img>img{
    width: 1em;            
    position: absolute;
    top:50%;
    left: 50%;
    margin-top:-0.5em;
    margin-left: -0.5em;
}
.carts{
	position: relative;
}
.cartNum{                      
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    line-height:1.2em;
    border-radius: 1.5em;
    background:#ff0000;  
    position: absolute;
    right: -0.7em;
    top: 0.3em;
    color: #fff;
}
#soldCount{
	float: right; 
	font-size: 0.8em; 
	padding-top: 0.3em;
	color:#adadad;
}
.freight{
	font-size:0.8em;
	color:#adadad;
}
.standard_sku{
	font-size:0.9em;
	color:#adadad;
}
@media all and (max-width:320px){
	.slideBox{
		height:240px;
	}
	.slideBox .bd li img {
		height:240px;
	}
}
@media all and (min-width:321px) and (max-width:360px){
	.slideBox{
		height:270px;
	}
	.slideBox .bd li img {
		height:270px;
	}
}
@media all and (min-width:361px) and (max-width:375px){
	.slideBox{
		height:281px;
	}
	.slideBox .bd li img {
		height:281px;
	}
}
@media all and (min-width:376px) and (max-width:384px){
	.slideBox{
		height:288px;
	}
	.slideBox .bd li img {
		height:288px;
	}
}
@media all and (min-width:385px) and (max-width:414px){
	.slideBox{
		height:311px;
	}
	.slideBox .bd li img {
		height:311px;
	}
}
@media all and (min-width:415px){
	.slideBox{
		height:360px;
	}
	.slideBox .bd li img {
		height:360px;
	}
}

2016-07-21 10:27:34,648 htmlparser.py[line: 25] INFO: End tag: style
2016-07-21 10:27:34,649 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,649 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-21 10:27:34,650 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:27:34,650 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:27:34,651 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:27:34,652 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:27:34,653 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:27:34,654 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:27:34,655 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,656 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:27:34,658 htmlparser.py[line: 28] INFO: Data 
                  
2016-07-21 10:27:34,659 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:27:34,659 htmlparser.py[line: 28] INFO: Data 
              	
2016-07-21 10:27:34,660 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:27:34,661 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,661 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:27:34,662 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:27:34,663 htmlparser.py[line: 19] INFO: Start tag: ul
2016-07-21 10:27:34,664 htmlparser.py[line: 28] INFO: Data 
						
							
								
2016-07-21 10:27:34,664 htmlparser.py[line: 19] INFO: Start tag: li
2016-07-21 10:27:34,665 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:27:34,665 htmlparser.py[line: 25] INFO: End tag: img
2016-07-21 10:27:34,666 htmlparser.py[line: 25] INFO: End tag: li
2016-07-21 10:27:34,666 htmlparser.py[line: 28] INFO: Data 
							
						
					
2016-07-21 10:27:34,666 htmlparser.py[line: 25] INFO: End tag: ul
2016-07-21 10:27:34,666 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,667 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:27:34,667 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,667 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:27:34,667 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:27:34,668 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:27:34,668 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:27:34,668 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,668 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:27:34,669 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:27:34,669 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:27:34,669 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:27:34,669 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:27:34,670 htmlparser.py[line: 28] INFO: Data 		
		
2016-07-21 10:27:34,670 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:27:34,670 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:27:34,670 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:27:34,671 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,671 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:27:34,671 htmlparser.py[line: 28] INFO: Data 
					接口-测试商品1
				
2016-07-21 10:27:34,671 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:27:34,671 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,672 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:27:34,672 htmlparser.py[line: 28] INFO: Data 
					接口测试专用,烦请勿删,勿操作
				
2016-07-21 10:27:34,672 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:27:34,672 htmlparser.py[line: 28] INFO: Data 				
				
2016-07-21 10:27:34,673 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:27:34,673 htmlparser.py[line: 28] INFO: Data 
					单价:
					
2016-07-21 10:27:34,673 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:27:34,673 htmlparser.py[line: 28] INFO: Data 
					
					
						
							￥0.01
						
						
					
					
					
2016-07-21 10:27:34,674 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:27:34,674 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:27:34,674 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:27:34,674 htmlparser.py[line: 28] INFO: Data 销量:6件
2016-07-21 10:27:34,674 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:27:34,674 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,675 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:27:34,675 htmlparser.py[line: 28] INFO: Data 
				
					
2016-07-21 10:27:34,675 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:27:34,675 htmlparser.py[line: 28] INFO: Data 运费:
2016-07-21 10:27:34,675 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:27:34,675 htmlparser.py[line: 28] INFO: Data 4.00元
2016-07-21 10:27:34,676 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:27:34,676 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:27:34,676 htmlparser.py[line: 28] INFO: Data 
				
				
				
2016-07-21 10:27:34,676 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:27:34,676 htmlparser.py[line: 28] INFO: Data 
					数量:
2016-07-21 10:27:34,677 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:27:34,677 htmlparser.py[line: 28] INFO: Data -
2016-07-21 10:27:34,677 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:27:34,677 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:27:34,677 htmlparser.py[line: 28] INFO: Data 1
2016-07-21 10:27:34,677 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:27:34,677 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:27:34,678 htmlparser.py[line: 28] INFO: Data +
2016-07-21 10:27:34,678 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:27:34,678 htmlparser.py[line: 28] INFO: Data 
					
						
						
							
2016-07-21 10:27:34,678 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:27:34,678 htmlparser.py[line: 28] INFO: Data (库存：999994件)
2016-07-21 10:27:34,678 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:27:34,679 htmlparser.py[line: 28] INFO: Data 
						
						
						
					
				
2016-07-21 10:27:34,679 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:27:34,679 htmlparser.py[line: 28] INFO: Data  
				
2016-07-21 10:27:34,679 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:27:34,679 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:27:34,680 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:27:34,680 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:27:34,680 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:27:34,680 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:27:34,680 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:27:34,680 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,681 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:27:34,681 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:27:34,681 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:27:34,681 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:27:34,682 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:27:34,682 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,682 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:27:34,682 htmlparser.py[line: 28] INFO: Data 图文详情
2016-07-21 10:27:34,682 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:27:34,682 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:27:34,683 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,683 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:27:34,683 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:27:34,683 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:27:34,683 htmlparser.py[line: 28] INFO: Data 											
2016-07-21 10:27:34,683 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:27:34,683 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:27:34,684 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:27:34,684 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:27:34,684 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:27:34,684 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:27:34,684 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:27:34,684 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:27:34,685 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:27:34,685 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:27:34,685 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:27:34,685 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:27:34,685 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:27:34,685 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:27:34,685 htmlparser.py[line: 28] INFO: Data 接口测试专用商品,商品详情简介
2016-07-21 10:27:34,686 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:27:34,686 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:27:34,686 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:27:34,686 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:27:34,686 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:27:34,686 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:27:34,686 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:27:34,687 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:27:34,687 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:27:34,687 htmlparser.py[line: 28] INFO: Data 		
	
2016-07-21 10:27:34,687 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:27:34,687 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:27:34,687 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:27:34,688 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:27:34,688 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:27:34,688 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:27:34,688 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:27:34,688 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:27:34,688 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:27:34,689 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:27:34,689 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:27:34,689 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:27:34,689 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:27:34,689 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:27:34,689 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:27:34,689 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:27:34,690 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:27:34,690 htmlparser.py[line: 28] INFO: Data 
			
	var priceLimita = $(".orange").text();
	var soldCounta = $("#soldCount").text();
	var skua = $(".standard_sku").text();
	
            // 滚动窗口来判断按钮显示或隐藏
            $(window).scroll(function() {
                if ($(this).scrollTop() > 120) {
                    $('.top-bg').show(100);
                } else {
                    $('.top-bg').hide(100);
                }
            });
            
            function choose(obj,price,sku,standardSoldCount){
            	if(!$(obj).attr('disabled')){
            	if($(obj).hasClass('active')){
            		$(".orange").text(priceLimita);
                	$("#soldCount").text(soldCounta);
                	$(".standard_sku").text(skua);
                	 $(obj).removeClass('active');
            	}else{
	            	$(".standard_sku").text("(库存:"+sku+"件)");
	            	$(".orange").text("￥"+price);
	            	$("#soldCount").text("销量:"+standardSoldCount+"件");
	            	$(".spec").removeClass('active');
                    $(obj).addClass('active');
            	}
            	}
            }
            
           
            
            $(function(){
            	/* $(".spec").tap(function(){
                    if(!$(this).attr('disabled')){
                        if($(this).hasClass('active')){
                            $(this).removeClass('active');
                            
                        }else{
                        	
                        }
                    }                    
                }); */
                
            	TouchSlide({
    				slideCell : "#slideBox",
    				mainCell : ".bd ul",
    				effect : "leftLoop",
    				pageStateCell : ".pageState"
    			});            	            	
				
            	$(".bottom-details img").width($(".top").width());
            });
            
            // jQuery实现动画滚动
            $('.top-bg').click(function(event) {
                event.preventDefault();
                $('html, body').scrollTop(0);
            });
			
			$(".bottom > p img").click(function(){
                $(this).parent().next().toggle();
                if($(this).parent().next().css("display")=="block"){
                    $(this).attr("src","/images/mall/down.png");
                }else{
                    $(this).attr("src","/images/mall/up.png");
                }
            });
            
            $(".jia").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count)) {
                	count = 1;
                } else {
                	count += 1;
                }
                val.text(count);
            });
            $(".jian").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count) || count <= 1) {
                	count = 1;
                } else {
                	count -= 1;
                }
                val.text(count);
            });
            
            $(".addbtn").click(function(event){
            	if($(this).prop("disabled") == true)
            		return false;
            	var params = {
   					mallGoodsId : "26838",
   					standardId : standardId,
   					amount : $(".val").text(),
   					serial : "10549840601068216320",
   					openId : "ous64uFCCLMyXYDJ-MkNilyCI5C"
   				};
            	
            	var standard = 1;
            	if(standard == 2 && $(".active").length < 1){
    				doAlert("no", "请选择商品的规格");
    				return;
    			}
            	if(standard == 2){
            		var standardId = $(".active").attr("data");
    				params.standardId = standardId;
            	}
            	$.post("/addtocart", params, function(result){
            		if (null == result || !result.success) {
            			toast(result.message);
    					return;
    				}
    				//更新购物车数量
    				/* var cartNum = $(".cartNum").text();
    				if (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {
    					$(".carts").append("<span class='cartNum'>1</span>");
    				} else {
    					if (null != result.attach && result.attach > 0) {
    						$(".cartNum").text(result.attach);
    					}
    				} */
    				toast("已经成功加入购物车");
            	});
            });
		$(".buybtn").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			$(this).attr("disabled","disabled");
			var standard = 1;
        	if(standard == 2 && $(".active").length < 1){
				doAlert("no", "请选择商品的规格");
				$(this).removeAttr("disabled");
				return;
        	}
        	if(standard == 2){
        		var standardId = $(".active").attr("data");
        		window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;
        		return;
        	}
			window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";
		});
	
2016-07-21 10:27:34,691 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:27:34,691 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,691 htmlparser.py[line: 25] INFO: End tag: body
2016-07-21 10:27:34,692 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,692 htmlparser.py[line: 25] INFO: End tag: html
2016-07-21 10:27:34,692 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,692 htmlparser.py[line: 28] INFO: Data 
  	
	
2016-07-21 10:27:34,693 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:27:34,693 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:27:34,693 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:27:34,693 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:27:34,693 htmlparser.py[line: 28] INFO: Data 
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	
2016-07-21 10:27:34,694 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:27:34,694 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,694 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 10:27:34,694 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 10:27:34" WHERE executed_history_id = 20160721102733 AND testcase_id = 80 AND step_id = 82 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:27:34,698 testcase.py[line: 101] INFO: 测试用例[id=80, name=test-n-点击商品]执行成功
2016-07-21 10:27:34,698 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-21 10:27:34,699 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 10:27:34" WHERE executed_history_id = 20160721102733 and testcase_id = 80 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:27:34,865 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-21 10:27:34,865 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721102733', '102', 'test-n-点击立即购买按钮', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-21 10:27:34,868 testsuite.py[line: 63] INFO: 开始执行测试用例[id=102，name=test-n-点击立即购买按钮]
2016-07-21 10:27:34,868 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 10:27:34,868 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721102733', '102', 'test-n-点击立即购买按钮', '无计划', 'pj_wecharno', 104, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"ToBuyGoods","function":"test_to_buy_goods","method":"get","url":"/mall/tobuy/1?","params":{"mallGoodsId":"26838","amount":1,"type":1,"serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-21 10:27:34,871 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 10:27:34,871 casestep.py[line: 64] INFO: 调用的方法为：ToBuyGoods.test_to_buy_goods
2016-07-21 10:27:34,872 wechatno_wemall.py[line: 219] INFO: 正在发起GET请求...
2016-07-21 10:27:34,872 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/mall/tobuy/1?amount=1&type=1&serial=10549840601068216320&mallGoodsId=26838
2016-07-21 10:27:34,872 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-21 10:27:34,884 wechatno_wemall.py[line: 225] INFO: 正在解析返回结果:





<!DOCTYPE html>
<link rel="stylesheet" href="/css/bind/banner.css?v=3.4.0-f5bd5" />  
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
        <link rel="stylesheet" href="/css/skin-nr-min.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" href="/css/cpn.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" type="text/css" href="/css/zepto.alert.css?v=3.4.0-f5bd5">
        <title>哎哟~出错啦~</title>
    </head>
    <body>
        <script type="text/javascript" src="/js/zepto.min.js?v=3.4.0-f5bd5" ></script>
        <script type="text/javascript" src="/js/zepto.alert.min.js?v=3.4.0-f5bd5"></script>
        <script type="text/javascript">
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        </script>
    </body>
</html>

2016-07-21 10:27:34,885 htmlparser.py[line: 28] INFO: Data 






2016-07-21 10:27:34,885 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,885 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:27:34,886 htmlparser.py[line: 25] INFO: End tag: link
2016-07-21 10:27:34,886 htmlparser.py[line: 28] INFO: Data   

2016-07-21 10:27:34,886 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,887 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-21 10:27:34,887 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:27:34,887 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-21 10:27:34,887 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:27:34,887 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:27:34,887 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:27:34,887 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:27:34,887 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:27:34,888 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:27:34,888 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:27:34,888 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:27:34,888 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:27:34,888 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:27:34,888 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:27:34,888 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-21 10:27:34,888 htmlparser.py[line: 28] INFO: Data 哎哟~出错啦~
2016-07-21 10:27:34,888 htmlparser.py[line: 25] INFO: End tag: title
2016-07-21 10:27:34,889 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:27:34,889 htmlparser.py[line: 25] INFO: End tag: head
2016-07-21 10:27:34,889 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:27:34,889 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-21 10:27:34,889 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:27:34,889 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:27:34,889 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:27:34,890 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:27:34,890 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:27:34,890 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:27:34,890 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:27:34,890 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:27:34,890 htmlparser.py[line: 28] INFO: Data 
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        
2016-07-21 10:27:34,890 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:27:34,891 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:27:34,891 htmlparser.py[line: 25] INFO: End tag: body
2016-07-21 10:27:34,891 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,891 htmlparser.py[line: 25] INFO: End tag: html
2016-07-21 10:27:34,891 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:27:34,892 wechatno_wemall.py[line: 231] INFO: [['', '\r\n\r\n\r\n\r\n\r\n\r\n'], ['', '\r\n'], ['link', '  \r\n'], ['link', '\r\n'], ['html', '\r\n    '], ['head', '\r\n        '], ['meta', '\r\n        '], ['meta', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['title', '哎哟~出错啦~'], ['title', '\r\n    '], ['title', '\r\n    '], ['body', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        Zepto(function($){\r\n\t\t\tfunction myAlert(content) {\r\n\t\t    \t$.dialog({\r\n\t\t    \t\tcontent : content,\r\n\t\t    \t\ttitle : "alert"\r\n\t\t    \t});\r\n\t\t    }\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tmyAlert("噢...出错了!请等待管理员处理,稍后重试");\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n        });\r\n        '], ['script', '\r\n    '], ['script', '\r\n'], ['script', '\r\n']]
2016-07-21 10:27:34,892 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 10:27:34,892 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 10:27:34" WHERE executed_history_id = 20160721102733 AND testcase_id = 102 AND step_id = 104 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:27:34,897 testcase.py[line: 101] INFO: 测试用例[id=102, name=test-n-点击立即购买按钮]执行成功
2016-07-21 10:27:34,897 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-21 10:27:34,897 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 10:27:34" WHERE executed_history_id = 20160721102733 and testcase_id = 102 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:27:34,904 testsuite.py[line: 74] INFO: 测试套件[id=79 ,name=微商城-模拟点击页面跳转]已执行完
2016-07-21 10:27:34,904 main.py[line: 229] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-07-21 10:27:34,905 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-07-21 10:27:34,906 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20160721102733',)
2016-07-21 10:27:34,908 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-07-21 10:27:34,908 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20160721102733')
2016-07-21 10:27:34,910 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-07-21 10:27:34,910 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20160721102733')
2016-07-21 10:27:34,913 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-07-21 10:27:34,913 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20160721102733')
2016-07-21 10:27:34,914 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-07-21 10:27:34,915 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20160721102733')
2016-07-21 10:27:34,916 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-07-21 10:27:34,917 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160721102733',)
2016-07-21 10:27:34,919 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]的测试用例执行结果
2016-07-21 10:27:34,919 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160721102733')
2016-07-21 10:27:34,921 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_wecharno, testplan：无计划]的测试用例运行结果到测试报告
2016-07-21 10:27:34,922 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-07-21 10:27:34,922 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160721102733',)
2016-07-21 10:27:34,926 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]已运行的测试用例
2016-07-21 10:27:34,926 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160721102733')
2016-07-21 10:27:34,928 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=80]步骤运行结果
2016-07-21 10:27:34,928 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 80, '20160721102733')
2016-07-21 10:27:34,929 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=102]步骤运行结果
2016-07-21 10:27:34,930 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 102, '20160721102733')
2016-07-21 10:27:34,931 htmlreporter.py[line: 177] INFO: 正在设置测试报告结果文件名
2016-07-21 10:27:34,931 htmlreporter.py[line: 187] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20160721102733.html
2016-07-21 10:27:34,931 htmlreporter.py[line: 180] INFO: 正在生成测试报告
2016-07-21 10:27:34,932 main.py[line: 252] INFO: 生成测试报告成功
2016-07-21 10:27:36,207 main.py[line: 259] INFO: E:\\Projects\\report\\test_report20160721102733.html
2016-07-21 10:27:36,207 main.py[line: 262] INFO: 正在发送测试报告邮件...
2016-07-21 10:27:36,208 main.py[line: 266] INFO: 发送邮件成功
2016-07-21 10:29:18,328 globalpy.py[line: 14] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-07-21 10:29:18,338 globalpy.py[line: 17] INFO: 正在初始化数据库[名称：SAOFUDB]对象
2016-07-21 10:29:18,343 globalpy.py[line: 20] INFO: 正在获取testlink
2016-07-21 10:29:18,391 main.py[line: 60] INFO: 正在创建测试用例报告报表
2016-07-21 10:29:18,392 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-07-21 10:29:18,393 main.py[line: 63] INFO: 正在创建测试步骤报告报表
2016-07-21 10:29:18,393 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-07-21 10:29:18,394 main.py[line: 66] INFO: 正在读取运行模式配置
2016-07-21 10:29:18,395 main.py[line: 187] INFO: 按套件运行测试
2016-07-21 10:29:18,395 main.py[line: 189] INFO: 已获取配置的套件id列表：[79]
2016-07-21 10:29:18,649 main.py[line: 205] INFO: 正在读取套件[id=79，name=微商城-模拟点击页面跳转]的协议，host，端口配置...
2016-07-21 10:29:18,650 main.py[line: 223] INFO: 正在执行测试套件[id=79 ,name=微商城-模拟点击页面跳转]
2016-07-21 10:29:18,650 testsuite.py[line: 42] INFO: 正在获取套件[id=79，name=微商城-模拟点击页面跳转]的测试用例...
2016-07-21 10:29:18,948 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-21 10:29:18,948 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721102918', '80', 'test-n-点击商品', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-21 10:29:18,950 testsuite.py[line: 63] INFO: 开始执行测试用例[id=80，name=test-n-点击商品]
2016-07-21 10:29:18,950 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 10:29:18,950 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721102918', '80', 'test-n-点击商品', '无计划', 'pj_wecharno', 82, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"Goods","function":"test_click_goods","method":"get","url":"/goods/item?","params":{"id":26838, "serial":"var"}}', '{"status":200, "find_flag":1}', 'Block', '', '')
2016-07-21 10:29:18,952 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 10:29:18,952 casestep.py[line: 64] INFO: 调用的方法为：Goods.test_click_goods
2016-07-21 10:29:18,952 wechatno_wemall.py[line: 89] INFO: 正在发起GET请求...
2016-07-21 10:29:18,953 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/goods/item?id=26838&serial=10549840601068216320
2016-07-21 10:29:18,953 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-21 10:29:19,089 htmlparser.py[line: 28] INFO: Data 






2016-07-21 10:29:19,090 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,090 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:29:19,091 htmlparser.py[line: 25] INFO: End tag: link
2016-07-21 10:29:19,091 htmlparser.py[line: 28] INFO: Data   

2016-07-21 10:29:19,092 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,092 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-21 10:29:19,093 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,093 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-21 10:29:19,093 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,094 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:29:19,094 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,095 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:29:19,095 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,096 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:29:19,096 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,097 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:29:19,097 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,097 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:29:19,097 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,098 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:29:19,098 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,098 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-21 10:29:19,099 htmlparser.py[line: 28] INFO: Data 微商城
2016-07-21 10:29:19,099 htmlparser.py[line: 25] INFO: End tag: title
2016-07-21 10:29:19,099 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,100 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:29:19,100 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,100 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:29:19,100 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,101 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:29:19,101 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,102 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:29:19,102 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:29:19,103 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,103 htmlparser.py[line: 25] INFO: End tag: head
2016-07-21 10:29:19,103 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,104 htmlparser.py[line: 19] INFO: Start tag: style
2016-07-21 10:29:19,105 htmlparser.py[line: 28] INFO: Data 
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
	overflow: hidden;
	border-bottom: 1px solid #eaeaea;
}

.top {
	width: 90%;
	margin: 0 auto;
	padding-bottom: 1em;
}

.top p {
	margin: 0.5em 0;
	font-size: 0.8em;
}
.top>p:first-child{
	font-size:1.1em;
}

.fonts {
	font-size: 1em !important;
	margin: 0.8em 0 !important;
}


.jian {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-right: 0 none;
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
	text-align: center;
	margin-left:0.4em;
}

.val {
	background: #fff;
	display: inline-block;
	width: 3.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	text-align: center;
}

.jia {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-left: 0 none;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	text-align: center;
}

.button {
	width: 47%;
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
}

.addbtn {
	background: #edb23e;
	margin-right: 3%;
}

.buybtn {
	background: #f96364;
}

.bottom {
	border-top: 0.5em solid #eeeeee;
	padding-bottom: 3em;
    position: relative;
    width:100%;
}

.bottom .bottom-details{
	width:100%;	
	word-break:break-all;
	overflow-x: hidden; 
}

.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{
	word-break:break-all;
}

.bottom > p:first-child {
	text-indent: 1em;
}

.bottom > p img{
    width: 1em;
    position: absolute;
    top:0.8em;
    right: 1em;
}

.bottom-details p {
	text-indent: 1em;
	word-break:break-all;
}

.inline-padding {
	display: inline-block;
	padding-left: 0.8em;
}

.inline-paddings {
	display: inline-block;
	padding-left: 1.6em;
}

.footer {
	width: 100%;
	height: 3em;
	position: fixed;
	bottom: 0;
	background: #fff;
	color: #b6b6b6;
	text-align: center;
	border-top: 1px solid #eaeaea;
}

.footer a {
	color: #626262;
	display: inline-block;
	height:1em;
	line-height:1em;
	padding-top: 1em;
	padding-bottom: 1em;
}
.footer .inline-paddings-right{
    padding-top: 1em;
    float: right;
}
.footer img {
	display: inline-block;
	width: 1em;
}

.top-bg{
    position: fixed;
    bottom: 3.5em;
    right: 1em;
    width: 2em;
    display: none;
    filter:alpha(opacity=40);       /* IE */
    -moz-opacity:0.4;              /* Moz + FF */
    opacity: 0.4;     
}
.spec{
    display: inline-block;
    margin: 0 1em 0.8em 0;
    font-size:0.7em;
    padding:0.3em 1em;
    border:1px solid #ccc;
    border-radius:3px;
    cursor:pointer;
}
.fonts a.active{
    border: 2px solid #d2b57b;
}
.guige{
    float: left;
    width: 40px;
}
.guige-detail{
    margin-left: 40px;
}
.guige-detail a[disabled]{
    background: none repeat scroll 0 0 #fff;
    color: #e3e3e3;
    cursor: default;
}
/* 本例子css -------------------------------------- */
.slideBox {
	position: relative;
	width: 100%;
	height: 240px;
	overflow: hidden;
}

.slideBox .hd {
	position: absolute;
	width: 100%;
	height: 27px;
	bottom: 0;
	left: 0;
	z-index: 1;
}

.slideBox .hd img {
	width: 11px;
}

.slideBox .bd {
	position: relative;
	z-index: 0;
}

.slideBox .bd li {
	position: relative;
}

.slideBox .bd li img {
	width: 100%;
	height: 240px;
	display: block;
}

.slideBox .bd li a {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */
}

.slideBox .hd a {
	display: block;
	width: auto;
	position: absolute;
	bottom: 0.5em;
	right: 0.5em;
	padding: 0.1em 0.7em;
	text-align: center;
	color: #fff;
	background-color: rgba(0, 0, 0, 0.6);
	border-radius: 4px;
}
.slideBox>.a-img{
    position: fixed;
    top:1em;
    right: 0.5em;
    display: block;
    width:2em;
    height: 2em;
    border-radius: 2em;
    background-color: rgba(0, 0, 0, 0.6); 
    z-index: 2;
}
.slideBox>.a-img>img{
    width: 1em;            
    position: absolute;
    top:50%;
    left: 50%;
    margin-top:-0.5em;
    margin-left: -0.5em;
}
.carts{
	position: relative;
}
.cartNum{                      
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    line-height:1.2em;
    border-radius: 1.5em;
    background:#ff0000;  
    position: absolute;
    right: -0.7em;
    top: 0.3em;
    color: #fff;
}
#soldCount{
	float: right; 
	font-size: 0.8em; 
	padding-top: 0.3em;
	color:#adadad;
}
.freight{
	font-size:0.8em;
	color:#adadad;
}
.standard_sku{
	font-size:0.9em;
	color:#adadad;
}
@media all and (max-width:320px){
	.slideBox{
		height:240px;
	}
	.slideBox .bd li img {
		height:240px;
	}
}
@media all and (min-width:321px) and (max-width:360px){
	.slideBox{
		height:270px;
	}
	.slideBox .bd li img {
		height:270px;
	}
}
@media all and (min-width:361px) and (max-width:375px){
	.slideBox{
		height:281px;
	}
	.slideBox .bd li img {
		height:281px;
	}
}
@media all and (min-width:376px) and (max-width:384px){
	.slideBox{
		height:288px;
	}
	.slideBox .bd li img {
		height:288px;
	}
}
@media all and (min-width:385px) and (max-width:414px){
	.slideBox{
		height:311px;
	}
	.slideBox .bd li img {
		height:311px;
	}
}
@media all and (min-width:415px){
	.slideBox{
		height:360px;
	}
	.slideBox .bd li img {
		height:360px;
	}
}

2016-07-21 10:29:19,111 htmlparser.py[line: 25] INFO: End tag: style
2016-07-21 10:29:19,111 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,112 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-21 10:29:19,112 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:29:19,112 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:29:19,113 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:29:19,113 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:29:19,113 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:29:19,114 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:29:19,114 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,114 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:29:19,114 htmlparser.py[line: 28] INFO: Data 
                  
2016-07-21 10:29:19,115 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:29:19,115 htmlparser.py[line: 28] INFO: Data 
              	
2016-07-21 10:29:19,115 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:29:19,115 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,116 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:29:19,116 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:29:19,117 htmlparser.py[line: 19] INFO: Start tag: ul
2016-07-21 10:29:19,117 htmlparser.py[line: 28] INFO: Data 
						
							
								
2016-07-21 10:29:19,117 htmlparser.py[line: 19] INFO: Start tag: li
2016-07-21 10:29:19,117 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:29:19,118 htmlparser.py[line: 25] INFO: End tag: img
2016-07-21 10:29:19,118 htmlparser.py[line: 25] INFO: End tag: li
2016-07-21 10:29:19,118 htmlparser.py[line: 28] INFO: Data 
							
						
					
2016-07-21 10:29:19,118 htmlparser.py[line: 25] INFO: End tag: ul
2016-07-21 10:29:19,119 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,119 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:29:19,119 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,120 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:29:19,120 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:29:19,120 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:29:19,121 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:29:19,121 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,121 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:29:19,121 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:29:19,122 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:29:19,122 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:29:19,122 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:29:19,122 htmlparser.py[line: 28] INFO: Data 		
		
2016-07-21 10:29:19,123 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:29:19,123 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:29:19,123 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:29:19,124 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,124 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:29:19,124 htmlparser.py[line: 28] INFO: Data 
					接口-测试商品1
				
2016-07-21 10:29:19,124 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:29:19,125 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,125 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:29:19,125 htmlparser.py[line: 28] INFO: Data 
					接口测试专用,烦请勿删,勿操作
				
2016-07-21 10:29:19,125 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:29:19,125 htmlparser.py[line: 28] INFO: Data 				
				
2016-07-21 10:29:19,125 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:29:19,125 htmlparser.py[line: 28] INFO: Data 
					单价:
					
2016-07-21 10:29:19,126 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:29:19,126 htmlparser.py[line: 28] INFO: Data 
					
					
						
							￥0.01
						
						
					
					
					
2016-07-21 10:29:19,126 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:29:19,126 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:29:19,126 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:29:19,126 htmlparser.py[line: 28] INFO: Data 销量:6件
2016-07-21 10:29:19,126 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:29:19,126 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,127 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:29:19,127 htmlparser.py[line: 28] INFO: Data 
				
					
2016-07-21 10:29:19,127 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:29:19,127 htmlparser.py[line: 28] INFO: Data 运费:
2016-07-21 10:29:19,127 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:29:19,127 htmlparser.py[line: 28] INFO: Data 4.00元
2016-07-21 10:29:19,127 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:29:19,128 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:29:19,128 htmlparser.py[line: 28] INFO: Data 
				
				
				
2016-07-21 10:29:19,128 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:29:19,128 htmlparser.py[line: 28] INFO: Data 
					数量:
2016-07-21 10:29:19,128 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:29:19,128 htmlparser.py[line: 28] INFO: Data -
2016-07-21 10:29:19,128 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:29:19,128 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:29:19,129 htmlparser.py[line: 28] INFO: Data 1
2016-07-21 10:29:19,129 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:29:19,129 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:29:19,129 htmlparser.py[line: 28] INFO: Data +
2016-07-21 10:29:19,129 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:29:19,129 htmlparser.py[line: 28] INFO: Data 
					
						
						
							
2016-07-21 10:29:19,129 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:29:19,129 htmlparser.py[line: 28] INFO: Data (库存：999994件)
2016-07-21 10:29:19,130 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:29:19,130 htmlparser.py[line: 28] INFO: Data 
						
						
						
					
				
2016-07-21 10:29:19,130 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:29:19,130 htmlparser.py[line: 28] INFO: Data  
				
2016-07-21 10:29:19,130 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:29:19,130 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:29:19,130 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:29:19,130 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:29:19,130 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:29:19,131 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:29:19,131 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:29:19,131 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,131 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:29:19,131 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:29:19,131 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:29:19,131 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:29:19,131 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:29:19,132 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,132 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:29:19,132 htmlparser.py[line: 28] INFO: Data 图文详情
2016-07-21 10:29:19,132 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:29:19,132 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:29:19,132 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,132 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:29:19,132 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:29:19,132 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:29:19,133 htmlparser.py[line: 28] INFO: Data 											
2016-07-21 10:29:19,133 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:29:19,133 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:29:19,133 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:29:19,133 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:29:19,133 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:29:19,133 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:29:19,133 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:29:19,133 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:29:19,134 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:29:19,134 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:29:19,134 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:29:19,134 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:29:19,134 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:29:19,134 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:29:19,134 htmlparser.py[line: 28] INFO: Data 接口测试专用商品,商品详情简介
2016-07-21 10:29:19,135 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:29:19,135 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:29:19,135 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:29:19,135 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:29:19,135 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:29:19,135 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:29:19,136 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:29:19,136 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:29:19,136 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:29:19,136 htmlparser.py[line: 28] INFO: Data 		
	
2016-07-21 10:29:19,136 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:29:19,136 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:29:19,136 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:29:19,137 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:29:19,137 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:29:19,137 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:29:19,137 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:29:19,137 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:29:19,137 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:29:19,137 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:29:19,137 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:29:19,138 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:29:19,138 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:29:19,138 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:29:19,138 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:29:19,138 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:29:19,138 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:29:19,138 htmlparser.py[line: 28] INFO: Data 
			
	var priceLimita = $(".orange").text();
	var soldCounta = $("#soldCount").text();
	var skua = $(".standard_sku").text();
	
            // 滚动窗口来判断按钮显示或隐藏
            $(window).scroll(function() {
                if ($(this).scrollTop() > 120) {
                    $('.top-bg').show(100);
                } else {
                    $('.top-bg').hide(100);
                }
            });
            
            function choose(obj,price,sku,standardSoldCount){
            	if(!$(obj).attr('disabled')){
            	if($(obj).hasClass('active')){
            		$(".orange").text(priceLimita);
                	$("#soldCount").text(soldCounta);
                	$(".standard_sku").text(skua);
                	 $(obj).removeClass('active');
            	}else{
	            	$(".standard_sku").text("(库存:"+sku+"件)");
	            	$(".orange").text("￥"+price);
	            	$("#soldCount").text("销量:"+standardSoldCount+"件");
	            	$(".spec").removeClass('active');
                    $(obj).addClass('active');
            	}
            	}
            }
            
           
            
            $(function(){
            	/* $(".spec").tap(function(){
                    if(!$(this).attr('disabled')){
                        if($(this).hasClass('active')){
                            $(this).removeClass('active');
                            
                        }else{
                        	
                        }
                    }                    
                }); */
                
            	TouchSlide({
    				slideCell : "#slideBox",
    				mainCell : ".bd ul",
    				effect : "leftLoop",
    				pageStateCell : ".pageState"
    			});            	            	
				
            	$(".bottom-details img").width($(".top").width());
            });
            
            // jQuery实现动画滚动
            $('.top-bg').click(function(event) {
                event.preventDefault();
                $('html, body').scrollTop(0);
            });
			
			$(".bottom > p img").click(function(){
                $(this).parent().next().toggle();
                if($(this).parent().next().css("display")=="block"){
                    $(this).attr("src","/images/mall/down.png");
                }else{
                    $(this).attr("src","/images/mall/up.png");
                }
            });
            
            $(".jia").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count)) {
                	count = 1;
                } else {
                	count += 1;
                }
                val.text(count);
            });
            $(".jian").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count) || count <= 1) {
                	count = 1;
                } else {
                	count -= 1;
                }
                val.text(count);
            });
            
            $(".addbtn").click(function(event){
            	if($(this).prop("disabled") == true)
            		return false;
            	var params = {
   					mallGoodsId : "26838",
   					standardId : standardId,
   					amount : $(".val").text(),
   					serial : "10549840601068216320",
   					openId : "ous64uFCCLMyXYDJ-MkNilyCI5C"
   				};
            	
            	var standard = 1;
            	if(standard == 2 && $(".active").length < 1){
    				doAlert("no", "请选择商品的规格");
    				return;
    			}
            	if(standard == 2){
            		var standardId = $(".active").attr("data");
    				params.standardId = standardId;
            	}
            	$.post("/addtocart", params, function(result){
            		if (null == result || !result.success) {
            			toast(result.message);
    					return;
    				}
    				//更新购物车数量
    				/* var cartNum = $(".cartNum").text();
    				if (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {
    					$(".carts").append("<span class='cartNum'>1</span>");
    				} else {
    					if (null != result.attach && result.attach > 0) {
    						$(".cartNum").text(result.attach);
    					}
    				} */
    				toast("已经成功加入购物车");
            	});
            });
		$(".buybtn").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			$(this).attr("disabled","disabled");
			var standard = 1;
        	if(standard == 2 && $(".active").length < 1){
				doAlert("no", "请选择商品的规格");
				$(this).removeAttr("disabled");
				return;
        	}
        	if(standard == 2){
        		var standardId = $(".active").attr("data");
        		window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;
        		return;
        	}
			window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";
		});
	
2016-07-21 10:29:19,139 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:29:19,139 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,140 htmlparser.py[line: 25] INFO: End tag: body
2016-07-21 10:29:19,140 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,140 htmlparser.py[line: 25] INFO: End tag: html
2016-07-21 10:29:19,140 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,140 htmlparser.py[line: 28] INFO: Data 
  	
	
2016-07-21 10:29:19,140 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:29:19,140 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:29:19,140 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:29:19,141 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:29:19,141 htmlparser.py[line: 28] INFO: Data 
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	
2016-07-21 10:29:19,141 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:29:19,141 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,141 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 10:29:19,141 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 10:29:18" WHERE executed_history_id = 20160721102918 AND testcase_id = 80 AND step_id = 82 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:29:19,144 testcase.py[line: 101] INFO: 测试用例[id=80, name=test-n-点击商品]执行成功
2016-07-21 10:29:19,144 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-21 10:29:19,144 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 10:29:18" WHERE executed_history_id = 20160721102918 and testcase_id = 80 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:29:19,291 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-21 10:29:19,291 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721102918', '102', 'test-n-点击立即购买按钮', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-21 10:29:19,293 testsuite.py[line: 63] INFO: 开始执行测试用例[id=102，name=test-n-点击立即购买按钮]
2016-07-21 10:29:19,293 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 10:29:19,293 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721102918', '102', 'test-n-点击立即购买按钮', '无计划', 'pj_wecharno', 104, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"ToBuyGoods","function":"test_to_buy_goods","method":"get","url":"/mall/tobuy/1?","params":{"mallGoodsId":"26838","amount":1,"type":1,"serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-21 10:29:19,294 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 10:29:19,294 casestep.py[line: 64] INFO: 调用的方法为：ToBuyGoods.test_to_buy_goods
2016-07-21 10:29:19,294 wechatno_wemall.py[line: 219] INFO: 正在发起GET请求...
2016-07-21 10:29:19,294 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/mall/tobuy/1?type=1&mallGoodsId=26838&serial=10549840601068216320&amount=1
2016-07-21 10:29:19,295 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5C'}
2016-07-21 10:29:19,367 wechatno_wemall.py[line: 225] INFO: 正在解析返回结果:





<!DOCTYPE html>
<link rel="stylesheet" href="/css/bind/banner.css?v=3.4.0-f5bd5" />  
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
        <link rel="stylesheet" href="/css/skin-nr-min.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" href="/css/cpn.css?v=3.4.0-f5bd5">
        <link rel="stylesheet" type="text/css" href="/css/zepto.alert.css?v=3.4.0-f5bd5">
        <title>哎哟~出错啦~</title>
    </head>
    <body>
        <script type="text/javascript" src="/js/zepto.min.js?v=3.4.0-f5bd5" ></script>
        <script type="text/javascript" src="/js/zepto.alert.min.js?v=3.4.0-f5bd5"></script>
        <script type="text/javascript">
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        </script>
    </body>
</html>

2016-07-21 10:29:19,368 htmlparser.py[line: 28] INFO: Data 






2016-07-21 10:29:19,368 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,369 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:29:19,369 htmlparser.py[line: 25] INFO: End tag: link
2016-07-21 10:29:19,369 htmlparser.py[line: 28] INFO: Data   

2016-07-21 10:29:19,370 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,370 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-21 10:29:19,371 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:29:19,371 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-21 10:29:19,371 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:29:19,372 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:29:19,372 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:29:19,375 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:29:19,376 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:29:19,376 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:29:19,377 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:29:19,378 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:29:19,378 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:29:19,379 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:29:19,379 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:29:19,380 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-21 10:29:19,380 htmlparser.py[line: 28] INFO: Data 哎哟~出错啦~
2016-07-21 10:29:19,381 htmlparser.py[line: 25] INFO: End tag: title
2016-07-21 10:29:19,381 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:29:19,381 htmlparser.py[line: 25] INFO: End tag: head
2016-07-21 10:29:19,382 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:29:19,382 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-21 10:29:19,382 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:29:19,383 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:29:19,383 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:29:19,384 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:29:19,384 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:29:19,385 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:29:19,385 htmlparser.py[line: 28] INFO: Data 
        
2016-07-21 10:29:19,385 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:29:19,386 htmlparser.py[line: 28] INFO: Data 
        Zepto(function($){
			function myAlert(content) {
		    	$.dialog({
		    		content : content,
		    		title : "alert"
		    	});
		    }
			
				
				
					myAlert("噢...出错了!请等待管理员处理,稍后重试");					
				
			
        });
        
2016-07-21 10:29:19,386 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:29:19,396 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:29:19,396 htmlparser.py[line: 25] INFO: End tag: body
2016-07-21 10:29:19,396 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,396 htmlparser.py[line: 25] INFO: End tag: html
2016-07-21 10:29:19,396 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:29:19,397 wechatno_wemall.py[line: 231] INFO: [['', '\r\n\r\n\r\n\r\n\r\n\r\n'], ['', '\r\n'], ['link', '  \r\n'], ['link', '\r\n'], ['html', '\r\n    '], ['head', '\r\n        '], ['meta', '\r\n        '], ['meta', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['link', '\r\n        '], ['title', '哎哟~出错啦~'], ['title', '\r\n    '], ['title', '\r\n    '], ['body', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        '], ['script', '\r\n        Zepto(function($){\r\n\t\t\tfunction myAlert(content) {\r\n\t\t    \t$.dialog({\r\n\t\t    \t\tcontent : content,\r\n\t\t    \t\ttitle : "alert"\r\n\t\t    \t});\r\n\t\t    }\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tmyAlert("噢...出错了!请等待管理员处理,稍后重试");\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n        });\r\n        '], ['script', '\r\n    '], ['script', '\r\n'], ['script', '\r\n']]
2016-07-21 10:29:19,397 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 10:29:19,397 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 10:29:19" WHERE executed_history_id = 20160721102918 AND testcase_id = 102 AND step_id = 104 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:29:19,399 testcase.py[line: 101] INFO: 测试用例[id=102, name=test-n-点击立即购买按钮]执行成功
2016-07-21 10:29:19,399 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-21 10:29:19,399 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 10:29:19" WHERE executed_history_id = 20160721102918 and testcase_id = 102 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:29:19,401 testsuite.py[line: 74] INFO: 测试套件[id=79 ,name=微商城-模拟点击页面跳转]已执行完
2016-07-21 10:29:19,401 main.py[line: 229] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-07-21 10:29:19,402 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-07-21 10:29:19,402 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20160721102918',)
2016-07-21 10:29:19,403 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-07-21 10:29:19,403 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20160721102918')
2016-07-21 10:29:19,404 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-07-21 10:29:19,404 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20160721102918')
2016-07-21 10:29:19,405 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-07-21 10:29:19,405 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20160721102918')
2016-07-21 10:29:19,407 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-07-21 10:29:19,407 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20160721102918')
2016-07-21 10:29:19,408 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-07-21 10:29:19,409 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160721102918',)
2016-07-21 10:29:19,410 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]的测试用例执行结果
2016-07-21 10:29:19,410 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160721102918')
2016-07-21 10:29:19,412 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_wecharno, testplan：无计划]的测试用例运行结果到测试报告
2016-07-21 10:29:19,412 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-07-21 10:29:19,413 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160721102918',)
2016-07-21 10:29:19,414 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_wecharno, testplan：无计划]已运行的测试用例
2016-07-21 10:29:19,414 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_wecharno', '无计划', '20160721102918')
2016-07-21 10:29:19,415 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=80]步骤运行结果
2016-07-21 10:29:19,416 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 80, '20160721102918')
2016-07-21 10:29:19,417 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=102]步骤运行结果
2016-07-21 10:29:19,417 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', '无计划', 102, '20160721102918')
2016-07-21 10:29:19,419 htmlreporter.py[line: 177] INFO: 正在设置测试报告结果文件名
2016-07-21 10:29:19,419 htmlreporter.py[line: 187] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20160721102918.html
2016-07-21 10:29:19,419 htmlreporter.py[line: 180] INFO: 正在生成测试报告
2016-07-21 10:29:19,420 main.py[line: 252] INFO: 生成测试报告成功
2016-07-21 10:29:19,654 main.py[line: 259] INFO: E:\\Projects\\report\\test_report20160721102918.html
2016-07-21 10:29:19,654 main.py[line: 262] INFO: 正在发送测试报告邮件...
2016-07-21 10:29:19,655 main.py[line: 266] INFO: 发送邮件成功
2016-07-21 10:35:10,957 globalpy.py[line: 14] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-07-21 10:35:10,966 globalpy.py[line: 17] INFO: 正在初始化数据库[名称：SAOFUDB]对象
2016-07-21 10:35:10,971 globalpy.py[line: 20] INFO: 正在获取testlink
2016-07-21 10:35:11,021 main.py[line: 60] INFO: 正在创建测试用例报告报表
2016-07-21 10:35:11,021 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-07-21 10:35:11,022 main.py[line: 63] INFO: 正在创建测试步骤报告报表
2016-07-21 10:35:11,023 mydb.py[line: 37] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-07-21 10:35:11,023 main.py[line: 66] INFO: 正在读取运行模式配置
2016-07-21 10:35:11,025 main.py[line: 187] INFO: 按套件运行测试
2016-07-21 10:35:11,025 main.py[line: 189] INFO: 已获取配置的套件id列表：[79]
2016-07-21 10:35:11,284 main.py[line: 205] INFO: 正在读取套件[id=79，name=微商城-模拟点击页面跳转]的协议，host，端口配置...
2016-07-21 10:35:11,285 main.py[line: 223] INFO: 正在执行测试套件[id=79 ,name=微商城-模拟点击页面跳转]
2016-07-21 10:35:11,285 testsuite.py[line: 42] INFO: 正在获取套件[id=79，name=微商城-模拟点击页面跳转]的测试用例...
2016-07-21 10:35:11,546 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-21 10:35:11,546 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721103510', '80', 'test-n-点击商品', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-21 10:35:11,548 testsuite.py[line: 63] INFO: 开始执行测试用例[id=80，name=test-n-点击商品]
2016-07-21 10:35:11,548 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 10:35:11,548 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721103510', '80', 'test-n-点击商品', '无计划', 'pj_wecharno', 82, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"Goods","function":"test_click_goods","method":"get","url":"/goods/item?","params":{"id":26838, "serial":"var"}}', '{"status":200, "find_flag":1}', 'Block', '', '')
2016-07-21 10:35:11,549 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 10:35:11,549 casestep.py[line: 64] INFO: 调用的方法为：Goods.test_click_goods
2016-07-21 10:35:11,550 wechatno_wemall.py[line: 89] INFO: 正在发起GET请求...
2016-07-21 10:35:11,550 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/goods/item?id=26838&serial=10549840601068216320
2016-07-21 10:35:11,550 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5CY2'}
2016-07-21 10:35:11,714 htmlparser.py[line: 28] INFO: Data 






2016-07-21 10:35:11,714 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,715 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:35:11,715 htmlparser.py[line: 25] INFO: End tag: link
2016-07-21 10:35:11,715 htmlparser.py[line: 28] INFO: Data   

2016-07-21 10:35:11,715 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,716 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-21 10:35:11,716 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,716 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-21 10:35:11,716 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,717 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,717 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,717 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,717 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,717 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,718 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,718 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,718 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,718 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,718 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,718 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,719 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,720 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-21 10:35:11,720 htmlparser.py[line: 28] INFO: Data 微商城
2016-07-21 10:35:11,720 htmlparser.py[line: 25] INFO: End tag: title
2016-07-21 10:35:11,720 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,720 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:35:11,721 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,721 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:35:11,721 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,721 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:35:11,721 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,722 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,722 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,722 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,722 htmlparser.py[line: 25] INFO: End tag: head
2016-07-21 10:35:11,723 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,723 htmlparser.py[line: 19] INFO: Start tag: style
2016-07-21 10:35:11,723 htmlparser.py[line: 28] INFO: Data 
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
	overflow: hidden;
	border-bottom: 1px solid #eaeaea;
}

.top {
	width: 90%;
	margin: 0 auto;
	padding-bottom: 1em;
}

.top p {
	margin: 0.5em 0;
	font-size: 0.8em;
}
.top>p:first-child{
	font-size:1.1em;
}

.fonts {
	font-size: 1em !important;
	margin: 0.8em 0 !important;
}


.jian {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-right: 0 none;
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
	text-align: center;
	margin-left:0.4em;
}

.val {
	background: #fff;
	display: inline-block;
	width: 3.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	text-align: center;
}

.jia {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-left: 0 none;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	text-align: center;
}

.button {
	width: 47%;
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
}

.addbtn {
	background: #edb23e;
	margin-right: 3%;
}

.buybtn {
	background: #f96364;
}

.bottom {
	border-top: 0.5em solid #eeeeee;
	padding-bottom: 3em;
    position: relative;
    width:100%;
}

.bottom .bottom-details{
	width:100%;	
	word-break:break-all;
	overflow-x: hidden; 
}

.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{
	word-break:break-all;
}

.bottom > p:first-child {
	text-indent: 1em;
}

.bottom > p img{
    width: 1em;
    position: absolute;
    top:0.8em;
    right: 1em;
}

.bottom-details p {
	text-indent: 1em;
	word-break:break-all;
}

.inline-padding {
	display: inline-block;
	padding-left: 0.8em;
}

.inline-paddings {
	display: inline-block;
	padding-left: 1.6em;
}

.footer {
	width: 100%;
	height: 3em;
	position: fixed;
	bottom: 0;
	background: #fff;
	color: #b6b6b6;
	text-align: center;
	border-top: 1px solid #eaeaea;
}

.footer a {
	color: #626262;
	display: inline-block;
	height:1em;
	line-height:1em;
	padding-top: 1em;
	padding-bottom: 1em;
}
.footer .inline-paddings-right{
    padding-top: 1em;
    float: right;
}
.footer img {
	display: inline-block;
	width: 1em;
}

.top-bg{
    position: fixed;
    bottom: 3.5em;
    right: 1em;
    width: 2em;
    display: none;
    filter:alpha(opacity=40);       /* IE */
    -moz-opacity:0.4;              /* Moz + FF */
    opacity: 0.4;     
}
.spec{
    display: inline-block;
    margin: 0 1em 0.8em 0;
    font-size:0.7em;
    padding:0.3em 1em;
    border:1px solid #ccc;
    border-radius:3px;
    cursor:pointer;
}
.fonts a.active{
    border: 2px solid #d2b57b;
}
.guige{
    float: left;
    width: 40px;
}
.guige-detail{
    margin-left: 40px;
}
.guige-detail a[disabled]{
    background: none repeat scroll 0 0 #fff;
    color: #e3e3e3;
    cursor: default;
}
/* 本例子css -------------------------------------- */
.slideBox {
	position: relative;
	width: 100%;
	height: 240px;
	overflow: hidden;
}

.slideBox .hd {
	position: absolute;
	width: 100%;
	height: 27px;
	bottom: 0;
	left: 0;
	z-index: 1;
}

.slideBox .hd img {
	width: 11px;
}

.slideBox .bd {
	position: relative;
	z-index: 0;
}

.slideBox .bd li {
	position: relative;
}

.slideBox .bd li img {
	width: 100%;
	height: 240px;
	display: block;
}

.slideBox .bd li a {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */
}

.slideBox .hd a {
	display: block;
	width: auto;
	position: absolute;
	bottom: 0.5em;
	right: 0.5em;
	padding: 0.1em 0.7em;
	text-align: center;
	color: #fff;
	background-color: rgba(0, 0, 0, 0.6);
	border-radius: 4px;
}
.slideBox>.a-img{
    position: fixed;
    top:1em;
    right: 0.5em;
    display: block;
    width:2em;
    height: 2em;
    border-radius: 2em;
    background-color: rgba(0, 0, 0, 0.6); 
    z-index: 2;
}
.slideBox>.a-img>img{
    width: 1em;            
    position: absolute;
    top:50%;
    left: 50%;
    margin-top:-0.5em;
    margin-left: -0.5em;
}
.carts{
	position: relative;
}
.cartNum{                      
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    line-height:1.2em;
    border-radius: 1.5em;
    background:#ff0000;  
    position: absolute;
    right: -0.7em;
    top: 0.3em;
    color: #fff;
}
#soldCount{
	float: right; 
	font-size: 0.8em; 
	padding-top: 0.3em;
	color:#adadad;
}
.freight{
	font-size:0.8em;
	color:#adadad;
}
.standard_sku{
	font-size:0.9em;
	color:#adadad;
}
@media all and (max-width:320px){
	.slideBox{
		height:240px;
	}
	.slideBox .bd li img {
		height:240px;
	}
}
@media all and (min-width:321px) and (max-width:360px){
	.slideBox{
		height:270px;
	}
	.slideBox .bd li img {
		height:270px;
	}
}
@media all and (min-width:361px) and (max-width:375px){
	.slideBox{
		height:281px;
	}
	.slideBox .bd li img {
		height:281px;
	}
}
@media all and (min-width:376px) and (max-width:384px){
	.slideBox{
		height:288px;
	}
	.slideBox .bd li img {
		height:288px;
	}
}
@media all and (min-width:385px) and (max-width:414px){
	.slideBox{
		height:311px;
	}
	.slideBox .bd li img {
		height:311px;
	}
}
@media all and (min-width:415px){
	.slideBox{
		height:360px;
	}
	.slideBox .bd li img {
		height:360px;
	}
}

2016-07-21 10:35:11,724 htmlparser.py[line: 25] INFO: End tag: style
2016-07-21 10:35:11,724 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,724 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-21 10:35:11,724 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,725 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,725 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:35:11,725 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,725 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,725 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,726 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,726 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:35:11,726 htmlparser.py[line: 28] INFO: Data 
                  
2016-07-21 10:35:11,726 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:35:11,726 htmlparser.py[line: 28] INFO: Data 
              	
2016-07-21 10:35:11,726 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:35:11,727 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,727 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,727 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,728 htmlparser.py[line: 19] INFO: Start tag: ul
2016-07-21 10:35:11,728 htmlparser.py[line: 28] INFO: Data 
						
							
								
2016-07-21 10:35:11,728 htmlparser.py[line: 19] INFO: Start tag: li
2016-07-21 10:35:11,728 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:35:11,729 htmlparser.py[line: 25] INFO: End tag: img
2016-07-21 10:35:11,729 htmlparser.py[line: 25] INFO: End tag: li
2016-07-21 10:35:11,729 htmlparser.py[line: 28] INFO: Data 
							
						
					
2016-07-21 10:35:11,729 htmlparser.py[line: 25] INFO: End tag: ul
2016-07-21 10:35:11,729 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,729 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,730 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,730 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,730 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,730 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:35:11,730 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:35:11,730 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,731 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,731 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,731 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,731 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:35:11,731 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,732 htmlparser.py[line: 28] INFO: Data 		
		
2016-07-21 10:35:11,732 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,732 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,732 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,732 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,732 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,733 htmlparser.py[line: 28] INFO: Data 
					接口-测试商品1
				
2016-07-21 10:35:11,733 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,733 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,733 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,734 htmlparser.py[line: 28] INFO: Data 
					接口测试专用,烦请勿删,勿操作
				
2016-07-21 10:35:11,734 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,734 htmlparser.py[line: 28] INFO: Data 				
				
2016-07-21 10:35:11,734 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,734 htmlparser.py[line: 28] INFO: Data 
					单价:
					
2016-07-21 10:35:11,735 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,735 htmlparser.py[line: 28] INFO: Data 
					
					
						
							￥0.01
						
						
					
					
					
2016-07-21 10:35:11,735 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,735 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,735 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,735 htmlparser.py[line: 28] INFO: Data 销量:6件
2016-07-21 10:35:11,736 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,736 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,736 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,736 htmlparser.py[line: 28] INFO: Data 
				
					
2016-07-21 10:35:11,736 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,736 htmlparser.py[line: 28] INFO: Data 运费:
2016-07-21 10:35:11,737 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,737 htmlparser.py[line: 28] INFO: Data 4.00元
2016-07-21 10:35:11,737 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,737 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,737 htmlparser.py[line: 28] INFO: Data 
				
				
				
2016-07-21 10:35:11,738 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,738 htmlparser.py[line: 28] INFO: Data 
					数量:
2016-07-21 10:35:11,738 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,738 htmlparser.py[line: 28] INFO: Data -
2016-07-21 10:35:11,738 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,738 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,739 htmlparser.py[line: 28] INFO: Data 1
2016-07-21 10:35:11,739 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,739 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,739 htmlparser.py[line: 28] INFO: Data +
2016-07-21 10:35:11,739 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,739 htmlparser.py[line: 28] INFO: Data 
					
						
						
							
2016-07-21 10:35:11,740 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,740 htmlparser.py[line: 28] INFO: Data (库存：999994件)
2016-07-21 10:35:11,740 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,740 htmlparser.py[line: 28] INFO: Data 
						
						
						
					
				
2016-07-21 10:35:11,740 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,740 htmlparser.py[line: 28] INFO: Data  
				
2016-07-21 10:35:11,741 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,741 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,741 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:35:11,741 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:35:11,741 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,741 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:35:11,742 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:35:11,742 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,742 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,742 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,742 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,742 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,743 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,743 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,743 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,743 htmlparser.py[line: 28] INFO: Data 图文详情
2016-07-21 10:35:11,743 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:35:11,743 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,744 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,744 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,744 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,744 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,744 htmlparser.py[line: 28] INFO: Data 											
2016-07-21 10:35:11,744 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,745 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,745 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:35:11,745 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:35:11,745 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,745 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,745 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:35:11,745 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:35:11,745 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,746 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,746 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:35:11,746 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:35:11,746 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,746 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,746 htmlparser.py[line: 28] INFO: Data 接口测试专用商品,商品详情简介
2016-07-21 10:35:11,746 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 10:35:11,746 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 10:35:11,746 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,746 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,747 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,747 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,747 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,747 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 10:35:11,747 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,747 htmlparser.py[line: 28] INFO: Data 		
	
2016-07-21 10:35:11,747 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,747 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,747 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:35:11,747 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,747 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,748 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,748 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:35:11,748 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,748 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,748 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 10:35:11,748 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,748 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,749 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,749 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,749 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,749 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,749 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,749 htmlparser.py[line: 28] INFO: Data 
			
	var priceLimita = $(".orange").text();
	var soldCounta = $("#soldCount").text();
	var skua = $(".standard_sku").text();
	
            // 滚动窗口来判断按钮显示或隐藏
            $(window).scroll(function() {
                if ($(this).scrollTop() > 120) {
                    $('.top-bg').show(100);
                } else {
                    $('.top-bg').hide(100);
                }
            });
            
            function choose(obj,price,sku,standardSoldCount){
            	if(!$(obj).attr('disabled')){
            	if($(obj).hasClass('active')){
            		$(".orange").text(priceLimita);
                	$("#soldCount").text(soldCounta);
                	$(".standard_sku").text(skua);
                	 $(obj).removeClass('active');
            	}else{
	            	$(".standard_sku").text("(库存:"+sku+"件)");
	            	$(".orange").text("￥"+price);
	            	$("#soldCount").text("销量:"+standardSoldCount+"件");
	            	$(".spec").removeClass('active');
                    $(obj).addClass('active');
            	}
            	}
            }
            
           
            
            $(function(){
            	/* $(".spec").tap(function(){
                    if(!$(this).attr('disabled')){
                        if($(this).hasClass('active')){
                            $(this).removeClass('active');
                            
                        }else{
                        	
                        }
                    }                    
                }); */
                
            	TouchSlide({
    				slideCell : "#slideBox",
    				mainCell : ".bd ul",
    				effect : "leftLoop",
    				pageStateCell : ".pageState"
    			});            	            	
				
            	$(".bottom-details img").width($(".top").width());
            });
            
            // jQuery实现动画滚动
            $('.top-bg').click(function(event) {
                event.preventDefault();
                $('html, body').scrollTop(0);
            });
			
			$(".bottom > p img").click(function(){
                $(this).parent().next().toggle();
                if($(this).parent().next().css("display")=="block"){
                    $(this).attr("src","/images/mall/down.png");
                }else{
                    $(this).attr("src","/images/mall/up.png");
                }
            });
            
            $(".jia").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count)) {
                	count = 1;
                } else {
                	count += 1;
                }
                val.text(count);
            });
            $(".jian").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count) || count <= 1) {
                	count = 1;
                } else {
                	count -= 1;
                }
                val.text(count);
            });
            
            $(".addbtn").click(function(event){
            	if($(this).prop("disabled") == true)
            		return false;
            	var params = {
   					mallGoodsId : "26838",
   					standardId : standardId,
   					amount : $(".val").text(),
   					serial : "10549840601068216320",
   					openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2"
   				};
            	
            	var standard = 1;
            	if(standard == 2 && $(".active").length < 1){
    				doAlert("no", "请选择商品的规格");
    				return;
    			}
            	if(standard == 2){
            		var standardId = $(".active").attr("data");
    				params.standardId = standardId;
            	}
            	$.post("/addtocart", params, function(result){
            		if (null == result || !result.success) {
            			toast(result.message);
    					return;
    				}
    				//更新购物车数量
    				/* var cartNum = $(".cartNum").text();
    				if (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {
    					$(".carts").append("<span class='cartNum'>1</span>");
    				} else {
    					if (null != result.attach && result.attach > 0) {
    						$(".cartNum").text(result.attach);
    					}
    				} */
    				toast("已经成功加入购物车");
            	});
            });
		$(".buybtn").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			$(this).attr("disabled","disabled");
			var standard = 1;
        	if(standard == 2 && $(".active").length < 1){
				doAlert("no", "请选择商品的规格");
				$(this).removeAttr("disabled");
				return;
        	}
        	if(standard == 2){
        		var standardId = $(".active").attr("data");
        		window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;
        		return;
        	}
			window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";
		});
	
2016-07-21 10:35:11,750 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,750 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,750 htmlparser.py[line: 25] INFO: End tag: body
2016-07-21 10:35:11,750 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,750 htmlparser.py[line: 25] INFO: End tag: html
2016-07-21 10:35:11,750 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,751 htmlparser.py[line: 28] INFO: Data 
  	
	
2016-07-21 10:35:11,751 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,751 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,751 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,751 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,751 htmlparser.py[line: 28] INFO: Data 
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	
2016-07-21 10:35:11,751 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,751 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,752 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 10:35:11,752 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 10:35:11" WHERE executed_history_id = 20160721103510 AND testcase_id = 80 AND step_id = 82 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:35:11,755 testcase.py[line: 101] INFO: 测试用例[id=80, name=test-n-点击商品]执行成功
2016-07-21 10:35:11,755 testsuite.py[line: 67] INFO: 正在更新用例执行结果
2016-07-21 10:35:11,755 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 10:35:11" WHERE executed_history_id = 20160721103510 and testcase_id = 80 AND project='pj_wecharno' AND testplan='无计划'
2016-07-21 10:35:11,913 testsuite.py[line: 60] INFO: 记录测试用例到到测试用例报表
2016-07-21 10:35:11,913 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721103510', '102', 'test-n-点击立即购买按钮', '微商城-模拟点击页面跳转', '无计划', 'pj_wecharno', 'Block', '')
2016-07-21 10:35:11,914 testsuite.py[line: 63] INFO: 开始执行测试用例[id=102，name=test-n-点击立即购买按钮]
2016-07-21 10:35:11,914 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 10:35:11,915 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721103510', '102', 'test-n-点击立即购买按钮', '无计划', 'pj_wecharno', 104, 1, '', 'http', 'm.test.saofu.cn', '80', '{"class":"ToBuyGoods","function":"test_to_buy_goods","method":"get","url":"/mall/tobuy/1?","params":{"mallGoodsId":"26838","amount":1,"type":1,"serial":"var"}}', '{"status":200}', 'Block', '', '')
2016-07-21 10:35:11,915 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 10:35:11,915 casestep.py[line: 64] INFO: 调用的方法为：ToBuyGoods.test_to_buy_goods
2016-07-21 10:35:11,916 wechatno_wemall.py[line: 219] INFO: 正在发起GET请求...
2016-07-21 10:35:11,916 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/mall/tobuy/1?mallGoodsId=26838&type=1&amount=1&serial=10549840601068216320
2016-07-21 10:35:11,916 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5CY2'}
2016-07-21 10:35:11,943 wechatno_wemall.py[line: 225] INFO: 正在解析返回结果:
	 





<!DOCTYPE html>
<link rel="stylesheet" href="/css/bind/banner.css?v=3.4.0-f5bd5" />  
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport"
	content="width=device-width, initial-scale=1, user-scalable=no">
<meta name="format-detection" content="telephone=no">
<meta http-equiv="Expires" CONTENT="0">
<meta http-equiv="Cache-Control" CONTENT="no-cache">
<meta http-equiv="Pragma" CONTENT="no-cache">
<title>微商城</title>
<link rel="stylesheet" href="/css/mall/pure.css?v=3.4.0-f5bd5">
<link rel="stylesheet" href="/css/mall/grids-core.css?v=3.4.0-f5bd5">
<link rel="stylesheet" href="/css/mall/zepto.alert.css?v=3.4.0-f5bd5">

<link rel="stylesheet" href="/css/mall/mobiscroll.scroller.css?v=3.4.0-f5bd5">
<link rel="stylesheet" href="/css/mall/mobiscroll.scroller.ios7.css?v=3.4.0-f5bd5">
<link rel="stylesheet" href="/css/mall/mobiscroll.animation.css?v=3.4.0-f5bd5">
</head>
<style type="text/css">
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
	overflow-y: auto;
	overflow-x: hidden;
}

body {
	margin-bottom: 20px;
	overflow-y: auto;
	overflow-x: hidden;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
}

.header ul {
	position:relative;
	overflow: hidden;
}

.header ul li {
	width: 50%;
	float: left;
	height: 2.8em;
	line-height: 2.8em;
	background: #fff;
	text-align: center;
	border-bottom:1px solid #f38b44;
	-moz-box-sizing:border-box; /* Firefox */
     -webkit-box-sizing:border-box; /* Safari */
     box-sizing:border-box;
}
.header ul .lines{
	position: absolute;
	width: 1%;
	height: 2.8em;
	line-height: 2.8em;
	border-right: 1px solid #FDE5D4;
	left: 49%;
	top: -1px;
 } 
.header ul li a {
	color: #8b898a;
}

.tab_content>div {
	height: auto;
	font-size: 0.8em;
	margin: 0.5em 0;
}

.empty-p {
	width: 80%;
	float: left;
	padding: 0.5em 0;
}

.has-p {
    width: 100%;
    margin: 0 auto;
    padding: 0 1em;
    height: auto;
    line-height: 2.5em;
    text-align: left;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -webkit-box-sizing: -webkit-border-box;
}
.has-p-one{
    background: url(/images/mall/contact.png) no-repeat left center;
    background-size: 12px 12px;
}
.has-p-two{
    background: url(/images/mall/take.png) no-repeat left 2px;
    background-size: 12px 12px;
}
.has-p-three{
    background: url(/images/mall/time.png) no-repeat left 2px;
    background-size: 12px 12px;
}
.input-right{
    position: relative;
}
.input-right-img{
    width: 1em;
    position: absolute;
    right: 0.6em;
    top: 0.3em;
}
#scheduledTime{
    width:11em;
    height: 2em;
    border:1px solid #a0a0a0;
    border-radius:4px;
    color:#a0a0a0;
    text-indent:.5em
}
.hiddens-p{
    text-overflow:ellipsis; 
    overflow:hidden; 
    white-space:nowrap;  
}

.right-dashed {
	border-left: 1px solid #eee;
	margin-top: 1em;
	padding-bottom:1em;
}

#edit {
	padding: 1em 0 1em 2em;
    width: 10px;
}

.header ul li.active{
    border-bottom: 4px solid #f38b44;
}
.header ul li.active a{
    color: #f38b44!important;
}
.buy_title{
	background:#f3f3f3;
	padding:0.3em 1em;
	margin: 0;
}
.content {
	width: 100%;
	background: #fff;
	overflow: hidden;	
	padding-bottom:8%;
}

.selectList {
	border-bottom: 1px solid #efefef;
	margin: 0 auto;
	overflow: hidden;
	padding: 0.5em 1em;
	font-size: 0.8em;
	clear:both;
}

.selectList img {
    display: inline-block;
    float: left;
    width: 25%;
    border-radius: 4px;
    -webkit-border-radius: 4px;
}

.button {
	display:block;	
	width: 99%;	
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
	margin:0 auto 0.5em auto;
}

.addbtn {
	background: #33CC66;
}

.btn-wrap-5 {
	padding: 0 1em;
}
.buybtn {
	width: 100%;
	background: #f68d3c;
}

.footer {
	width: 100%;
	background: #fff;
	color: #b6b6b6;
	overflow: hidden;
	text-align: left;
	margin-bottom: 1em;
}

.all-end-button {
	width: 90%;
	margin: 1em auto 0.5em;
}

.all-end-button p:first-child {
	text-align: left;
}

.error-page{
	background: #ddd;
    padding-bottom: 2em;
}
.error-page img{
    margin:0 auto;
	padding-top: 2em;
}
.error-page p{
    text-align:center;
    color:#000;
    width:80%;
    margin:1em auto 2em;
}
#deliverFee{
	text-align:left;
	font-size:0.8em;
	color:#acb0af;
}
.order-div{
    margin-left: 26.8%;            
    position: relative;
}
.order-div>p:last-child{
    width: 100%;
    margin: 0;
    position: absolute;
    bottom: 0;
    left: 0;
}
.m-t-n{
    margin-top: 0;
}
.m-t-n>span{
    display: inline-block;
}
.m-t-n>span:first-child{
    width: 70%;
}
.m-t-n>span:last-child{
    width: 30%;
}
.mtn-span{
    float: right;
}
.t-r-span{
	text-align:right;
}
.ccc{
    color: #ccc;
}
.peisong{
    text-align: right;
    margin-bottom: 0;
    padding-right: 1em;
    padding-top: 0.4em;
}
.peisong-detail{
    color:#000;
}
.peisong-detail input{
    border: none;
}
.peisong-detail div>p{
    padding-left: 1.8em;
    padding-top: 0.8em;
    padding-bottom: 0.8em;
    margin: 0;
    clear:both;
}

.weipay{            
    background: url(/images/weixin2.png) no-repeat left center;
    background-size:1.6em 1.4em; 
}        
.peisong-detail div>p.pay{
    background: url(/images/money2.png) no-repeat left center;
    background-size:1.6em 1.4em; 
}
.peisong-detail div>p.cardpay{
    background: url(/images/cardpay2.png) no-repeat left center;
    background-size:1.6em 1.4em; 
}
.peisong-detail div>p.mdpay{
    background: url(/images/mdpay2.png) no-repeat left center;
    background-size:1.6em 1.4em; 
}

.peisong-detail div[class^="btn-wrap-"] {
	border-bottom: 1px solid #dadada;
	padding: 0 1em;
	height: 3em;
	position: relative;
}

.weipay,.pay,.mdpay,.cardpay{
    position: relative;
}
 .weipay>img,.mdpay>img,.pay>img,.cardpay>img,.zhifu input{
    width: 1.2em;
    height: 1.2em;
    position: absolute;
    right: 0;
    top: 50%;
    transform:translateY(-50%);
}

.pure-img-check {
	background: url(/images/weixuan2.png) no-repeat left center;
    background-size:1.2em 1.2em; 
    float: right;
    height: 1.2em;
    width: 1.2em;
}

.zhifu input{
    display: none;
}
#deliverFeeDiv, #FetchDiv {
	border-bottom: 1px solid #efefef;
    padding: 0.5em 0;
}
#deliverFeeDiv p, #FetchDiv p{
	text-align:right;
}

#remark {
	padding: 0.5em 1em;
	height: 4em;
	font-size: 1.0em;
}
</style>
<body>
	<div id="wrapper">
		
			
			
			
				
					
					
						
						
						
						
						
					
					
				
				
			
			<div class="header">
				
					<ul class="tab">
						<li class='active' data='#deliverFeeDiv'><a href="#tab1">快递发货</a></li>						
						<li class=''><a href="#tab2">到店自提</a></li>
						<span class="lines"></span>
					</ul>
				
			</div>
			<p class="buy_title"></p>
			
			<div class="tab_container">
				<div id="tab1" class="tab_content pure-g" style="">
					<div class="pure-u-24-24">
						
							
								<div class="has-p">
									<span>联系方式：</span>
									<span class="pure-u-3-5">17817738278<span>(17817738178)</span></span>
								</div>
								<div class="has-p">
									<span>配送地址：</span>
									<span class="pure-u-3-5">北京市县密云县把</span>
									<span style="float:right;">
										
											
											
											<a href="/toaddr/1?serial=10549840601068216320&fm=1&mallGoodsId=26838&amount=1&amounts=&cartIds=">
												<img src="/images/enter.png?v=3.4.0-f5bd5" class="pure-img" id="edit">
											</a>
											
										
									</span>
                                </div>
							
							
						
					</div>
				</div>
				<div id="tab2" class="tab_content pure-g" style="display:none">
					<div class="pure-u-24-24">
						
							
							
								<div class="has-p">
									<span class="empty-p">请选择要取货的店铺和时间以确保您能快捷方便取到货物</span>
									<span style="float:right;">
										
											
											
											<a href="/toaddr/2?serial=10549840601068216320&fm=1&mallGoodsId=26838&amount=1&amounts=&cartIds=">
												<img src="/images/enter.png?v=3.4.0-f5bd5" class="pure-img" id="edit">
											</a>
											
										
									</span>
								</div>
							
						
					</div>
				</div>
			</div>
			<p class="buy_title"></p>
			
			<div class="content">
				
					
						
							<div class="selectList">
								<img src="http://res.test.saofu.cn/saofu/upload/image/2016/07/18/352c9a44-5fe7-4546-9786-563d8700a773.jpg"> 
								
									
									
										<div class="order-div">
											<p class="m-t-n"><span>接口-测试商品1</span><span class="mtn-span t-r-span">￥0.01</span></p>
											<p><span class="ccc mtn-span">X1</span></p>															
									
								
							</div>
						
					
					
					
				
				<div id="deliverFeeDiv">
					 
						
						<!-- 消费额大于或等于满额包邮的金额就不算运费 -->								
							<p id="deliverFee">（买满￥0.00元包邮)</p>
							<p class="orange">合计：￥0.01</p>
						
						
					 
				</div>
				<div id="FetchDiv" style="display: none;">
					<p class="orange">合计：￥0.01</p>
				</div>
				<div id="remark">
					<span class="beizhu" style="float:left">备注：</span>
                   	<span class="beizhulan">
                   		<textarea rows="3" placeholder="可于此处给卖家留言备注" style="border:0;width: 85%;"></textarea>
                   	</span>
				</div>
			</div>
			<p class="buy_title"></p>
			<div class="footer">
				<div class="peisong-detail zhifu">
					<div class="btn-wrap-1">
                	
                     	<p class="weipay">微信支付<span class="pure-img-check"></span>
                         	<input type="radio" name="zhifu" value="1"/>
                     	</p>
                    
                  	</div>
                  	
                  	<div class="btn-wrap-2" style="">
                  	
                     	<p class="pay">货到付款<span class="pure-img-check"></span>
                         	<input type="radio" name="zhifu" value="3"/>
                     	</p>
                   	
                   	</div>
		
                    <div class="btn-wrap-3" style="display:none">
                    
                    	<p class="mdpay">到店支付<span class="pure-img-check"></span>
                    		<input type="radio" name="zhifu" value="2"/>
                    	</p>
                   	
                   	</div>
                   	
                   	<div class="btn-wrap-4">
                   	
                   		<p class="cardpay">储值卡支付<span class="pure-img-check"></span>
                   			<input type="radio" name="zhifu" value="4"/>
                   		</p>
                   	
                    </div>
                </div>
			</div>
			<div class="btn-wrap-5">
				<input type="button" class="button buybtn submit" value="确认提交" />
			</div>
			
		
	</div>
	<script type="text/javascript" src="/js/zepto.min.js?v=3.4.0-f5bd5"></script>
	<script type="text/javascript" src="/js/touch.js?v=3.4.0-f5bd5"></script>
    
	<script type="text/javascript" src="/js/mall/zepto.alert.js?v=3.4.0-f5bd5"></script>
	<script type="text/javascript" src="/js/mall/mall.js?v=3.4.0-f5bd5"></script>
	<script type="text/javascript" src="/js/mall/mobiscroll.zepto.js?v=3.4.0-f5bd5" ></script>
	<script type="text/javascript" src="/js/mall/mobiscroll.core.js?v=3.4.0-f5bd5"></script>
	<script type="text/javascript" src="/js/mall/mobiscroll.scroller.js?v=3.4.0-f5bd5"></script>
	<script type="text/javascript" src="/js/mall/mobiscroll.datetime.js?v=3.4.0-f5bd5"></script>
	<script type="text/javascript" src="/js/mall/mobiscroll.i18n.zh.js?v=3.4.0-f5bd5"></script>
	<script type="text/javascript">
		$(function() {
			$("input[name='zhifu']:checked").prev('.pure-img').attr('src','/images/check.png');
			var tab = parseInt("1");
			if(tab == 1){
				$("#deliverFeeDiv").show();
				$("#FetchDiv").hide();
			}else if(parseInt("1") != 0){
				$("#deliverFeeDiv").hide();
				$("#FetchDiv").show();
			}
			// 控制显示图片比例
			var img_left_heights = $(".selectList img").width()*(0.75);
			$(".selectList img,.order-div").css('height',img_left_heights);
			
			// 取货日期
			var now = new Date();
            $('#scheduledTime').mobiscroll().datetime({
                minDate: new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours()+1),
                maxDate: new Date(now.getFullYear(), now.getMonth()+3, now.getDate()),
                stepMinute: 30,
                dateOrder :"yymmdd",
                dateFormat:"yy-mm-dd",
                timeWheels:"HHii",
                timeFormat:"HH:ii",
                //invalid: [{ start: '00:00', end: '08:00' },{ start: '22:00', end: '23:59' }],
                theme: 'ios7',
                lang: 'zh',
                display: 'bottom',
                mode: 'mixed'
            });
            $('#scheduledTime').click(function(){
                $('#scheduledTime').mobiscroll('show'); 
                return false;
            });
            
			$("ul li").click(function() {
				$("ul li").removeClass("active");
				$(this).addClass("active");
				if($(this).attr("data")=="#deliverFeeDiv"){
					$("#deliverFeeDiv").show();
					$("#FetchDiv").hide();
				}else{
					$("#deliverFeeDiv").hide();
					$("#FetchDiv").show();
				}
				$(".tab_content").hide();
				var href = $(this).find("a").attr("href");
				$(href).show();
				
				if(href.endWith("tab1")) {
					$(".btn-wrap-2").show();
					$(".btn-wrap-3").hide();
				} else if(href.endWith("tab2")) {
					$(".btn-wrap-2").hide();
					$(".btn-wrap-3").show();
				}
				//清空已选择的支付方式
				$("input[name='zhifu']").prop("checked", false);
				$(".zhifu .pure-img-check").css('background-image','url(/images/weixuan2.png)');
				return false;
			});
			//商户设置的满额包邮价
			/* var noDeliverFee = toPrice(parseFloat("0")/100);
			var totalFee = parseFloat("0.01");
			if(totalFee > noDeliverFee){
				$("#deliverFeeDiv .orange").text("合计：￥"+ totalFee);
				$("#deliverFee").text("含运费：￥0.00");
			} */
			$('.zhifu>div').click(function(){
	            $("input[name=zhifu]").prop("checked", false);
	            $(".pure-img-check").css('backgroundImage','url(/images/weixuan2.png)');
	            var img_obj = $(this).find('.pure-img-check');
	            var backgroundImage = img_obj.css('background-image');
	            var input_obj = $(this).find('input');
	            if(backgroundImage.indexOf("weixuan2.png") > 0){
	                img_obj.css('background-image','url(/images/check.png)');
	                input_obj.prop("checked", "checked");
	            }else{
	                img_obj.css('background-image','url(/images/weixuan2.png)');
	                input_obj.prop("checked", false);
	            }
	        });
		});
		
		function validateRemark(){
			if($('.beizhulan textarea').val() != "" && $('.beizhulan textarea').val() != undefined){
				if($('.beizhulan textarea').val().length>30){
					$.dialog({
                        widths : '80%',
                        content : '您输入的备注过长，请不要超过30个字',
                        title : 'no',
                        fullok : function() {
                            return true;
                        },                       
                        lock : true
                    });	
					return false;
				}
				return true;
			}
			return true;
		}
		
		$(".submit").click(function(event){
			var payType = $("input[name='zhifu']:checked").val();
			if(null == payType || "" == payType || typeof(payType) == "undefined") {
       		 $.dialog({
                    widths : '80%',
                    content : '请选择支付方式',
                    title : 'no',
                    fullok : function() {
                        return true;
                    },                       
                    lock : true
                });
       			return;
       		}
			$.dialog({
                content : "确认提交订单？",
                title : "no",
                okText: '取消',
                cancelText : '确定', 
                ok : function() {
                	$(".ft-right").removeAttr("disabled");
                	return;
                },
                cancel : function() {                        	
               		
               		if(payType == 1){
               			if($(this).prop("disabled") == true)
                    		return false;
            			
            			var type = 0;
            			$(".tab_content").each(function(){
            				if($(this).css("display") != "none") {
            					var attrId = $(this).attr("id");
            					if(attrId == "tab1") {
            						type = 1;//快递取货
            					} else if(attrId == "tab2") {
            						type = 2;//门店自提
            					}
            				}
            			});
            			if(type <= 0) {
            				doAlert("no", "无效物流方式");
            				return;
            			}
            			if(type == 1) {
            				if($("#tab1 .pure-u-24-24 .empty-p").length > 0) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑收货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            			}
            			var _fetchTime = "";
            			if(type == 2) {
            				if($("#tab2 .pure-u-24-24 .empty-p").length > 0) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑取货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            				_fetchTime = $("#scheduledTime").val();
            				if(null == _fetchTime || "" == _fetchTime || typeof(_fetchTime) == undefined) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请选择取货时间',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            				var shopBranch = "";
            				if(shopBranch == "") {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑取货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            			}
            			
            			var _remark = encodeURI($(".beizhulan").find("textarea").val());
            			var params = {
            				serial : "10549840601068216320",
            				openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
            				fm : "1",
            				mallGoodsId : "26838",
            				amount : "1",
            				cartIds : "",
            				fetchTime : _fetchTime,
            				remark : _remark
            			};
            			if(parseInt("1") == 1 && parseInt("1") == 2){
            				var standardId = "";
            				if(standardId != null && standardId != undefined){
            					params.standardId = standardId;
            				}
            			}
            			
            			if(validateRemark()){
            				var dialog = $.dialog({
            	                content:'订单提交中',
            	                backgrounds :'#000',
            	                opacitys :'0.7',
            	                widths:'50%',
            	                paddings:'0',
            	                warppadding:'2em 0',
            	                foottop:'0',
            	                lock : true
            	            });
            				$.post("/cmorder/" + type+ "/1", params, function(result){
            					dialog.close();
            					
            					if (!result.success) {
            						doAlert("no", result.message);
            						return;
            					}
            					
            					var strParams = "id=" + result.attach;
            	    			strParams += "&serial=10549840601068216320";
            	    			if(type == 2){
            						strParams += "&shopBranchId="+"";
            					}
            	    			window.location.href = "/pay/1?showwxpaytitle=1&" + strParams;
            	        	});
            			}
               		}
               		
    				if(payType == 2){
    					if($(this).prop("disabled") == true)
    		        		return false;
    					
    					var shopBranch = "";
    					if(shopBranch == "") {
    						$.dialog({
        	                    widths : '80%',
        	                    content : '请编辑取货地址',
        	                    title : 'no',
        	                    fullok : function() {
        	                        return true;
        	                    },                       
        	                    lock : true
        	                });
    						return;
    					}
    					
    					if($("#tab2 .pure-u-24-24 .empty-p").length > 0) {
    						$.dialog({
        	                    widths : '80%',
        	                    content : '请编辑取货地址',
        	                    title : 'no',
        	                    fullok : function() {
        	                        return true;
        	                    },                       
        	                    lock : true
        	                });
    						return;
    					}
    					
    					var _fetchTime = $("#scheduledTime").val();
    					if(null == _fetchTime || "" == _fetchTime) {
    						$.dialog({
        	                    widths : '80%',
        	                    content : '请选择取货时间',
        	                    title : 'no',
        	                    fullok : function() {
        	                        return true;
        	                    },                       
        	                    lock : true
        	                });
    						return;
    					}
    					
    					if(validateRemark()){
    						var dialog = $.dialog({
    			                content:'订单提交中',
    			                backgrounds :'#000',
    			                opacitys :'0.7',
    			                widths:'50%',
    			                paddings:'0',
    			                warppadding:'2em 0',
    			                foottop:'0',
    			                lock : true
    			            });
    						
    						var _remark = $(".beizhulan").find("textarea").val();
    						var params = {
    							serial : "10549840601068216320",
    							openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
    							fm : "1",
    							mallGoodsId : "26838",
    							amount : "1",
    							cartIds : "",
    							fetchTime : _fetchTime,
    							remark : _remark
    						};
    						if(parseInt("1") == 1 && parseInt("1") == 2){
    							var standardId = "";
    							if(standardId != null && standardId != undefined){
    								params.standardId = standardId;
    							}
    						}
    						$.post("/cmorder/2/2", params, function(result){
    							dialog.close();
    							if (!result.success) {
    								doAlert("no", result.message);
    								return;
    							}
    							window.location.href = "/mall/success/2?serial=10549840601068216320&ptype=" + 1;
    			        	});
    					}
    				}
    				
    				if(payType == 3){
    					if($(this).prop("disabled") == true)
    		        		return false;
    					
    					if($("#tab1 .pure-u-24-24 .empty-p").length > 0) {
    						$.dialog({
        	                    widths : '80%',
        	                    content : '请编辑收货地址',
        	                    title : 'no',
        	                    fullok : function() {
        	                        return true;
        	                    },                       
        	                    lock : true
        	                });
    						return;
    					}
    					
    					
    					if(validateRemark()){
    						var dialog = $.dialog({
    			                content:'订单提交中',
    			                backgrounds :'#000',
    			                opacitys :'0.7',
    			                widths:'50%',
    			                paddings:'0',
    			                warppadding:'2em 0',
    			                foottop:'0',
    			                lock : true
    			            });
    						var _remark = encodeURI($(".beizhulan").find("textarea").val());
    						var params = {
    							serial : "10549840601068216320",
    							openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
    							fm : "1",
    							mallGoodsId : "26838",
    							amount : "1",
    							cartIds : "",
    							remark : _remark
    						};
    						if(parseInt("1") == 1 && parseInt("1") == 2){
    							var standardId = "";
    							if(standardId != null && standardId != undefined){
    								params.standardId = standardId;
    							}
    						}
    						$.post("/cmorder/1/3", params, function(result){
    							dialog.close();
    							if (!result.success) {
    								doAlert("no", result.message);
    								return;
    							}
    							window.location.href = "/mall/success/3?serial=10549840601068216320&ptype=" + 1;
    			        	});
    					}
    				}
    				
    				if(payType == 4){
    					if($(this).prop("disabled") == true)
                    		return false;
            			
            			var type = 0;
            			$(".tab_content").each(function(){
            				if($(this).css("display") != "none") {
            					var attrId = $(this).attr("id");
            					if(attrId == "tab1") {
            						type = 1;//快递取货
            					} else if(attrId == "tab2") {
            						type = 2;//门店自提
            					}
            				}
            			});
            			if(type <= 0) {
            				$.dialog({
        	                    widths : '80%',
        	                    content : '无效物流方式',
        	                    title : 'no',
        	                    fullok : function() {
        	                        return true;
        	                    },                       
        	                    lock : true
        	                });
            				return;
            			}
            			if(type == 1) {
            				if($("#tab1 .pure-u-24-24 .empty-p").length > 0) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑收货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            			}
            			var _fetchTime = "";
            			if(type == 2) {
            				if($("#tab2 .pure-u-24-24 .empty-p").length > 0) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑取货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            				_fetchTime = $("#scheduledTime").val();
            				if(null == _fetchTime || "" == _fetchTime || typeof(_fetchTime) == undefined) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请选择取货时间',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            				var shopBranch = "";
            				if(shopBranch == "") {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑取货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            			}
            			
            			var _remark = encodeURI($(".beizhulan").find("textarea").val());
            			var params = {
            				serial : "10549840601068216320",
            				openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
            				fm : "1",
            				mallGoodsId : "26838",
            				amount : "1",
            				cartIds : "",
            				fetchTime : _fetchTime,
            				remark : _remark
            			};
            			if(parseInt("1") == 1 && parseInt("1") == 2){
            				var standardId = "";
            				if(standardId != null && standardId != undefined){
            					params.standardId = standardId;
            				}
            			}
            			
            			if(validateRemark()){
            				var dialog = $.dialog({
            	                content:'订单提交中',
            	                backgrounds :'#000',
            	                opacitys :'0.7',
            	                widths:'50%',
            	                paddings:'0',
            	                warppadding:'2em 0',
            	                foottop:'0',
            	                lock : true
            	            });
            				$.post("/cmorder/" + type+ "/4", params, function(result){
            					dialog.close();
            					
            					if (!result.success) {
            						doAlert("no", result.message);
            						return;
            					}
            					
            					var strParams = "?orderId=" + result.attach;
            					if(type == 2){
            						strParams += "&shopBranchId="+"";
            					}
            					strParams += "&serial=10549840601068216320";
                				window.location.href = "/pay/5"+strParams;
            	        	});
            			}
            			
    				}
    				
                },
                lock : true
            });
		});
		
		//微信支付
		/* $(".payUseWX").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			
			var type = 0;
			$(".tab_content").each(function(){
				if($(this).css("display") != "none") {
					var attrId = $(this).attr("id");
					if(attrId == "tab1") {
						type = 1;//快递取货
					} else if(attrId == "tab2") {
						type = 2;//门店自提
					}
				}
			});
			if(type <= 0) {
				doAlert("no", "无效物流方式");
				return;
			}
			if(type == 1) {
				if($("#tab1 .pure-u-4-5 .empty-p").length > 0) {
					doAlert("no", "请编辑收货地址");
					return;
				}
			}
			var _fetchTime = "";
			if(type == 2) {
				if($("#tab2 .pure-u-4-5 .empty-p").length > 0) {
					doAlert("no", "请编辑取货地址");
					return;
				}
				_fetchTime = $("#scheduledTime").val();
				if(null == _fetchTime || "" == _fetchTime || typeof(_fetchTime) == undefined) {
					doAlert("no", "请选择取货时间");
					return;
				}
				var shopBranch = "";
				if(shopBranch == "") {
					doAlert("no", "请编辑取货地址");
					return;
				}
			}
			
			var _remark = encodeURI($(".beizhulan").find("textarea").val());
			var params = {
				serial : "10549840601068216320",
				openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
				fm : "1",
				mallGoodsId : "26838",
				amount : "1",
				cartIds : "",
				fetchTime : _fetchTime,
				remark : _remark
			};
			if(parseInt("1") == 1 && parseInt("1") == 2){
				var standardId = "";
				if(standardId != null && standardId != undefined){
					params.standardId = standardId;
				}
			}
			
			if(validateRemark()){
				var dialog = $.dialog({
	                content:'订单提交中',
	                backgrounds :'#000',
	                opacitys :'0.7',
	                widths:'50%',
	                paddings:'0',
	                warppadding:'2em 0',
	                foottop:'0',
	                lock : true
	            });
				$.post("/cmorder/" + type+ "/1", params, function(result){
					dialog.close();
					
					if (!result.success) {
						doAlert("no", result.message);
						return;
					}
					
					var strParams = "id=" + result.attach;
	    			strParams += "&serial=10549840601068216320";
	    			window.location.href = "/pay/1?showwxpaytitle=1&" + strParams;
	        	});
			}
		}); */
		//货到付款
		/* $(".payAfrecv").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			
			if($("#tab1 .pure-u-4-5 .empty-p").length > 0) {
				doAlert("no", "请编辑收货地址");
				return;
			}
			
			
			if(validateRemark()){
				var dialog = $.dialog({
	                content:'订单提交中',
	                backgrounds :'#000',
	                opacitys :'0.7',
	                widths:'50%',
	                paddings:'0',
	                warppadding:'2em 0',
	                foottop:'0',
	                lock : true
	            });
				var _remark = encodeURI($(".beizhulan").find("textarea").val());
				var params = {
					serial : "10549840601068216320",
					openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
					fm : "1",
					mallGoodsId : "26838",
					amount : "1",
					cartIds : "",
					remark : _remark
				};
				if(parseInt("1") == 1 && parseInt("1") == 2){
					var standardId = "";
					if(standardId != null && standardId != undefined){
						params.standardId = standardId;
					}
				}
				$.post("/cmorder/1/3", params, function(result){
					dialog.close();
					if (!result.success) {
						doAlert("no", result.message);
						return;
					}
					window.location.href = "/mall/success/3?serial=10549840601068216320&ptype=" + 1;
	        	});
			}
		}); */
		//到店支付
		// $(".payInshop").click(function(event) {
			/* if($(this).prop("disabled") == true)
        		return false;
			
			var shopBranch = "";
			if(shopBranch == "") {
				doAlert("no", "请编辑取货地址");
				return;
			}
			
			if($("#tab2 .pure-u-4-5 .empty-p").length > 0) {
				doAlert("no", "请编辑取货地址");
				return;
			}
			
			var _fetchTime = $("#scheduledTime").val();
			if(null == _fetchTime || "" == _fetchTime) {
				doAlert("no", "请选择取货时间");
				return;
			}
			
			if(validateRemark()){
				var dialog = $.dialog({
	                content:'订单提交中',
	                backgrounds :'#000',
	                opacitys :'0.7',
	                widths:'50%',
	                paddings:'0',
	                warppadding:'2em 0',
	                foottop:'0',
	                lock : true
	            });
				
				var _remark = $(".beizhulan").find("textarea").val();
				var params = {
					serial : "10549840601068216320",
					openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
					fm : "1",
					mallGoodsId : "26838",
					amount : "1",
					cartIds : "",
					fetchTime : _fetchTime,
					remark : _remark
				};
				if(parseInt("1") == 1 && parseInt("1") == 2){
					var standardId = "";
					if(standardId != null && standardId != undefined){
						params.standardId = standardId;
					}
				}
				$.post("/cmorder/2/2", params, function(result){
					dialog.close();
					if (!result.success) {
						doAlert("no", result.message);
						return;
					}
					window.location.href = "/mall/success/2?serial=10549840601068216320&ptype=" + 1;
	        	});
			} */
		// });
	</script>
</body>
</html>
<!--加入判断用户是否关注公众号功能 add by lipengfei at 2015-11-9  -->
  	
	<script type="text/javascript" src="/js/bind/banner.js?v=3.4.0-f5bd5"></script>
	<script type="text/javascript">
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	</script>

2016-07-21 10:35:11,949 htmlparser.py[line: 28] INFO: Data 
	 






2016-07-21 10:35:11,949 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,949 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:35:11,949 htmlparser.py[line: 25] INFO: End tag: link
2016-07-21 10:35:11,949 htmlparser.py[line: 28] INFO: Data   

2016-07-21 10:35:11,949 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,949 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-21 10:35:11,949 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,950 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-21 10:35:11,950 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,950 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,950 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,950 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,950 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,950 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,950 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,950 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,950 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,951 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,951 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,951 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 10:35:11,951 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,951 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-21 10:35:11,951 htmlparser.py[line: 28] INFO: Data 微商城
2016-07-21 10:35:11,951 htmlparser.py[line: 25] INFO: End tag: title
2016-07-21 10:35:11,951 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,951 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:35:11,951 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,952 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:35:11,952 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,952 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:35:11,952 htmlparser.py[line: 28] INFO: Data 


2016-07-21 10:35:11,952 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:35:11,952 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,952 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:35:11,952 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,952 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 10:35:11,952 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,953 htmlparser.py[line: 25] INFO: End tag: head
2016-07-21 10:35:11,953 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,953 htmlparser.py[line: 19] INFO: Start tag: style
2016-07-21 10:35:11,953 htmlparser.py[line: 28] INFO: Data 
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
	overflow-y: auto;
	overflow-x: hidden;
}

body {
	margin-bottom: 20px;
	overflow-y: auto;
	overflow-x: hidden;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
}

.header ul {
	position:relative;
	overflow: hidden;
}

.header ul li {
	width: 50%;
	float: left;
	height: 2.8em;
	line-height: 2.8em;
	background: #fff;
	text-align: center;
	border-bottom:1px solid #f38b44;
	-moz-box-sizing:border-box; /* Firefox */
     -webkit-box-sizing:border-box; /* Safari */
     box-sizing:border-box;
}
.header ul .lines{
	position: absolute;
	width: 1%;
	height: 2.8em;
	line-height: 2.8em;
	border-right: 1px solid #FDE5D4;
	left: 49%;
	top: -1px;
 } 
.header ul li a {
	color: #8b898a;
}

.tab_content>div {
	height: auto;
	font-size: 0.8em;
	margin: 0.5em 0;
}

.empty-p {
	width: 80%;
	float: left;
	padding: 0.5em 0;
}

.has-p {
    width: 100%;
    margin: 0 auto;
    padding: 0 1em;
    height: auto;
    line-height: 2.5em;
    text-align: left;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -webkit-box-sizing: -webkit-border-box;
}
.has-p-one{
    background: url(/images/mall/contact.png) no-repeat left center;
    background-size: 12px 12px;
}
.has-p-two{
    background: url(/images/mall/take.png) no-repeat left 2px;
    background-size: 12px 12px;
}
.has-p-three{
    background: url(/images/mall/time.png) no-repeat left 2px;
    background-size: 12px 12px;
}
.input-right{
    position: relative;
}
.input-right-img{
    width: 1em;
    position: absolute;
    right: 0.6em;
    top: 0.3em;
}
#scheduledTime{
    width:11em;
    height: 2em;
    border:1px solid #a0a0a0;
    border-radius:4px;
    color:#a0a0a0;
    text-indent:.5em
}
.hiddens-p{
    text-overflow:ellipsis; 
    overflow:hidden; 
    white-space:nowrap;  
}

.right-dashed {
	border-left: 1px solid #eee;
	margin-top: 1em;
	padding-bottom:1em;
}

#edit {
	padding: 1em 0 1em 2em;
    width: 10px;
}

.header ul li.active{
    border-bottom: 4px solid #f38b44;
}
.header ul li.active a{
    color: #f38b44!important;
}
.buy_title{
	background:#f3f3f3;
	padding:0.3em 1em;
	margin: 0;
}
.content {
	width: 100%;
	background: #fff;
	overflow: hidden;	
	padding-bottom:8%;
}

.selectList {
	border-bottom: 1px solid #efefef;
	margin: 0 auto;
	overflow: hidden;
	padding: 0.5em 1em;
	font-size: 0.8em;
	clear:both;
}

.selectList img {
    display: inline-block;
    float: left;
    width: 25%;
    border-radius: 4px;
    -webkit-border-radius: 4px;
}

.button {
	display:block;	
	width: 99%;	
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
	margin:0 auto 0.5em auto;
}

.addbtn {
	background: #33CC66;
}

.btn-wrap-5 {
	padding: 0 1em;
}
.buybtn {
	width: 100%;
	background: #f68d3c;
}

.footer {
	width: 100%;
	background: #fff;
	color: #b6b6b6;
	overflow: hidden;
	text-align: left;
	margin-bottom: 1em;
}

.all-end-button {
	width: 90%;
	margin: 1em auto 0.5em;
}

.all-end-button p:first-child {
	text-align: left;
}

.error-page{
	background: #ddd;
    padding-bottom: 2em;
}
.error-page img{
    margin:0 auto;
	padding-top: 2em;
}
.error-page p{
    text-align:center;
    color:#000;
    width:80%;
    margin:1em auto 2em;
}
#deliverFee{
	text-align:left;
	font-size:0.8em;
	color:#acb0af;
}
.order-div{
    margin-left: 26.8%;            
    position: relative;
}
.order-div>p:last-child{
    width: 100%;
    margin: 0;
    position: absolute;
    bottom: 0;
    left: 0;
}
.m-t-n{
    margin-top: 0;
}
.m-t-n>span{
    display: inline-block;
}
.m-t-n>span:first-child{
    width: 70%;
}
.m-t-n>span:last-child{
    width: 30%;
}
.mtn-span{
    float: right;
}
.t-r-span{
	text-align:right;
}
.ccc{
    color: #ccc;
}
.peisong{
    text-align: right;
    margin-bottom: 0;
    padding-right: 1em;
    padding-top: 0.4em;
}
.peisong-detail{
    color:#000;
}
.peisong-detail input{
    border: none;
}
.peisong-detail div>p{
    padding-left: 1.8em;
    padding-top: 0.8em;
    padding-bottom: 0.8em;
    margin: 0;
    clear:both;
}

.weipay{            
    background: url(/images/weixin2.png) no-repeat left center;
    background-size:1.6em 1.4em; 
}        
.peisong-detail div>p.pay{
    background: url(/images/money2.png) no-repeat left center;
    background-size:1.6em 1.4em; 
}
.peisong-detail div>p.cardpay{
    background: url(/images/cardpay2.png) no-repeat left center;
    background-size:1.6em 1.4em; 
}
.peisong-detail div>p.mdpay{
    background: url(/images/mdpay2.png) no-repeat left center;
    background-size:1.6em 1.4em; 
}

.peisong-detail div[class^="btn-wrap-"] {
	border-bottom: 1px solid #dadada;
	padding: 0 1em;
	height: 3em;
	position: relative;
}

.weipay,.pay,.mdpay,.cardpay{
    position: relative;
}
 .weipay>img,.mdpay>img,.pay>img,.cardpay>img,.zhifu input{
    width: 1.2em;
    height: 1.2em;
    position: absolute;
    right: 0;
    top: 50%;
    transform:translateY(-50%);
}

.pure-img-check {
	background: url(/images/weixuan2.png) no-repeat left center;
    background-size:1.2em 1.2em; 
    float: right;
    height: 1.2em;
    width: 1.2em;
}

.zhifu input{
    display: none;
}
#deliverFeeDiv, #FetchDiv {
	border-bottom: 1px solid #efefef;
    padding: 0.5em 0;
}
#deliverFeeDiv p, #FetchDiv p{
	text-align:right;
}

#remark {
	padding: 0.5em 1em;
	height: 4em;
	font-size: 1.0em;
}

2016-07-21 10:35:11,958 htmlparser.py[line: 25] INFO: End tag: style
2016-07-21 10:35:11,958 htmlparser.py[line: 28] INFO: Data 

2016-07-21 10:35:11,958 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-21 10:35:11,958 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,959 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,959 htmlparser.py[line: 28] INFO: Data 
		
			
			
			
				
					
					
						
						
						
						
						
					
					
				
				
			
			
2016-07-21 10:35:11,959 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,959 htmlparser.py[line: 28] INFO: Data 
				
					
2016-07-21 10:35:11,959 htmlparser.py[line: 19] INFO: Start tag: ul
2016-07-21 10:35:11,959 htmlparser.py[line: 28] INFO: Data 
						
2016-07-21 10:35:11,959 htmlparser.py[line: 19] INFO: Start tag: li
2016-07-21 10:35:11,959 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:35:11,959 htmlparser.py[line: 28] INFO: Data 快递发货
2016-07-21 10:35:11,960 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:35:11,960 htmlparser.py[line: 25] INFO: End tag: li
2016-07-21 10:35:11,960 htmlparser.py[line: 28] INFO: Data 						
						
2016-07-21 10:35:11,960 htmlparser.py[line: 19] INFO: Start tag: li
2016-07-21 10:35:11,960 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:35:11,960 htmlparser.py[line: 28] INFO: Data 到店自提
2016-07-21 10:35:11,960 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:35:11,960 htmlparser.py[line: 25] INFO: End tag: li
2016-07-21 10:35:11,960 htmlparser.py[line: 28] INFO: Data 
						
2016-07-21 10:35:11,960 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,961 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,961 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,961 htmlparser.py[line: 25] INFO: End tag: ul
2016-07-21 10:35:11,961 htmlparser.py[line: 28] INFO: Data 
				
			
2016-07-21 10:35:11,961 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,961 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,961 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,961 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,961 htmlparser.py[line: 28] INFO: Data 
			
			
2016-07-21 10:35:11,961 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,962 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,962 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,962 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,962 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,962 htmlparser.py[line: 28] INFO: Data 
						
							
								
2016-07-21 10:35:11,962 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,962 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 10:35:11,962 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,962 htmlparser.py[line: 28] INFO: Data 联系方式：
2016-07-21 10:35:11,962 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,963 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 10:35:11,963 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,963 htmlparser.py[line: 28] INFO: Data 17817738278
2016-07-21 10:35:11,963 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,963 htmlparser.py[line: 28] INFO: Data (17817738178)
2016-07-21 10:35:11,963 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,963 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,963 htmlparser.py[line: 28] INFO: Data 
								
2016-07-21 10:35:11,963 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,963 htmlparser.py[line: 28] INFO: Data 
								
2016-07-21 10:35:11,964 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,964 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 10:35:11,964 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,964 htmlparser.py[line: 28] INFO: Data 配送地址：
2016-07-21 10:35:11,964 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,964 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 10:35:11,964 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,964 htmlparser.py[line: 28] INFO: Data 北京市县密云县把
2016-07-21 10:35:11,964 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,964 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 10:35:11,964 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,965 htmlparser.py[line: 28] INFO: Data 
										
											
											
											
2016-07-21 10:35:11,965 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:35:11,965 htmlparser.py[line: 28] INFO: Data 
												
2016-07-21 10:35:11,965 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:35:11,965 htmlparser.py[line: 28] INFO: Data 
											
2016-07-21 10:35:11,965 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:35:11,966 htmlparser.py[line: 28] INFO: Data 
											
										
									
2016-07-21 10:35:11,966 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,966 htmlparser.py[line: 28] INFO: Data 
                                
2016-07-21 10:35:11,966 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,966 htmlparser.py[line: 28] INFO: Data 
							
							
						
					
2016-07-21 10:35:11,966 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,966 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,966 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,966 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,966 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,967 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,967 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,967 htmlparser.py[line: 28] INFO: Data 
						
							
							
								
2016-07-21 10:35:11,967 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,967 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 10:35:11,967 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,967 htmlparser.py[line: 28] INFO: Data 请选择要取货的店铺和时间以确保您能快捷方便取到货物
2016-07-21 10:35:11,968 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,968 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 10:35:11,968 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,968 htmlparser.py[line: 28] INFO: Data 
										
											
											
											
2016-07-21 10:35:11,968 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 10:35:11,968 htmlparser.py[line: 28] INFO: Data 
												
2016-07-21 10:35:11,968 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:35:11,968 htmlparser.py[line: 28] INFO: Data 
											
2016-07-21 10:35:11,968 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 10:35:11,969 htmlparser.py[line: 28] INFO: Data 
											
										
									
2016-07-21 10:35:11,969 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,969 htmlparser.py[line: 28] INFO: Data 
								
2016-07-21 10:35:11,969 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,969 htmlparser.py[line: 28] INFO: Data 
							
						
					
2016-07-21 10:35:11,969 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,969 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,969 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,969 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,969 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,969 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,970 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,970 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,970 htmlparser.py[line: 28] INFO: Data 
			
			
2016-07-21 10:35:11,970 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,970 htmlparser.py[line: 28] INFO: Data 
				
					
						
							
2016-07-21 10:35:11,970 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,970 htmlparser.py[line: 28] INFO: Data 
								
2016-07-21 10:35:11,970 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 10:35:11,970 htmlparser.py[line: 28] INFO: Data  
								
									
									
										
2016-07-21 10:35:11,970 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,971 htmlparser.py[line: 28] INFO: Data 
											
2016-07-21 10:35:11,971 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,971 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,971 htmlparser.py[line: 28] INFO: Data 接口-测试商品1
2016-07-21 10:35:11,971 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,971 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,971 htmlparser.py[line: 28] INFO: Data ￥0.01
2016-07-21 10:35:11,971 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,971 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,972 htmlparser.py[line: 28] INFO: Data 
											
2016-07-21 10:35:11,972 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,972 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,972 htmlparser.py[line: 28] INFO: Data X1
2016-07-21 10:35:11,972 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,972 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,972 htmlparser.py[line: 28] INFO: Data 															
									
								
							
2016-07-21 10:35:11,972 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,972 htmlparser.py[line: 28] INFO: Data 
						
					
					
					
				
				
2016-07-21 10:35:11,973 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,973 htmlparser.py[line: 28] INFO: Data 
					 
						
						
2016-07-21 10:35:11,973 htmlparser.py[line: 28] INFO: Data 								
							
2016-07-21 10:35:11,973 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,973 htmlparser.py[line: 28] INFO: Data （买满￥0.00元包邮)
2016-07-21 10:35:11,973 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,973 htmlparser.py[line: 28] INFO: Data 
							
2016-07-21 10:35:11,973 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,973 htmlparser.py[line: 28] INFO: Data 合计：￥0.01
2016-07-21 10:35:11,973 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,974 htmlparser.py[line: 28] INFO: Data 
						
						
					 
				
2016-07-21 10:35:11,974 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,974 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,974 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,974 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,974 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,974 htmlparser.py[line: 28] INFO: Data 合计：￥0.01
2016-07-21 10:35:11,974 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,974 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,974 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,974 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,975 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,975 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,975 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,975 htmlparser.py[line: 28] INFO: Data 备注：
2016-07-21 10:35:11,975 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,975 htmlparser.py[line: 28] INFO: Data 
                   	
2016-07-21 10:35:11,975 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,975 htmlparser.py[line: 28] INFO: Data 
                   		
2016-07-21 10:35:11,975 htmlparser.py[line: 19] INFO: Start tag: textarea
2016-07-21 10:35:11,976 htmlparser.py[line: 25] INFO: End tag: textarea
2016-07-21 10:35:11,976 htmlparser.py[line: 28] INFO: Data 
                   	
2016-07-21 10:35:11,976 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,976 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,976 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,976 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,976 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,976 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,976 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,976 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,976 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,977 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,977 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,977 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,977 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 10:35:11,977 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,977 htmlparser.py[line: 28] INFO: Data 
                	
                     	
2016-07-21 10:35:11,977 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,977 htmlparser.py[line: 28] INFO: Data 微信支付
2016-07-21 10:35:11,977 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,977 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,978 htmlparser.py[line: 28] INFO: Data 
                         	
2016-07-21 10:35:11,978 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:35:11,978 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:35:11,978 htmlparser.py[line: 28] INFO: Data 
                     	
2016-07-21 10:35:11,978 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,978 htmlparser.py[line: 28] INFO: Data 
                    
                  	
2016-07-21 10:35:11,978 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,978 htmlparser.py[line: 28] INFO: Data 
                  	
                  	
2016-07-21 10:35:11,978 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,978 htmlparser.py[line: 28] INFO: Data 
                  	
                     	
2016-07-21 10:35:11,979 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,979 htmlparser.py[line: 28] INFO: Data 货到付款
2016-07-21 10:35:11,979 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,979 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,979 htmlparser.py[line: 28] INFO: Data 
                         	
2016-07-21 10:35:11,979 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:35:11,979 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:35:11,979 htmlparser.py[line: 28] INFO: Data 
                     	
2016-07-21 10:35:11,979 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,980 htmlparser.py[line: 28] INFO: Data 
                   	
                   	
2016-07-21 10:35:11,980 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,980 htmlparser.py[line: 28] INFO: Data 
		
                    
2016-07-21 10:35:11,980 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,980 htmlparser.py[line: 28] INFO: Data 
                    
                    	
2016-07-21 10:35:11,980 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,980 htmlparser.py[line: 28] INFO: Data 到店支付
2016-07-21 10:35:11,980 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,980 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,980 htmlparser.py[line: 28] INFO: Data 
                    		
2016-07-21 10:35:11,981 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:35:11,981 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:35:11,981 htmlparser.py[line: 28] INFO: Data 
                    	
2016-07-21 10:35:11,981 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,981 htmlparser.py[line: 28] INFO: Data 
                   	
                   	
2016-07-21 10:35:11,981 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,981 htmlparser.py[line: 28] INFO: Data 
                   	
                   	
2016-07-21 10:35:11,981 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,981 htmlparser.py[line: 28] INFO: Data 
                   	
                   		
2016-07-21 10:35:11,982 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 10:35:11,982 htmlparser.py[line: 28] INFO: Data 储值卡支付
2016-07-21 10:35:11,982 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 10:35:11,982 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 10:35:11,982 htmlparser.py[line: 28] INFO: Data 
                   			
2016-07-21 10:35:11,982 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:35:11,982 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:35:11,982 htmlparser.py[line: 28] INFO: Data 
                   		
2016-07-21 10:35:11,982 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 10:35:11,983 htmlparser.py[line: 28] INFO: Data 
                   	
                    
2016-07-21 10:35:11,983 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,983 htmlparser.py[line: 28] INFO: Data 
                
2016-07-21 10:35:11,983 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,983 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,983 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,983 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,983 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 10:35:11,983 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 10:35:11,983 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 10:35:11,984 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 10:35:11,984 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 10:35:11,984 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,984 htmlparser.py[line: 28] INFO: Data 
			
		
	
2016-07-21 10:35:11,984 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 10:35:11,984 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,985 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,985 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,985 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,985 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,985 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,986 htmlparser.py[line: 28] INFO: Data 
    
	
2016-07-21 10:35:11,986 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,986 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,986 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,986 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,987 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,987 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,987 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,987 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,987 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,987 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,987 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,988 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,988 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,988 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,988 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,988 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,988 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,988 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,988 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 10:35:11,989 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 10:35:11,989 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 10:35:11,989 htmlparser.py[line: 19] INFO: Start tag: script
