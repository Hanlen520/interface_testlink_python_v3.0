2016-07-21 21:01:56,987 htmlparser.py[line: 28] INFO: Data 
						
							
								
2016-07-21 21:01:56,994 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:56,994 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 21:01:56,994 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:56,994 htmlparser.py[line: 28] INFO: Data 联系方式：
2016-07-21 21:01:56,994 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:56,994 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 21:01:56,995 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:56,995 htmlparser.py[line: 28] INFO: Data 17817738278
2016-07-21 21:01:56,995 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:56,995 htmlparser.py[line: 28] INFO: Data (17817738178)
2016-07-21 21:01:56,995 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:56,995 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:56,995 htmlparser.py[line: 28] INFO: Data 
								
2016-07-21 21:01:56,995 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:56,995 htmlparser.py[line: 28] INFO: Data 
								
2016-07-21 21:01:56,996 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:56,996 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 21:01:56,996 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:56,996 htmlparser.py[line: 28] INFO: Data 配送地址：
2016-07-21 21:01:56,996 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:56,996 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 21:01:56,996 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:56,996 htmlparser.py[line: 28] INFO: Data 北京市县密云县把
2016-07-21 21:01:56,996 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:56,996 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 21:01:56,997 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:56,997 htmlparser.py[line: 28] INFO: Data 
										
											
											
											
2016-07-21 21:01:56,997 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 21:01:56,997 htmlparser.py[line: 28] INFO: Data 
												
2016-07-21 21:01:56,997 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 21:01:56,998 htmlparser.py[line: 28] INFO: Data 
											
2016-07-21 21:01:56,998 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 21:01:56,998 htmlparser.py[line: 28] INFO: Data 
											
										
									
2016-07-21 21:01:56,998 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:56,998 htmlparser.py[line: 28] INFO: Data 
                                
2016-07-21 21:01:56,998 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:56,998 htmlparser.py[line: 28] INFO: Data 
							
							
						
					
2016-07-21 21:01:56,998 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:56,998 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:56,999 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:56,999 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:56,999 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:56,999 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 21:01:56,999 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:56,999 htmlparser.py[line: 28] INFO: Data 
						
							
							
								
2016-07-21 21:01:56,999 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:56,999 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 21:01:56,999 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:57,000 htmlparser.py[line: 28] INFO: Data 请选择要取货的店铺和时间以确保您能快捷方便取到货物
2016-07-21 21:01:57,000 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:57,000 htmlparser.py[line: 28] INFO: Data 
									
2016-07-21 21:01:57,000 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:57,000 htmlparser.py[line: 28] INFO: Data 
										
											
											
											
2016-07-21 21:01:57,000 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 21:01:57,000 htmlparser.py[line: 28] INFO: Data 
												
2016-07-21 21:01:57,000 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 21:01:57,001 htmlparser.py[line: 28] INFO: Data 
											
2016-07-21 21:01:57,001 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 21:01:57,001 htmlparser.py[line: 28] INFO: Data 
											
										
									
2016-07-21 21:01:57,001 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:57,001 htmlparser.py[line: 28] INFO: Data 
								
2016-07-21 21:01:57,001 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,001 htmlparser.py[line: 28] INFO: Data 
							
						
					
2016-07-21 21:01:57,001 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,001 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:57,001 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,001 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:57,002 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,002 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:57,002 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:57,002 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:57,002 htmlparser.py[line: 28] INFO: Data 
			
			
2016-07-21 21:01:57,002 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,002 htmlparser.py[line: 28] INFO: Data 
				
					
						
							
2016-07-21 21:01:57,002 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,003 htmlparser.py[line: 28] INFO: Data 
								
2016-07-21 21:01:57,003 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 21:01:57,003 htmlparser.py[line: 28] INFO: Data  
								
									
									
										
2016-07-21 21:01:57,003 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,003 htmlparser.py[line: 28] INFO: Data 
											
2016-07-21 21:01:57,003 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:57,003 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:57,003 htmlparser.py[line: 28] INFO: Data 接口-测试商品1
2016-07-21 21:01:57,003 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:57,004 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:57,004 htmlparser.py[line: 28] INFO: Data ￥0.01
2016-07-21 21:01:57,004 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:57,004 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:57,004 htmlparser.py[line: 28] INFO: Data 
											
2016-07-21 21:01:57,004 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:57,004 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:57,004 htmlparser.py[line: 28] INFO: Data X1
2016-07-21 21:01:57,005 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:57,005 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:57,005 htmlparser.py[line: 28] INFO: Data 															
									
								
							
2016-07-21 21:01:57,005 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,005 htmlparser.py[line: 28] INFO: Data 
						
					
					
					
				
				
2016-07-21 21:01:57,005 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,005 htmlparser.py[line: 28] INFO: Data 
					 
						
						
2016-07-21 21:01:57,005 htmlparser.py[line: 28] INFO: Data 								
							
2016-07-21 21:01:57,005 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:57,005 htmlparser.py[line: 28] INFO: Data （买满￥0.00元包邮)
2016-07-21 21:01:57,006 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:57,006 htmlparser.py[line: 28] INFO: Data 
							
2016-07-21 21:01:57,006 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:57,006 htmlparser.py[line: 28] INFO: Data 合计：￥0.01
2016-07-21 21:01:57,006 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:57,006 htmlparser.py[line: 28] INFO: Data 
						
						
					 
				
2016-07-21 21:01:57,006 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,006 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:57,006 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,007 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 21:01:57,007 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:57,007 htmlparser.py[line: 28] INFO: Data 合计：￥0.01
2016-07-21 21:01:57,007 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:57,007 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:57,007 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,007 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:57,007 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,007 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 21:01:57,007 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:57,008 htmlparser.py[line: 28] INFO: Data 备注：
2016-07-21 21:01:57,008 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:57,008 htmlparser.py[line: 28] INFO: Data 
                   	
2016-07-21 21:01:57,008 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:57,008 htmlparser.py[line: 28] INFO: Data 
                   		
2016-07-21 21:01:57,008 htmlparser.py[line: 19] INFO: Start tag: textarea
2016-07-21 21:01:57,008 htmlparser.py[line: 25] INFO: End tag: textarea
2016-07-21 21:01:57,008 htmlparser.py[line: 28] INFO: Data 
                   	
2016-07-21 21:01:57,008 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:57,008 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:57,008 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,009 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:57,009 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,009 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:57,009 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:57,009 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:57,009 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:57,010 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,010 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:57,010 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,010 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 21:01:57,010 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,012 htmlparser.py[line: 28] INFO: Data 
                	
                     	
2016-07-21 21:01:57,013 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:57,013 htmlparser.py[line: 28] INFO: Data 微信支付
2016-07-21 21:01:57,013 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:57,013 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:57,013 htmlparser.py[line: 28] INFO: Data 
                         	
2016-07-21 21:01:57,013 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 21:01:57,013 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 21:01:57,013 htmlparser.py[line: 28] INFO: Data 
                     	
2016-07-21 21:01:57,013 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:57,013 htmlparser.py[line: 28] INFO: Data 
                    
                  	
2016-07-21 21:01:57,014 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,014 htmlparser.py[line: 28] INFO: Data 
                  	
                  	
2016-07-21 21:01:57,014 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,014 htmlparser.py[line: 28] INFO: Data 
                  	
                     	
2016-07-21 21:01:57,014 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:57,014 htmlparser.py[line: 28] INFO: Data 货到付款
2016-07-21 21:01:57,014 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:57,014 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:57,014 htmlparser.py[line: 28] INFO: Data 
                         	
2016-07-21 21:01:57,015 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 21:01:57,015 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 21:01:57,015 htmlparser.py[line: 28] INFO: Data 
                     	
2016-07-21 21:01:57,015 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:57,015 htmlparser.py[line: 28] INFO: Data 
                   	
                   	
2016-07-21 21:01:57,015 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,015 htmlparser.py[line: 28] INFO: Data 
		
                    
2016-07-21 21:01:57,015 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,015 htmlparser.py[line: 28] INFO: Data 
                    
                    	
2016-07-21 21:01:57,015 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:57,016 htmlparser.py[line: 28] INFO: Data 到店支付
2016-07-21 21:01:57,016 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:57,016 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:57,016 htmlparser.py[line: 28] INFO: Data 
                    		
2016-07-21 21:01:57,016 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 21:01:57,016 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 21:01:57,016 htmlparser.py[line: 28] INFO: Data 
                    	
2016-07-21 21:01:57,016 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:57,016 htmlparser.py[line: 28] INFO: Data 
                   	
                   	
2016-07-21 21:01:57,017 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,017 htmlparser.py[line: 28] INFO: Data 
                   	
                   	
2016-07-21 21:01:57,017 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,017 htmlparser.py[line: 28] INFO: Data 
                   	
                   		
2016-07-21 21:01:57,017 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:57,017 htmlparser.py[line: 28] INFO: Data 储值卡支付
2016-07-21 21:01:57,017 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:57,017 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:57,017 htmlparser.py[line: 28] INFO: Data 
                   			
2016-07-21 21:01:57,017 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 21:01:57,018 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 21:01:57,018 htmlparser.py[line: 28] INFO: Data 
                   		
2016-07-21 21:01:57,018 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:57,018 htmlparser.py[line: 28] INFO: Data 
                   	
                    
2016-07-21 21:01:57,018 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,018 htmlparser.py[line: 28] INFO: Data 
                
2016-07-21 21:01:57,018 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,018 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:57,018 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,019 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:57,019 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:57,019 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:57,019 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 21:01:57,019 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 21:01:57,019 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:57,019 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,019 htmlparser.py[line: 28] INFO: Data 
			
		
	
2016-07-21 21:01:57,019 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:57,019 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:57,020 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,020 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,020 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:57,020 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,020 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,020 htmlparser.py[line: 28] INFO: Data 
    
	
2016-07-21 21:01:57,020 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,021 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,021 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:57,021 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,021 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,021 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:57,021 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,021 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,021 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:57,021 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,021 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,022 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:57,022 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,022 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,022 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:57,022 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,022 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,022 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:57,022 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,022 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,023 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:57,023 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,023 htmlparser.py[line: 28] INFO: Data 
		$(function() {
			$("input[name='zhifu']:checked").prev('.pure-img').attr('src','/images/check.png');
			var tab = parseInt("1");
			if(tab == 1){
				$("#deliverFeeDiv").show();
				$("#FetchDiv").hide();
			}else if(parseInt("1") != 0){
				$("#deliverFeeDiv").hide();
				$("#FetchDiv").show();
			}
			// 控制显示图片比例
			var img_left_heights = $(".selectList img").width()*(0.75);
			$(".selectList img,.order-div").css('height',img_left_heights);
			
			// 取货日期
			var now = new Date();
            $('#scheduledTime').mobiscroll().datetime({
                minDate: new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours()+1),
                maxDate: new Date(now.getFullYear(), now.getMonth()+3, now.getDate()),
                stepMinute: 30,
                dateOrder :"yymmdd",
                dateFormat:"yy-mm-dd",
                timeWheels:"HHii",
                timeFormat:"HH:ii",
                //invalid: [{ start: '00:00', end: '08:00' },{ start: '22:00', end: '23:59' }],
                theme: 'ios7',
                lang: 'zh',
                display: 'bottom',
                mode: 'mixed'
            });
            $('#scheduledTime').click(function(){
                $('#scheduledTime').mobiscroll('show'); 
                return false;
            });
            
			$("ul li").click(function() {
				$("ul li").removeClass("active");
				$(this).addClass("active");
				if($(this).attr("data")=="#deliverFeeDiv"){
					$("#deliverFeeDiv").show();
					$("#FetchDiv").hide();
				}else{
					$("#deliverFeeDiv").hide();
					$("#FetchDiv").show();
				}
				$(".tab_content").hide();
				var href = $(this).find("a").attr("href");
				$(href).show();
				
				if(href.endWith("tab1")) {
					$(".btn-wrap-2").show();
					$(".btn-wrap-3").hide();
				} else if(href.endWith("tab2")) {
					$(".btn-wrap-2").hide();
					$(".btn-wrap-3").show();
				}
				//清空已选择的支付方式
				$("input[name='zhifu']").prop("checked", false);
				$(".zhifu .pure-img-check").css('background-image','url(/images/weixuan2.png)');
				return false;
			});
			//商户设置的满额包邮价
			/* var noDeliverFee = toPrice(parseFloat("0")/100);
			var totalFee = parseFloat("0.01");
			if(totalFee > noDeliverFee){
				$("#deliverFeeDiv .orange").text("合计：￥"+ totalFee);
				$("#deliverFee").text("含运费：￥0.00");
			} */
			$('.zhifu>div').click(function(){
	            $("input[name=zhifu]").prop("checked", false);
	            $(".pure-img-check").css('backgroundImage','url(/images/weixuan2.png)');
	            var img_obj = $(this).find('.pure-img-check');
	            var backgroundImage = img_obj.css('background-image');
	            var input_obj = $(this).find('input');
	            if(backgroundImage.indexOf("weixuan2.png") > 0){
	                img_obj.css('background-image','url(/images/check.png)');
	                input_obj.prop("checked", "checked");
	            }else{
	                img_obj.css('background-image','url(/images/weixuan2.png)');
	                input_obj.prop("checked", false);
	            }
	        });
		});
		
		function validateRemark(){
			if($('.beizhulan textarea').val() != "" && $('.beizhulan textarea').val() != undefined){
				if($('.beizhulan textarea').val().length>30){
					$.dialog({
                        widths : '80%',
                        content : '您输入的备注过长，请不要超过30个字',
                        title : 'no',
                        fullok : function() {
                            return true;
                        },                       
                        lock : true
                    });	
					return false;
				}
				return true;
			}
			return true;
		}
		
		$(".submit").click(function(event){
			var payType = $("input[name='zhifu']:checked").val();
			if(null == payType || "" == payType || typeof(payType) == "undefined") {
       		 $.dialog({
                    widths : '80%',
                    content : '请选择支付方式',
                    title : 'no',
                    fullok : function() {
                        return true;
                    },                       
                    lock : true
                });
       			return;
       		}
			$.dialog({
                content : "确认提交订单？",
                title : "no",
                okText: '取消',
                cancelText : '确定', 
                ok : function() {
                	$(".ft-right").removeAttr("disabled");
                	return;
                },
                cancel : function() {                        	
               		
               		if(payType == 1){
               			if($(this).prop("disabled") == true)
                    		return false;
            			
            			var type = 0;
            			$(".tab_content").each(function(){
            				if($(this).css("display") != "none") {
            					var attrId = $(this).attr("id");
            					if(attrId == "tab1") {
            						type = 1;//快递取货
            					} else if(attrId == "tab2") {
            						type = 2;//门店自提
            					}
            				}
            			});
            			if(type <= 0) {
            				doAlert("no", "无效物流方式");
            				return;
            			}
            			if(type == 1) {
            				if($("#tab1 .pure-u-24-24 .empty-p").length > 0) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑收货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            			}
            			var _fetchTime = "";
            			if(type == 2) {
            				if($("#tab2 .pure-u-24-24 .empty-p").length > 0) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑取货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            				_fetchTime = $("#scheduledTime").val();
            				if(null == _fetchTime || "" == _fetchTime || typeof(_fetchTime) == undefined) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请选择取货时间',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            				var shopBranch = "";
            				if(shopBranch == "") {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑取货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            			}
            			
            			var _remark = encodeURI($(".beizhulan").find("textarea").val());
            			var params = {
            				serial : "10549840601068216320",
            				openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
            				fm : "1",
            				mallGoodsId : "26838",
            				amount : "1",
            				cartIds : "",
            				fetchTime : _fetchTime,
            				remark : _remark
            			};
            			if(parseInt("1") == 1 && parseInt("1") == 2){
            				var standardId = "";
            				if(standardId != null && standardId != undefined){
            					params.standardId = standardId;
            				}
            			}
            			
            			if(validateRemark()){
            				var dialog = $.dialog({
            	                content:'订单提交中',
            	                backgrounds :'#000',
            	                opacitys :'0.7',
            	                widths:'50%',
            	                paddings:'0',
            	                warppadding:'2em 0',
            	                foottop:'0',
            	                lock : true
            	            });
            				$.post("/cmorder/" + type+ "/1", params, function(result){
            					dialog.close();
            					
            					if (!result.success) {
            						doAlert("no", result.message);
            						return;
            					}
            					
            					var strParams = "id=" + result.attach;
            	    			strParams += "&serial=10549840601068216320";
            	    			if(type == 2){
            						strParams += "&shopBranchId="+"";
            					}
            	    			window.location.href = "/pay/1?showwxpaytitle=1&" + strParams;
            	        	});
            			}
               		}
               		
    				if(payType == 2){
    					if($(this).prop("disabled") == true)
    		        		return false;
    					
    					var shopBranch = "";
    					if(shopBranch == "") {
    						$.dialog({
        	                    widths : '80%',
        	                    content : '请编辑取货地址',
        	                    title : 'no',
        	                    fullok : function() {
        	                        return true;
        	                    },                       
        	                    lock : true
        	                });
    						return;
    					}
    					
    					if($("#tab2 .pure-u-24-24 .empty-p").length > 0) {
    						$.dialog({
        	                    widths : '80%',
        	                    content : '请编辑取货地址',
        	                    title : 'no',
        	                    fullok : function() {
        	                        return true;
        	                    },                       
        	                    lock : true
        	                });
    						return;
    					}
    					
    					var _fetchTime = $("#scheduledTime").val();
    					if(null == _fetchTime || "" == _fetchTime) {
    						$.dialog({
        	                    widths : '80%',
        	                    content : '请选择取货时间',
        	                    title : 'no',
        	                    fullok : function() {
        	                        return true;
        	                    },                       
        	                    lock : true
        	                });
    						return;
    					}
    					
    					if(validateRemark()){
    						var dialog = $.dialog({
    			                content:'订单提交中',
    			                backgrounds :'#000',
    			                opacitys :'0.7',
    			                widths:'50%',
    			                paddings:'0',
    			                warppadding:'2em 0',
    			                foottop:'0',
    			                lock : true
    			            });
    						
    						var _remark = $(".beizhulan").find("textarea").val();
    						var params = {
    							serial : "10549840601068216320",
    							openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
    							fm : "1",
    							mallGoodsId : "26838",
    							amount : "1",
    							cartIds : "",
    							fetchTime : _fetchTime,
    							remark : _remark
    						};
    						if(parseInt("1") == 1 && parseInt("1") == 2){
    							var standardId = "";
    							if(standardId != null && standardId != undefined){
    								params.standardId = standardId;
    							}
    						}
    						$.post("/cmorder/2/2", params, function(result){
    							dialog.close();
    							if (!result.success) {
    								doAlert("no", result.message);
    								return;
    							}
    							window.location.href = "/mall/success/2?serial=10549840601068216320&ptype=" + 1;
    			        	});
    					}
    				}
    				
    				if(payType == 3){
    					if($(this).prop("disabled") == true)
    		        		return false;
    					
    					if($("#tab1 .pure-u-24-24 .empty-p").length > 0) {
    						$.dialog({
        	                    widths : '80%',
        	                    content : '请编辑收货地址',
        	                    title : 'no',
        	                    fullok : function() {
        	                        return true;
        	                    },                       
        	                    lock : true
        	                });
    						return;
    					}
    					
    					
    					if(validateRemark()){
    						var dialog = $.dialog({
    			                content:'订单提交中',
    			                backgrounds :'#000',
    			                opacitys :'0.7',
    			                widths:'50%',
    			                paddings:'0',
    			                warppadding:'2em 0',
    			                foottop:'0',
    			                lock : true
    			            });
    						var _remark = encodeURI($(".beizhulan").find("textarea").val());
    						var params = {
    							serial : "10549840601068216320",
    							openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
    							fm : "1",
    							mallGoodsId : "26838",
    							amount : "1",
    							cartIds : "",
    							remark : _remark
    						};
    						if(parseInt("1") == 1 && parseInt("1") == 2){
    							var standardId = "";
    							if(standardId != null && standardId != undefined){
    								params.standardId = standardId;
    							}
    						}
    						$.post("/cmorder/1/3", params, function(result){
    							dialog.close();
    							if (!result.success) {
    								doAlert("no", result.message);
    								return;
    							}
    							window.location.href = "/mall/success/3?serial=10549840601068216320&ptype=" + 1;
    			        	});
    					}
    				}
    				
    				if(payType == 4){
    					if($(this).prop("disabled") == true)
                    		return false;
            			
            			var type = 0;
            			$(".tab_content").each(function(){
            				if($(this).css("display") != "none") {
            					var attrId = $(this).attr("id");
            					if(attrId == "tab1") {
            						type = 1;//快递取货
            					} else if(attrId == "tab2") {
            						type = 2;//门店自提
            					}
            				}
            			});
            			if(type <= 0) {
            				$.dialog({
        	                    widths : '80%',
        	                    content : '无效物流方式',
        	                    title : 'no',
        	                    fullok : function() {
        	                        return true;
        	                    },                       
        	                    lock : true
        	                });
            				return;
            			}
            			if(type == 1) {
            				if($("#tab1 .pure-u-24-24 .empty-p").length > 0) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑收货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            			}
            			var _fetchTime = "";
            			if(type == 2) {
            				if($("#tab2 .pure-u-24-24 .empty-p").length > 0) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑取货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            				_fetchTime = $("#scheduledTime").val();
            				if(null == _fetchTime || "" == _fetchTime || typeof(_fetchTime) == undefined) {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请选择取货时间',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            				var shopBranch = "";
            				if(shopBranch == "") {
            					$.dialog({
            	                    widths : '80%',
            	                    content : '请编辑取货地址',
            	                    title : 'no',
            	                    fullok : function() {
            	                        return true;
            	                    },                       
            	                    lock : true
            	                });
            					return;
            				}
            			}
            			
            			var _remark = encodeURI($(".beizhulan").find("textarea").val());
            			var params = {
            				serial : "10549840601068216320",
            				openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
            				fm : "1",
            				mallGoodsId : "26838",
            				amount : "1",
            				cartIds : "",
            				fetchTime : _fetchTime,
            				remark : _remark
            			};
            			if(parseInt("1") == 1 && parseInt("1") == 2){
            				var standardId = "";
            				if(standardId != null && standardId != undefined){
            					params.standardId = standardId;
            				}
            			}
            			
            			if(validateRemark()){
            				var dialog = $.dialog({
            	                content:'订单提交中',
            	                backgrounds :'#000',
            	                opacitys :'0.7',
            	                widths:'50%',
            	                paddings:'0',
            	                warppadding:'2em 0',
            	                foottop:'0',
            	                lock : true
            	            });
            				$.post("/cmorder/" + type+ "/4", params, function(result){
            					dialog.close();
            					
            					if (!result.success) {
            						doAlert("no", result.message);
            						return;
            					}
            					
            					var strParams = "?orderId=" + result.attach;
            					if(type == 2){
            						strParams += "&shopBranchId="+"";
            					}
            					strParams += "&serial=10549840601068216320";
                				window.location.href = "/pay/5"+strParams;
            	        	});
            			}
            			
    				}
    				
                },
                lock : true
            });
		});
		
		//微信支付
		/* $(".payUseWX").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			
			var type = 0;
			$(".tab_content").each(function(){
				if($(this).css("display") != "none") {
					var attrId = $(this).attr("id");
					if(attrId == "tab1") {
						type = 1;//快递取货
					} else if(attrId == "tab2") {
						type = 2;//门店自提
					}
				}
			});
			if(type <= 0) {
				doAlert("no", "无效物流方式");
				return;
			}
			if(type == 1) {
				if($("#tab1 .pure-u-4-5 .empty-p").length > 0) {
					doAlert("no", "请编辑收货地址");
					return;
				}
			}
			var _fetchTime = "";
			if(type == 2) {
				if($("#tab2 .pure-u-4-5 .empty-p").length > 0) {
					doAlert("no", "请编辑取货地址");
					return;
				}
				_fetchTime = $("#scheduledTime").val();
				if(null == _fetchTime || "" == _fetchTime || typeof(_fetchTime) == undefined) {
					doAlert("no", "请选择取货时间");
					return;
				}
				var shopBranch = "";
				if(shopBranch == "") {
					doAlert("no", "请编辑取货地址");
					return;
				}
			}
			
			var _remark = encodeURI($(".beizhulan").find("textarea").val());
			var params = {
				serial : "10549840601068216320",
				openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
				fm : "1",
				mallGoodsId : "26838",
				amount : "1",
				cartIds : "",
				fetchTime : _fetchTime,
				remark : _remark
			};
			if(parseInt("1") == 1 && parseInt("1") == 2){
				var standardId = "";
				if(standardId != null && standardId != undefined){
					params.standardId = standardId;
				}
			}
			
			if(validateRemark()){
				var dialog = $.dialog({
	                content:'订单提交中',
	                backgrounds :'#000',
	                opacitys :'0.7',
	                widths:'50%',
	                paddings:'0',
	                warppadding:'2em 0',
	                foottop:'0',
	                lock : true
	            });
				$.post("/cmorder/" + type+ "/1", params, function(result){
					dialog.close();
					
					if (!result.success) {
						doAlert("no", result.message);
						return;
					}
					
					var strParams = "id=" + result.attach;
	    			strParams += "&serial=10549840601068216320";
	    			window.location.href = "/pay/1?showwxpaytitle=1&" + strParams;
	        	});
			}
		}); */
		//货到付款
		/* $(".payAfrecv").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			
			if($("#tab1 .pure-u-4-5 .empty-p").length > 0) {
				doAlert("no", "请编辑收货地址");
				return;
			}
			
			
			if(validateRemark()){
				var dialog = $.dialog({
	                content:'订单提交中',
	                backgrounds :'#000',
	                opacitys :'0.7',
	                widths:'50%',
	                paddings:'0',
	                warppadding:'2em 0',
	                foottop:'0',
	                lock : true
	            });
				var _remark = encodeURI($(".beizhulan").find("textarea").val());
				var params = {
					serial : "10549840601068216320",
					openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
					fm : "1",
					mallGoodsId : "26838",
					amount : "1",
					cartIds : "",
					remark : _remark
				};
				if(parseInt("1") == 1 && parseInt("1") == 2){
					var standardId = "";
					if(standardId != null && standardId != undefined){
						params.standardId = standardId;
					}
				}
				$.post("/cmorder/1/3", params, function(result){
					dialog.close();
					if (!result.success) {
						doAlert("no", result.message);
						return;
					}
					window.location.href = "/mall/success/3?serial=10549840601068216320&ptype=" + 1;
	        	});
			}
		}); */
		//到店支付
		// $(".payInshop").click(function(event) {
			/* if($(this).prop("disabled") == true)
        		return false;
			
			var shopBranch = "";
			if(shopBranch == "") {
				doAlert("no", "请编辑取货地址");
				return;
			}
			
			if($("#tab2 .pure-u-4-5 .empty-p").length > 0) {
				doAlert("no", "请编辑取货地址");
				return;
			}
			
			var _fetchTime = $("#scheduledTime").val();
			if(null == _fetchTime || "" == _fetchTime) {
				doAlert("no", "请选择取货时间");
				return;
			}
			
			if(validateRemark()){
				var dialog = $.dialog({
	                content:'订单提交中',
	                backgrounds :'#000',
	                opacitys :'0.7',
	                widths:'50%',
	                paddings:'0',
	                warppadding:'2em 0',
	                foottop:'0',
	                lock : true
	            });
				
				var _remark = $(".beizhulan").find("textarea").val();
				var params = {
					serial : "10549840601068216320",
					openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2",
					fm : "1",
					mallGoodsId : "26838",
					amount : "1",
					cartIds : "",
					fetchTime : _fetchTime,
					remark : _remark
				};
				if(parseInt("1") == 1 && parseInt("1") == 2){
					var standardId = "";
					if(standardId != null && standardId != undefined){
						params.standardId = standardId;
					}
				}
				$.post("/cmorder/2/2", params, function(result){
					dialog.close();
					if (!result.success) {
						doAlert("no", result.message);
						return;
					}
					window.location.href = "/mall/success/2?serial=10549840601068216320&ptype=" + 1;
	        	});
			} */
		// });
	
2016-07-21 21:01:57,028 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,028 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:57,028 htmlparser.py[line: 25] INFO: End tag: body
2016-07-21 21:01:57,028 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:57,028 htmlparser.py[line: 25] INFO: End tag: html
2016-07-21 21:01:57,028 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:57,028 htmlparser.py[line: 28] INFO: Data 
  	
	
2016-07-21 21:01:57,029 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,029 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,029 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:57,029 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:57,029 htmlparser.py[line: 28] INFO: Data 
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	
2016-07-21 21:01:57,029 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:57,029 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:57,029 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 21:01:57,030 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 21:01:56" WHERE executed_history_id = 20160721210154 AND testcase_id = 102 AND step_id = 104 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:01:57,032 testcase.py[line: 101] INFO: 测试用例[id=102, name=test-n-点击立即购买按钮]执行成功
2016-07-21 21:01:57,032 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-07-21 21:01:57,033 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 21:01:56" WHERE executed_history_id = 20160721210154 AND testcase_id = 102 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:01:57,159 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=74, bulid_version=v1.0.0],对应用例[testcase_id=102]的执行结果
2016-07-21 21:01:57,789 testplan.py[line: 57] INFO: 记录测试用例到测试用例报表
2016-07-21 21:01:57,790 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721210154', 80, 'test-n-点击商品', '微商城-模拟点击页面跳转', 'plan1_of_wecharno', 'pj_wecharno', 'Block', '')
2016-07-21 21:01:57,791 testplan.py[line: 60] INFO: 开始执行测试用例[id=80，name=test-n-点击商品]
2016-07-21 21:01:57,791 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 21:01:57,791 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721210154', 80, 'test-n-点击商品', 'plan1_of_wecharno', 'pj_wecharno', 82, 1, '', 'http', 'm.test.saofu.cn', 80, '{"class":"Goods","function":"test_click_goods","method":"get","url":"/goods/item?","params":{"id":26838, "serial":"var"}}', '{"status":200, "goods_name":"接口-测试商品1"}', 'Block', '', '')
2016-07-21 21:01:57,793 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 21:01:57,794 casestep.py[line: 64] INFO: 调用的方法为：Goods.test_click_goods
2016-07-21 21:01:57,794 wechatno_wemall.py[line: 91] INFO: 正在发起GET请求...
2016-07-21 21:01:57,795 httpprotocol.py[line: 50] INFO: 发起的请求为：http://m.test.saofu.cn:80/goods/item?serial=10549840601068216320&id=26838
2016-07-21 21:01:57,795 httpprotocol.py[line: 51] INFO: {'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5CY2'}
2016-07-21 21:01:58,095 htmlparser.py[line: 28] INFO: Data 






2016-07-21 21:01:58,095 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,095 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 21:01:58,096 htmlparser.py[line: 25] INFO: End tag: link
2016-07-21 21:01:58,096 htmlparser.py[line: 28] INFO: Data   

2016-07-21 21:01:58,096 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,096 htmlparser.py[line: 19] INFO: Start tag: html
2016-07-21 21:01:58,096 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,096 htmlparser.py[line: 19] INFO: Start tag: head
2016-07-21 21:01:58,096 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,096 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 21:01:58,096 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,097 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 21:01:58,097 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,097 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 21:01:58,097 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,097 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 21:01:58,097 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,097 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 21:01:58,098 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,098 htmlparser.py[line: 19] INFO: Start tag: meta
2016-07-21 21:01:58,098 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,098 htmlparser.py[line: 19] INFO: Start tag: title
2016-07-21 21:01:58,098 htmlparser.py[line: 28] INFO: Data 微商城
2016-07-21 21:01:58,098 htmlparser.py[line: 25] INFO: End tag: title
2016-07-21 21:01:58,099 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,099 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 21:01:58,099 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,099 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 21:01:58,099 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,099 htmlparser.py[line: 19] INFO: Start tag: link
2016-07-21 21:01:58,099 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,099 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:58,099 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:58,100 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,100 htmlparser.py[line: 25] INFO: End tag: head
2016-07-21 21:01:58,100 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,100 htmlparser.py[line: 19] INFO: Start tag: style
2016-07-21 21:01:58,100 htmlparser.py[line: 28] INFO: Data 
* {
	margin: 0;
	padding: 0;
}

html {
	color: #626262;
}

a {
	text-decoration: none;
}

ol,ul {
	list-style: outside none none;
}

.left {
	float: left;
}

.right {
	float: right;
}

.in-block {
	display: inline-block;
}

.orange {
	color: #c58d04;
}

.grey {
	color: #adadad;
}

.bg-color {
	background: #ececec;
}

#wrapper {
	width: 100%;
	margin: 0 auto;
}

.header {
	width: 100%;
	overflow: hidden;
	border-bottom: 1px solid #eaeaea;
}

.top {
	width: 90%;
	margin: 0 auto;
	padding-bottom: 1em;
}

.top p {
	margin: 0.5em 0;
	font-size: 0.8em;
}
.top>p:first-child{
	font-size:1.1em;
}

.fonts {
	font-size: 1em !important;
	margin: 0.8em 0 !important;
}


.jian {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-right: 0 none;
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
	text-align: center;
	margin-left:0.4em;
}

.val {
	background: #fff;
	display: inline-block;
	width: 3.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	text-align: center;
}

.jia {
	display: inline-block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5em;
	border: 1px solid #d1d1d1;
	border-left: 0 none;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	text-align: center;
}

.button {
	width: 47%;
	height: 3em;
	color: #fff;
	border: none;
	border-radius: 4px;
}

.addbtn {
	background: #edb23e;
	margin-right: 3%;
}

.buybtn {
	background: #f96364;
}

.bottom {
	border-top: 0.5em solid #eeeeee;
	padding-bottom: 3em;
    position: relative;
    width:100%;
}

.bottom .bottom-details{
	width:100%;	
	word-break:break-all;
	overflow-x: hidden; 
}

.bottom-details h1,.bottom-details h2,.bottom-details h3,.bottom-details h4,.bottom-details h5{
	word-break:break-all;
}

.bottom > p:first-child {
	text-indent: 1em;
}

.bottom > p img{
    width: 1em;
    position: absolute;
    top:0.8em;
    right: 1em;
}

.bottom-details p {
	text-indent: 1em;
	word-break:break-all;
}

.inline-padding {
	display: inline-block;
	padding-left: 0.8em;
}

.inline-paddings {
	display: inline-block;
	padding-left: 1.6em;
}

.footer {
	width: 100%;
	height: 3em;
	position: fixed;
	bottom: 0;
	background: #fff;
	color: #b6b6b6;
	text-align: center;
	border-top: 1px solid #eaeaea;
}

.footer a {
	color: #626262;
	display: inline-block;
	height:1em;
	line-height:1em;
	padding-top: 1em;
	padding-bottom: 1em;
}
.footer .inline-paddings-right{
    padding-top: 1em;
    float: right;
}
.footer img {
	display: inline-block;
	width: 1em;
}

.top-bg{
    position: fixed;
    bottom: 3.5em;
    right: 1em;
    width: 2em;
    display: none;
    filter:alpha(opacity=40);       /* IE */
    -moz-opacity:0.4;              /* Moz + FF */
    opacity: 0.4;     
}
.spec{
    display: inline-block;
    margin: 0 1em 0.8em 0;
    font-size:0.7em;
    padding:0.3em 1em;
    border:1px solid #ccc;
    border-radius:3px;
    cursor:pointer;
}
.fonts a.active{
    border: 2px solid #d2b57b;
}
.guige{
    float: left;
    width: 40px;
}
.guige-detail{
    margin-left: 40px;
}
.guige-detail a[disabled]{
    background: none repeat scroll 0 0 #fff;
    color: #e3e3e3;
    cursor: default;
}
/* 本例子css -------------------------------------- */
.slideBox {
	position: relative;
	width: 100%;
	height: 240px;
	overflow: hidden;
}

.slideBox .hd {
	position: absolute;
	width: 100%;
	height: 27px;
	bottom: 0;
	left: 0;
	z-index: 1;
}

.slideBox .hd img {
	width: 11px;
}

.slideBox .bd {
	position: relative;
	z-index: 0;
}

.slideBox .bd li {
	position: relative;
}

.slideBox .bd li img {
	width: 100%;
	height: 240px;
	display: block;
}

.slideBox .bd li a {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 取消链接高亮 */
}

.slideBox .hd a {
	display: block;
	width: auto;
	position: absolute;
	bottom: 0.5em;
	right: 0.5em;
	padding: 0.1em 0.7em;
	text-align: center;
	color: #fff;
	background-color: rgba(0, 0, 0, 0.6);
	border-radius: 4px;
}
.slideBox>.a-img{
    position: fixed;
    top:1em;
    right: 0.5em;
    display: block;
    width:2em;
    height: 2em;
    border-radius: 2em;
    background-color: rgba(0, 0, 0, 0.6); 
    z-index: 2;
}
.slideBox>.a-img>img{
    width: 1em;            
    position: absolute;
    top:50%;
    left: 50%;
    margin-top:-0.5em;
    margin-left: -0.5em;
}
.carts{
	position: relative;
}
.cartNum{                      
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    line-height:1.2em;
    border-radius: 1.5em;
    background:#ff0000;  
    position: absolute;
    right: -0.7em;
    top: 0.3em;
    color: #fff;
}
#soldCount{
	float: right; 
	font-size: 0.8em; 
	padding-top: 0.3em;
	color:#adadad;
}
.freight{
	font-size:0.8em;
	color:#adadad;
}
.standard_sku{
	font-size:0.9em;
	color:#adadad;
}
@media all and (max-width:320px){
	.slideBox{
		height:240px;
	}
	.slideBox .bd li img {
		height:240px;
	}
}
@media all and (min-width:321px) and (max-width:360px){
	.slideBox{
		height:270px;
	}
	.slideBox .bd li img {
		height:270px;
	}
}
@media all and (min-width:361px) and (max-width:375px){
	.slideBox{
		height:281px;
	}
	.slideBox .bd li img {
		height:281px;
	}
}
@media all and (min-width:376px) and (max-width:384px){
	.slideBox{
		height:288px;
	}
	.slideBox .bd li img {
		height:288px;
	}
}
@media all and (min-width:385px) and (max-width:414px){
	.slideBox{
		height:311px;
	}
	.slideBox .bd li img {
		height:311px;
	}
}
@media all and (min-width:415px){
	.slideBox{
		height:360px;
	}
	.slideBox .bd li img {
		height:360px;
	}
}

2016-07-21 21:01:58,100 htmlparser.py[line: 25] INFO: End tag: style
2016-07-21 21:01:58,101 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,101 htmlparser.py[line: 19] INFO: Start tag: body
2016-07-21 21:01:58,101 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:58,101 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:58,101 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 21:01:58,101 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:58,101 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:58,101 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:58,101 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,101 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 21:01:58,102 htmlparser.py[line: 28] INFO: Data 
                  
2016-07-21 21:01:58,102 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 21:01:58,102 htmlparser.py[line: 28] INFO: Data 
              	
2016-07-21 21:01:58,102 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 21:01:58,102 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,102 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:58,102 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 21:01:58,102 htmlparser.py[line: 19] INFO: Start tag: ul
2016-07-21 21:01:58,102 htmlparser.py[line: 28] INFO: Data 
						
							
								
2016-07-21 21:01:58,102 htmlparser.py[line: 19] INFO: Start tag: li
2016-07-21 21:01:58,103 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 21:01:58,103 htmlparser.py[line: 25] INFO: End tag: img
2016-07-21 21:01:58,103 htmlparser.py[line: 25] INFO: End tag: li
2016-07-21 21:01:58,103 htmlparser.py[line: 28] INFO: Data 
							
						
					
2016-07-21 21:01:58,103 htmlparser.py[line: 25] INFO: End tag: ul
2016-07-21 21:01:58,103 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,103 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:58,103 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,103 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:58,104 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 21:01:58,104 htmlparser.py[line: 19] INFO: Start tag: a
2016-07-21 21:01:58,104 htmlparser.py[line: 25] INFO: End tag: a
2016-07-21 21:01:58,104 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,104 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:58,104 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:58,104 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:58,104 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 21:01:58,104 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:58,105 htmlparser.py[line: 28] INFO: Data 		
		
2016-07-21 21:01:58,105 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:58,105 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:58,105 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:58,105 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,105 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:58,105 htmlparser.py[line: 28] INFO: Data 
					接口-测试商品1
				
2016-07-21 21:01:58,105 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:58,105 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,106 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:58,106 htmlparser.py[line: 28] INFO: Data 
					接口测试专用,烦请勿删,勿操作
				
2016-07-21 21:01:58,106 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:58,106 htmlparser.py[line: 28] INFO: Data 				
				
2016-07-21 21:01:58,106 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:58,106 htmlparser.py[line: 28] INFO: Data 
					单价:
					
2016-07-21 21:01:58,106 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:58,106 htmlparser.py[line: 28] INFO: Data 
					
					
						
							￥0.01
						
						
					
					
					
2016-07-21 21:01:58,106 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:58,107 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 21:01:58,107 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:58,107 htmlparser.py[line: 28] INFO: Data 销量:13件
2016-07-21 21:01:58,107 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:58,107 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,107 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:58,107 htmlparser.py[line: 28] INFO: Data 
				
					
2016-07-21 21:01:58,108 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:58,108 htmlparser.py[line: 28] INFO: Data 运费:
2016-07-21 21:01:58,108 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:58,108 htmlparser.py[line: 28] INFO: Data 4.00元
2016-07-21 21:01:58,108 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:58,108 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:58,108 htmlparser.py[line: 28] INFO: Data 
				
				
				
2016-07-21 21:01:58,108 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:58,108 htmlparser.py[line: 28] INFO: Data 
					数量:
2016-07-21 21:01:58,108 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:58,109 htmlparser.py[line: 28] INFO: Data -
2016-07-21 21:01:58,109 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:58,109 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:58,109 htmlparser.py[line: 28] INFO: Data 1
2016-07-21 21:01:58,109 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:58,109 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:58,109 htmlparser.py[line: 28] INFO: Data +
2016-07-21 21:01:58,109 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:58,109 htmlparser.py[line: 28] INFO: Data 
					
						
						
							
2016-07-21 21:01:58,110 htmlparser.py[line: 19] INFO: Start tag: span
2016-07-21 21:01:58,110 htmlparser.py[line: 28] INFO: Data (库存：999987件)
2016-07-21 21:01:58,110 htmlparser.py[line: 25] INFO: End tag: span
2016-07-21 21:01:58,110 htmlparser.py[line: 28] INFO: Data 
						
						
						
					
				
2016-07-21 21:01:58,110 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:58,110 htmlparser.py[line: 28] INFO: Data  
				
2016-07-21 21:01:58,111 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:58,111 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 21:01:58,111 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 21:01:58,111 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 21:01:58,111 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 21:01:58,111 htmlparser.py[line: 19] INFO: Start tag: input
2016-07-21 21:01:58,111 htmlparser.py[line: 25] INFO: End tag: input
2016-07-21 21:01:58,111 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,111 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:58,112 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:58,112 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:58,112 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:58,112 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:58,112 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,112 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:58,112 htmlparser.py[line: 28] INFO: Data 图文详情
2016-07-21 21:01:58,112 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 21:01:58,112 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:58,113 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,113 htmlparser.py[line: 19] INFO: Start tag: div
2016-07-21 21:01:58,113 htmlparser.py[line: 28] INFO: Data 
					
2016-07-21 21:01:58,113 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:58,113 htmlparser.py[line: 28] INFO: Data 											
2016-07-21 21:01:58,113 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:58,113 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:58,113 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 21:01:58,113 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 21:01:58,113 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:58,114 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:58,114 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 21:01:58,114 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 21:01:58,114 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:58,114 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:58,114 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 21:01:58,114 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 21:01:58,114 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:58,114 htmlparser.py[line: 19] INFO: Start tag: p
2016-07-21 21:01:58,114 htmlparser.py[line: 28] INFO: Data 接口测试专用商品,商品详情简介
2016-07-21 21:01:58,115 htmlparser.py[line: 19] INFO: Start tag: br
2016-07-21 21:01:58,115 htmlparser.py[line: 25] INFO: End tag: br
2016-07-21 21:01:58,115 htmlparser.py[line: 25] INFO: End tag: p
2016-07-21 21:01:58,115 htmlparser.py[line: 28] INFO: Data 
				
2016-07-21 21:01:58,115 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:58,115 htmlparser.py[line: 28] INFO: Data 
			
2016-07-21 21:01:58,115 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:58,115 htmlparser.py[line: 28] INFO: Data 
		
2016-07-21 21:01:58,115 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:58,115 htmlparser.py[line: 28] INFO: Data 		
	
2016-07-21 21:01:58,115 htmlparser.py[line: 25] INFO: End tag: div
2016-07-21 21:01:58,116 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:58,116 htmlparser.py[line: 19] INFO: Start tag: img
2016-07-21 21:01:58,116 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:58,116 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:58,116 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:58,116 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 21:01:58,116 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:58,116 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:58,116 htmlparser.py[line: 28] INFO: Data 
    
2016-07-21 21:01:58,116 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:58,117 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:58,117 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:58,117 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:58,117 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:58,117 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:58,117 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:58,118 htmlparser.py[line: 28] INFO: Data 
			
	var priceLimita = $(".orange").text();
	var soldCounta = $("#soldCount").text();
	var skua = $(".standard_sku").text();
	
            // 滚动窗口来判断按钮显示或隐藏
            $(window).scroll(function() {
                if ($(this).scrollTop() > 120) {
                    $('.top-bg').show(100);
                } else {
                    $('.top-bg').hide(100);
                }
            });
            
            function choose(obj,price,sku,standardSoldCount){
            	if(!$(obj).attr('disabled')){
            	if($(obj).hasClass('active')){
            		$(".orange").text(priceLimita);
                	$("#soldCount").text(soldCounta);
                	$(".standard_sku").text(skua);
                	 $(obj).removeClass('active');
            	}else{
	            	$(".standard_sku").text("(库存:"+sku+"件)");
	            	$(".orange").text("￥"+price);
	            	$("#soldCount").text("销量:"+standardSoldCount+"件");
	            	$(".spec").removeClass('active');
                    $(obj).addClass('active');
            	}
            	}
            }
            
           
            
            $(function(){
            	/* $(".spec").tap(function(){
                    if(!$(this).attr('disabled')){
                        if($(this).hasClass('active')){
                            $(this).removeClass('active');
                            
                        }else{
                        	
                        }
                    }                    
                }); */
                
            	TouchSlide({
    				slideCell : "#slideBox",
    				mainCell : ".bd ul",
    				effect : "leftLoop",
    				pageStateCell : ".pageState"
    			});            	            	
				
            	$(".bottom-details img").width($(".top").width());
            });
            
            // jQuery实现动画滚动
            $('.top-bg').click(function(event) {
                event.preventDefault();
                $('html, body').scrollTop(0);
            });
			
			$(".bottom > p img").click(function(){
                $(this).parent().next().toggle();
                if($(this).parent().next().css("display")=="block"){
                    $(this).attr("src","/images/mall/down.png");
                }else{
                    $(this).attr("src","/images/mall/up.png");
                }
            });
            
            $(".jia").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count)) {
                	count = 1;
                } else {
                	count += 1;
                }
                val.text(count);
            });
            $(".jian").click(function(){
            	var val = $(this).siblings(".val");
            	var count = parseInt(val.text());
                if (isNaN(count) || count <= 1) {
                	count = 1;
                } else {
                	count -= 1;
                }
                val.text(count);
            });
            
            $(".addbtn").click(function(event){
            	if($(this).prop("disabled") == true)
            		return false;
            	var params = {
   					mallGoodsId : "26838",
   					standardId : standardId,
   					amount : $(".val").text(),
   					serial : "10549840601068216320",
   					openId : "ous64uFCCLMyXYDJ-MkNilyCI5CY2"
   				};
            	
            	var standard = 1;
            	if(standard == 2 && $(".active").length < 1){
    				doAlert("no", "请选择商品的规格");
    				return;
    			}
            	if(standard == 2){
            		var standardId = $(".active").attr("data");
    				params.standardId = standardId;
            	}
            	$.post("/addtocart", params, function(result){
            		if (null == result || !result.success) {
            			toast(result.message);
    					return;
    				}
    				//更新购物车数量
    				/* var cartNum = $(".cartNum").text();
    				if (null == cartNum || "" == cartNum || typeof (cartNum) == undefined) {
    					$(".carts").append("<span class='cartNum'>1</span>");
    				} else {
    					if (null != result.attach && result.attach > 0) {
    						$(".cartNum").text(result.attach);
    					}
    				} */
    				toast("已经成功加入购物车");
            	});
            });
		$(".buybtn").click(function(event) {
			if($(this).prop("disabled") == true)
        		return false;
			$(this).attr("disabled","disabled");
			var standard = 1;
        	if(standard == 2 && $(".active").length < 1){
				doAlert("no", "请选择商品的规格");
				$(this).removeAttr("disabled");
				return;
        	}
        	if(standard == 2){
        		var standardId = $(".active").attr("data");
        		window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320&standardId="+standardId;
        		return;
        	}
			window.location.href = "/mall/tobuy/1?mallGoodsId=26838&amount=" + $(".val").text() + "&type=1&serial=10549840601068216320";
		});
	
2016-07-21 21:01:58,118 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:58,118 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,118 htmlparser.py[line: 25] INFO: End tag: body
2016-07-21 21:01:58,118 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,118 htmlparser.py[line: 25] INFO: End tag: html
2016-07-21 21:01:58,118 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,119 htmlparser.py[line: 28] INFO: Data 
  	
	
2016-07-21 21:01:58,119 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:58,119 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:58,119 htmlparser.py[line: 28] INFO: Data 
	
2016-07-21 21:01:58,119 htmlparser.py[line: 19] INFO: Start tag: script
2016-07-21 21:01:58,119 htmlparser.py[line: 28] INFO: Data 
		$(function() {
			//var SHOP_SERIAL = getCookie("SHOP_SERIAL");
			var SHOP_SERIAL = "10549840601068216320";
			if(null != SHOP_SERIAL && SHOP_SERIAL != ""){
				$.ajax({
					url : '/saofu_mobile/checkUserBindStatus',
					data : {
						"serial" : SHOP_SERIAL
					},
					type : 'post',
					cache : false,
					dataType : 'json',
					success : function(data) {
						if (data != null) {
							var guildFocusStr = data.guildFocusStr;
							if(guildFocusStr != null && guildFocusStr == "1"){
								var hasBindedShop = data.hasBindedShop;
								if(hasBindedShop == "0"){
									var qrName = data.QRPublicName;
									var qrUrl = data.QRCodeURL;
									if(qrName != "" && qrUrl != ""){
										var params = qrName+"**"+qrUrl;
										followModule(params);
									}
								}
							}
						} 
					},
					error : function() {
					}
				});
			}
		});
				
	
2016-07-21 21:01:58,119 htmlparser.py[line: 25] INFO: End tag: script
2016-07-21 21:01:58,119 htmlparser.py[line: 28] INFO: Data 

2016-07-21 21:01:58,119 mydb.py[line: 77] INFO: query：SELECT name FROM mall_goods WHERE id=%s  data：(26838,)
2016-07-21 21:01:58,122 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 21:01:58,123 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 21:01:57" WHERE executed_history_id = 20160721210154 AND testcase_id = 80 AND step_id = 82 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:01:58,125 testcase.py[line: 101] INFO: 测试用例[id=80, name=test-n-点击商品]执行成功
2016-07-21 21:01:58,126 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-07-21 21:01:58,126 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 21:01:57" WHERE executed_history_id = 20160721210154 AND testcase_id = 80 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:01:58,284 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=74, bulid_version=v1.0.0],对应用例[testcase_id=80]的执行结果
2016-07-21 21:01:58,756 testplan.py[line: 57] INFO: 记录测试用例到测试用例报表
2016-07-21 21:01:58,756 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721210154', 76, 'test-n-显示默认页面', '微商城-显示商品列表接口', 'plan1_of_wecharno', 'pj_wecharno', 'Block', '')
2016-07-21 21:01:58,759 testplan.py[line: 60] INFO: 开始执行测试用例[id=76，name=test-n-显示默认页面]
2016-07-21 21:01:58,760 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 21:01:58,760 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721210154', 76, 'test-n-显示默认页面', 'plan1_of_wecharno', 'pj_wecharno', 78, 1, '', 'http', 'm.test.saofu.cn', 80, '{"class":"PList","function":"test_plist_default","method":"post","url":"/goods/plist","params":{"page_size":"10","page_no":"1","cateIds":"","orderBy":"","serial":"var","name":""}}', '{"currentPage":1,"pageSize":10,"pageStartRow":0,"pagination":"True","totalPages":"var","totalRows":"var","goodsinfo":[{"id": 26838,"name": "接口-测试商品1","price": 1,"description": "接口测试专用,烦请勿删,勿操作","iconUrl": "http://res.test.saofu.cn/saofu/upload/image/2016/07/18/352c9a44-5fe7-4546-9786-563d8700a773.jpg","skuQuantity":"var","standard": 1},{"id": 26839,"name": "接口-测试商品2","price": 0,"description": "接口测试专用,勿动","iconUrl": "http://res.test.saofu.cn/saofu/upload/image/2016/07/18/2c2ebeef-8d4f-483f-8ff4-ebcd5d209bb7.jpg","skuQuantity":"var","standard": 2}]}', 'Block', '', '')
2016-07-21 21:01:58,762 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 21:01:58,763 casestep.py[line: 64] INFO: 调用的方法为：PList.test_plist_default
2016-07-21 21:01:58,763 wechatno_wemall.py[line: 29] INFO: 正在发起POST请求...
2016-07-21 21:01:58,763 httpprotocol.py[line: 68] INFO: 发起的请求为：http://m.test.saofu.cn:80/goods/plist
2016-07-21 21:01:58,835 wechatno_wemall.py[line: 38] INFO: 正在解析返回结果:{'pageInfo': {'pagination': True, 'pageSize': 10, 'hasPreviousPage': False, 'hasNextPage': False, 'totalRows': 5, 'totalPages': 1, 'params': None, 'pageEndRow': 5, 'pageStartRow': 0, 'currentPage': 1}, 'dataList': [{'baiduSyncStatus': None, 'hasActivity': 0, 'price': 1000, 'iconUrl': 'http://res.test.saofu.cn/saofu/upload/image/2016/04/25/bef60928-a428-4dde-85b1-17fff4005959.jpg', 'shop': {'fullName': None, 'thirdAppId': None, 'printAdUrl': None, 'logoUrl': None, 'printAdText': None, 'id': 42, 'createTime': None, 'serial': None, 'email': None, 'phoneNumber': None, 'name': None, 'suffixShop': None, 'parent': None}, 'skuQuantity': 2, 'standardLowPrice': 0.0, 'status': 1, 'rules': None, 'standardAllSku': None, 'mallGoodsCatagoryId': None, 'servicePhone': None, 'business': None, 'expirTime': None, 'mallGoodsCate': {'orderNum': None, 'oldName': None, 'name': None, 'shop': None, 'goodsAmount': 0, 'id': 260, 'delFlag': None, 'branchId': None, 'goodsSoldOutAmount': 0}, 'relType': None, 'transientPrice': 0.0, 'istop': 0, 'cwId': None, 'outerId': None, 'useTime': None, 'standardTopPrice': 0.0, 'waimaiChannel': None, 'name': '插线板更名后', 'soldAllCount': 272, 'soldCount': 266, 'detail': None, 'isSku': 0, 'cateName': None, 'syncStatus': 0, 'branch': None, 'id': 26189, 'description': '100', 'createTime': None, 'cateId': 0, 'meituanSyncStatus': None, 'dishCount': None, 'elemeSyncStatus': None, 'shopId': None, 'lunchBoxCount': None, 'preRemind': None, 'transientOriPrice': 0.0, 'standard': 1, 'delFlag': None, 'relBranchList': None, 'cannotUseTime': None, 'goodsCopyId': None, 'rank': None, 'oriPrice': 0, 'mallGoodsStandards': None}, {'baiduSyncStatus': None, 'hasActivity': 0, 'price': 100000000, 'iconUrl': 'http://res.test.saofu.cn/saofu/upload/image/2016/04/25/7a59f0ca-ccb6-41ec-a1ab-27a854237d2f.jpg', 'shop': {'fullName': None, 'thirdAppId': None, 'printAdUrl': None, 'logoUrl': None, 'printAdText': None, 'id': 42, 'createTime': None, 'serial': None, 'email': None, 'phoneNumber': None, 'name': None, 'suffixShop': None, 'parent': None}, 'skuQuantity': 9265757, 'standardLowPrice': 0.0, 'status': 1, 'rules': None, 'standardAllSku': None, 'mallGoodsCatagoryId': None, 'servicePhone': None, 'business': None, 'expirTime': None, 'mallGoodsCate': {'orderNum': None, 'oldName': None, 'name': None, 'shop': None, 'goodsAmount': 0, 'id': 260, 'delFlag': None, 'branchId': None, 'goodsSoldOutAmount': 0}, 'relType': None, 'transientPrice': 0.0, 'istop': 0, 'cwId': None, 'outerId': None, 'useTime': None, 'standardTopPrice': 0.0, 'waimaiChannel': None, 'name': '水淀粉', 'soldAllCount': 74, 'soldCount': 74, 'detail': None, 'isSku': 0, 'cateName': None, 'syncStatus': 0, 'branch': None, 'id': 26188, 'description': '阿斯达', 'createTime': None, 'cateId': 0, 'meituanSyncStatus': None, 'dishCount': None, 'elemeSyncStatus': None, 'shopId': None, 'lunchBoxCount': None, 'preRemind': None, 'transientOriPrice': 0.0, 'standard': 1, 'delFlag': None, 'relBranchList': None, 'cannotUseTime': None, 'goodsCopyId': None, 'rank': None, 'oriPrice': 0, 'mallGoodsStandards': None}, {'baiduSyncStatus': None, 'hasActivity': 0, 'price': 0, 'iconUrl': 'http://res.test.saofu.cn/saofu/upload/image/2016/07/18/2c2ebeef-8d4f-483f-8ff4-ebcd5d209bb7.jpg', 'shop': {'fullName': None, 'thirdAppId': None, 'printAdUrl': None, 'logoUrl': None, 'printAdText': None, 'id': 42, 'createTime': None, 'serial': None, 'email': None, 'phoneNumber': None, 'name': None, 'suffixShop': None, 'parent': None}, 'skuQuantity': None, 'standardLowPrice': 0.01, 'status': 1, 'rules': None, 'standardAllSku': None, 'mallGoodsCatagoryId': None, 'servicePhone': None, 'business': None, 'expirTime': None, 'mallGoodsCate': {'orderNum': None, 'oldName': None, 'name': None, 'shop': None, 'goodsAmount': 0, 'id': 268, 'delFlag': None, 'branchId': None, 'goodsSoldOutAmount': 0}, 'relType': None, 'transientPrice': 0.0, 'istop': 0, 'cwId': None, 'outerId': None, 'useTime': None, 'standardTopPrice': 0.0, 'waimaiChannel': None, 'name': '接口-测试商品2', 'soldAllCount': 35, 'soldCount': 0, 'detail': None, 'isSku': 0, 'cateName': None, 'syncStatus': 0, 'branch': None, 'id': 26839, 'description': '接口测试专用,勿动', 'createTime': None, 'cateId': 0, 'meituanSyncStatus': None, 'dishCount': None, 'elemeSyncStatus': None, 'shopId': None, 'lunchBoxCount': None, 'preRemind': None, 'transientOriPrice': 0.0, 'standard': 2, 'delFlag': None, 'relBranchList': None, 'cannotUseTime': None, 'goodsCopyId': None, 'rank': None, 'oriPrice': 0, 'mallGoodsStandards': None}, {'baiduSyncStatus': None, 'hasActivity': 0, 'price': 1, 'iconUrl': 'http://res.test.saofu.cn/saofu/upload/image/2016/07/18/352c9a44-5fe7-4546-9786-563d8700a773.jpg', 'shop': {'fullName': None, 'thirdAppId': None, 'printAdUrl': None, 'logoUrl': None, 'printAdText': None, 'id': 42, 'createTime': None, 'serial': None, 'email': None, 'phoneNumber': None, 'name': None, 'suffixShop': None, 'parent': None}, 'skuQuantity': 999987, 'standardLowPrice': 0.0, 'status': 1, 'rules': None, 'standardAllSku': None, 'mallGoodsCatagoryId': None, 'servicePhone': None, 'business': None, 'expirTime': None, 'mallGoodsCate': {'orderNum': None, 'oldName': None, 'name': None, 'shop': None, 'goodsAmount': 0, 'id': 268, 'delFlag': None, 'branchId': None, 'goodsSoldOutAmount': 0}, 'relType': None, 'transientPrice': 0.0, 'istop': 0, 'cwId': None, 'outerId': None, 'useTime': None, 'standardTopPrice': 0.0, 'waimaiChannel': None, 'name': '接口-测试商品1', 'soldAllCount': 13, 'soldCount': 13, 'detail': None, 'isSku': 0, 'cateName': None, 'syncStatus': 0, 'branch': None, 'id': 26838, 'description': '接口测试专用,烦请勿删,勿操作', 'createTime': None, 'cateId': 0, 'meituanSyncStatus': None, 'dishCount': None, 'elemeSyncStatus': None, 'shopId': None, 'lunchBoxCount': None, 'preRemind': None, 'transientOriPrice': 0.0, 'standard': 1, 'delFlag': None, 'relBranchList': None, 'cannotUseTime': None, 'goodsCopyId': None, 'rank': None, 'oriPrice': 0, 'mallGoodsStandards': None}, {'baiduSyncStatus': None, 'hasActivity': 0, 'price': 0, 'iconUrl': 'http://res.test.saofu.cn/saofu/upload/file/2016/07/13/f99f5e55-d23c-4d73-980e-031b0e1643ea.png', 'shop': {'fullName': None, 'thirdAppId': None, 'printAdUrl': None, 'logoUrl': None, 'printAdText': None, 'id': 42, 'createTime': None, 'serial': None, 'email': None, 'phoneNumber': None, 'name': None, 'suffixShop': None, 'parent': None}, 'skuQuantity': None, 'standardLowPrice': 1.0, 'status': 1, 'rules': None, 'standardAllSku': None, 'mallGoodsCatagoryId': None, 'servicePhone': None, 'business': None, 'expirTime': None, 'mallGoodsCate': {'orderNum': None, 'oldName': None, 'name': None, 'shop': None, 'goodsAmount': 0, 'id': 259, 'delFlag': None, 'branchId': None, 'goodsSoldOutAmount': 0}, 'relType': None, 'transientPrice': 0.0, 'istop': 0, 'cwId': None, 'outerId': None, 'useTime': None, 'standardTopPrice': 0.0, 'waimaiChannel': None, 'name': '多规格冗余测试', 'soldAllCount': 9, 'soldCount': 0, 'detail': None, 'isSku': 0, 'cateName': None, 'syncStatus': 0, 'branch': None, 'id': 26836, 'description': '啊啊啊啊啊', 'createTime': None, 'cateId': 0, 'meituanSyncStatus': None, 'dishCount': None, 'elemeSyncStatus': None, 'shopId': None, 'lunchBoxCount': None, 'preRemind': None, 'transientOriPrice': 0.0, 'standard': 2, 'delFlag': None, 'relBranchList': None, 'cannotUseTime': None, 'goodsCopyId': None, 'rank': None, 'oriPrice': 0, 'mallGoodsStandards': None}]}
2016-07-21 21:01:58,836 mydb.py[line: 77] INFO: query：SELECT COUNT(*) FROM mall_goods AS mg JOIN mall_goods_cate AS mgc ON mg.cate_id=mgc.id JOIN template_cate AS tc ON tc.cate_id=mgc.id AND tc.template_id=1 AND tc.status=1 WHERE mg.shop_id=%s AND mg.del_flag=%s AND mg.status=%s AND mg.business_id NOT IN (%s, %s)  data：(42, 0, 1, 1, 2)
2016-07-21 21:01:58,850 mydb.py[line: 77] INFO: query：SELECT sku_quantity FROM mall_goods WHERE id=%s  data：(26838,)
2016-07-21 21:01:58,853 mydb.py[line: 77] INFO: query：SELECT sku_quantity FROM mall_goods WHERE id=%s  data：(26839,)
2016-07-21 21:01:58,856 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 21:01:58,856 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-07-21 21:01:58" WHERE executed_history_id = 20160721210154 AND testcase_id = 76 AND step_id = 78 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:01:58,859 testcase.py[line: 101] INFO: 测试用例[id=76, name=test-n-显示默认页面]执行成功
2016-07-21 21:01:58,859 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-07-21 21:01:58,860 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 21:01:58" WHERE executed_history_id = 20160721210154 AND testcase_id = 76 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:01:59,015 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=74, bulid_version=v1.0.0],对应用例[testcase_id=76]的执行结果
2016-07-21 21:01:59,399 testplan.py[line: 57] INFO: 记录测试用例到测试用例报表
2016-07-21 21:01:59,399 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721210154', 106, 'test-n-创建储值卡支付订单', '微商城-创建储值卡支付订单接口', 'plan1_of_wecharno', 'pj_wecharno', 'Block', '')
2016-07-21 21:01:59,400 testplan.py[line: 60] INFO: 开始执行测试用例[id=106，name=test-n-创建储值卡支付订单]
2016-07-21 21:01:59,401 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 21:01:59,401 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721210154', 106, 'test-n-创建储值卡支付订单', 'plan1_of_wecharno', 'pj_wecharno', 108, 1, '', 'http', 'm.test.saofu.cn', 80, '{"class":"CMOrder","function":"test_create_mall_order","method":"post","url":"/cmorder/1/4","params":{"serial":"var","openId":"var","fm":1,"mallGoodsId":"26838", "amount":1,"cartIds":"","fetchTime":"", "remark":""}}', '{"success":"True"}', 'Block', '', '')
2016-07-21 21:01:59,402 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 21:01:59,403 casestep.py[line: 64] INFO: 调用的方法为：CMOrder.test_create_mall_order
2016-07-21 21:01:59,403 wechatno_wemall.py[line: 260] INFO: 正在发起POST请求...
2016-07-21 21:01:59,403 httpprotocol.py[line: 68] INFO: 发起的请求为：http://m.test.saofu.cn:80/cmorder/1/4
2016-07-21 21:02:00,581 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 21:02:00,581 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-07-21 21:01:59" WHERE executed_history_id = 20160721210154 AND testcase_id = 106 AND step_id = 108 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:02:00,585 testcase.py[line: 101] INFO: 测试用例[id=106, name=test-n-创建储值卡支付订单]执行成功
2016-07-21 21:02:00,585 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-07-21 21:02:00,586 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 21:01:59" WHERE executed_history_id = 20160721210154 AND testcase_id = 106 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:02:00,807 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=74, bulid_version=v1.0.0],对应用例[testcase_id=106]的执行结果
2016-07-21 21:02:01,202 testplan.py[line: 57] INFO: 记录测试用例到测试用例报表
2016-07-21 21:02:01,202 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721210154', 93, 'test-n-把商品移出购物车', '微商城-把商品移出购物车接口', 'plan1_of_wecharno', 'pj_wecharno', 'Block', '')
2016-07-21 21:02:01,203 testplan.py[line: 60] INFO: 开始执行测试用例[id=93，name=test-n-把商品移出购物车]
2016-07-21 21:02:01,203 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 21:02:01,203 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721210154', 93, 'test-n-把商品移出购物车', 'plan1_of_wecharno', 'pj_wecharno', 95, 1, '', 'http', 'm.test.saofu.cn', 80, '{"class":"AddToCart","function":"test_add_to_cart","method":"post","url":"/addtocart","params":{"mallGoodsId":26838,"standardId":"undefined","amount":2,"serial":"var","openId":"var"}} ', '{"success":"True", "amount":2, "mall_goods_id":26838,"shop_id":"var", "closed":1}', 'Block', '', '')
2016-07-21 21:02:01,205 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 21:02:01,205 casestep.py[line: 64] INFO: 调用的方法为：AddToCart.test_add_to_cart
2016-07-21 21:02:01,205 mydb.py[line: 77] INFO: query：SELECT id FROM customer WHERE channel_serial=%s  data：('ous64uFCCLMyXYDJ-MkNilyCI5CY',)
2016-07-21 21:02:01,209 mydb.py[line: 63] INFO: query：UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = 6840 and closed=1
2016-07-21 21:02:01,361 mydb.py[line: 77] INFO: query：SELECT id FROM customer WHERE channel_serial=%s  data：('ous64uFCCLMyXYDJ-MkNilyCI5CY',)
2016-07-21 21:02:01,365 mydb.py[line: 77] INFO: query：SELECT id FROM shop WHERE serial=%s  data：('10549840601068216320',)
2016-07-21 21:02:01,369 wechatno_wemall.py[line: 151] INFO: 正在发起POST请求...
2016-07-21 21:02:01,369 httpprotocol.py[line: 68] INFO: 发起的请求为：http://m.test.saofu.cn:80/addtocart
2016-07-21 21:02:01,522 wechatno_wemall.py[line: 158] INFO: 正在解析返回结果:{'success': True, 'attach': None, 'message': None}
2016-07-21 21:02:01,523 mydb.py[line: 77] INFO: query：SELECT amount, mall_goods_id, shop_id, closed, id FROM mall_shopping_cart WHERE customer_id = %s and closed=%s ORDER BY id DESC LIMIT 1  data：(6840, 1)
2016-07-21 21:02:01,527 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 21:02:01,527 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-07-21 21:02:01" WHERE executed_history_id = 20160721210154 AND testcase_id = 93 AND step_id = 95 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:02:01,530 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 21:02:01,531 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721210154', 93, 'test-n-把商品移出购物车', 'plan1_of_wecharno', 'pj_wecharno', 96, 2, '', 'http', 'm.test.saofu.cn', 80, '{"class":"DelFromCart","function":"test_del_from_cart","method":"get","url":"/delfromcart?","params":{"strIds":"var","serial":"var"}}', '{"success":"True"}', 'Block', '', '')
2016-07-21 21:02:01,533 testcase.py[line: 60] INFO: 开始执行步骤操作[第2步]
2016-07-21 21:02:01,534 casestep.py[line: 64] INFO: 调用的方法为：DelFromCart.test_del_from_cart
2016-07-21 21:02:01,534 wechatno_wemall.py[line: 184] INFO: 正在发起POST请求...
2016-07-21 21:02:01,534 httpprotocol.py[line: 68] INFO: 发起的请求为：http://m.test.saofu.cn:80/delfromcart?
2016-07-21 21:02:01,848 wechatno_wemall.py[line: 191] INFO: 正在解析返回结果:{'success': True, 'attach': None, 'message': None}
2016-07-21 21:02:01,849 mydb.py[line: 77] INFO: query：SELECT amount, mall_goods_id, shop_id, closed, id FROM mall_shopping_cart WHERE id=%s  data：(15784,)
2016-07-21 21:02:01,853 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 21:02:01,853 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2016-07-21 21:02:01" WHERE executed_history_id = 20160721210154 AND testcase_id = 93 AND step_id = 96 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:02:01,862 testcase.py[line: 101] INFO: 测试用例[id=93, name=test-n-把商品移出购物车]执行成功
2016-07-21 21:02:01,862 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-07-21 21:02:01,863 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 21:02:01" WHERE executed_history_id = 20160721210154 AND testcase_id = 93 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:02:01,995 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=74, bulid_version=v1.0.0],对应用例[testcase_id=93]的执行结果
2016-07-21 21:02:02,376 testplan.py[line: 57] INFO: 记录测试用例到测试用例报表
2016-07-21 21:02:02,376 mydb.py[line: 50] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721210154', 88, 'test-n-把商品加入购物车', '微商城-把商品加入购物车接口', 'plan1_of_wecharno', 'pj_wecharno', 'Block', '')
2016-07-21 21:02:02,378 testplan.py[line: 60] INFO: 开始执行测试用例[id=88，name=test-n-把商品加入购物车]
2016-07-21 21:02:02,379 testcase.py[line: 48] INFO: 记录测试步骤到测试步骤报告表
2016-07-21 21:02:02,379 mydb.py[line: 50] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20160721210154', 88, 'test-n-把商品加入购物车', 'plan1_of_wecharno', 'pj_wecharno', 90, 1, '', 'http', 'm.test.saofu.cn', 80, '{"class":"AddToCart","function":"test_add_to_cart","method":"post","url":"/addtocart","params":{"mallGoodsId":26838,"standardId":"undefined","amount":2,"serial":"var","openId":"var"}}', '{"success":"True", "amount":2, "mall_goods_id":26838,"shop_id":42, "closed":1}', 'Block', '', '')
2016-07-21 21:02:02,380 testcase.py[line: 60] INFO: 开始执行步骤操作[第1步]
2016-07-21 21:02:02,380 casestep.py[line: 64] INFO: 调用的方法为：AddToCart.test_add_to_cart
2016-07-21 21:02:02,380 mydb.py[line: 77] INFO: query：SELECT id FROM customer WHERE channel_serial=%s  data：('ous64uFCCLMyXYDJ-MkNilyCI5CY',)
2016-07-21 21:02:02,384 mydb.py[line: 63] INFO: query：UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = 6840 and closed=1
2016-07-21 21:02:02,388 mydb.py[line: 77] INFO: query：SELECT id FROM customer WHERE channel_serial=%s  data：('ous64uFCCLMyXYDJ-MkNilyCI5CY',)
2016-07-21 21:02:02,391 mydb.py[line: 77] INFO: query：SELECT id FROM shop WHERE serial=%s  data：('10549840601068216320',)
2016-07-21 21:02:02,395 wechatno_wemall.py[line: 151] INFO: 正在发起POST请求...
2016-07-21 21:02:02,395 httpprotocol.py[line: 68] INFO: 发起的请求为：http://m.test.saofu.cn:80/addtocart
2016-07-21 21:02:02,550 wechatno_wemall.py[line: 158] INFO: 正在解析返回结果:{'success': True, 'attach': None, 'message': None}
2016-07-21 21:02:02,550 mydb.py[line: 77] INFO: query：SELECT amount, mall_goods_id, shop_id, closed, id FROM mall_shopping_cart WHERE customer_id = %s and closed=%s ORDER BY id DESC LIMIT 1  data：(6840, 1)
2016-07-21 21:02:02,556 testcase.py[line: 98] INFO: 正在更新步骤执行结果
2016-07-21 21:02:02,556 mydb.py[line: 63] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-07-21 21:02:02" WHERE executed_history_id = 20160721210154 AND testcase_id = 88 AND step_id = 90 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:02:02,568 testcase.py[line: 101] INFO: 测试用例[id=88, name=test-n-把商品加入购物车]执行成功
2016-07-21 21:02:02,569 testplan.py[line: 64] INFO: 正在更新用例执行结果
2016-07-21 21:02:02,569 mydb.py[line: 63] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-07-21 21:02:02" WHERE executed_history_id = 20160721210154 AND testcase_id = 88 AND project='pj_wecharno' AND testplan='plan1_of_wecharno'
2016-07-21 21:02:02,852 testplan.py[line: 75] INFO: 正在更新testlink上测试计划[testplan_id=74, bulid_version=v1.0.0],对应用例[testcase_id=88]的执行结果
2016-07-21 21:02:03,035 testplan.py[line: 85] INFO: 测试计划[project=pj_wecharno ,testplan=plan1_of_wecharno]已执行完
2016-07-21 21:02:03,035 main.py[line: 229] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-07-21 21:02:03,036 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-07-21 21:02:03,036 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20160721210154',)
2016-07-21 21:02:03,037 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-07-21 21:02:03,038 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20160721210154')
2016-07-21 21:02:03,039 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-07-21 21:02:03,039 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20160721210154')
2016-07-21 21:02:03,040 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-07-21 21:02:03,040 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20160721210154')
2016-07-21 21:02:03,041 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-07-21 21:02:03,041 mydb.py[line: 77] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20160721210154')
2016-07-21 21:02:03,042 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-07-21 21:02:03,042 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160721210154',)
2016-07-21 21:02:03,044 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_wecharno, testplan：plan1_of_wecharno]的测试用例执行结果
2016-07-21 21:02:03,045 mydb.py[line: 93] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s ORDER BY id ASC  data：('pj_wecharno', 'plan1_of_wecharno', '20160721210154')
2016-07-21 21:02:03,048 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_wecharno, testplan：plan1_of_wecharno]的测试用例运行结果到测试报告
2016-07-21 21:02:03,049 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-07-21 21:02:03,049 mydb.py[line: 93] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20160721210154',)
2016-07-21 21:02:03,051 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_wecharno, testplan：plan1_of_wecharno]已运行的测试用例
2016-07-21 21:02:03,051 mydb.py[line: 93] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_wecharno', 'plan1_of_wecharno', '20160721210154')
2016-07-21 21:02:03,053 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=98]步骤运行结果
2016-07-21 21:02:03,053 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', 'plan1_of_wecharno', 98, '20160721210154')
2016-07-21 21:02:03,055 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=102]步骤运行结果
2016-07-21 21:02:03,055 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', 'plan1_of_wecharno', 102, '20160721210154')
2016-07-21 21:02:03,057 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=80]步骤运行结果
2016-07-21 21:02:03,057 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', 'plan1_of_wecharno', 80, '20160721210154')
2016-07-21 21:02:03,059 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=76]步骤运行结果
2016-07-21 21:02:03,059 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', 'plan1_of_wecharno', 76, '20160721210154')
2016-07-21 21:02:03,061 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=106]步骤运行结果
2016-07-21 21:02:03,061 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', 'plan1_of_wecharno', 106, '20160721210154')
2016-07-21 21:02:03,063 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=93]步骤运行结果
2016-07-21 21:02:03,063 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', 'plan1_of_wecharno', 93, '20160721210154')
2016-07-21 21:02:03,066 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=88]步骤运行结果
2016-07-21 21:02:03,066 mydb.py[line: 93] INFO: query：SELECT step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, cstb.runresult, reason, cstb.runtime FROM case_step_report_tb AS cstb JOIN testcase_report_tb AS tstb ON cstb.testcase_id =  tstb.testcase_id AND cstb.project=tstb.project AND cstb.testplan=tstb.testplan AND cstb.executed_history_id = tstb.executed_history_id WHERE tstb.project= %s AND tstb.testplan=%s AND cstb.testcase_id=%s AND cstb.executed_history_id = %s  data：('pj_wecharno', 'plan1_of_wecharno', 88, '20160721210154')
2016-07-21 21:02:03,068 htmlreporter.py[line: 177] INFO: 正在设置测试报告结果文件名
2016-07-21 21:02:03,068 htmlreporter.py[line: 187] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20160721210154.html
2016-07-21 21:02:03,068 htmlreporter.py[line: 180] INFO: 正在生成测试报告
2016-07-21 21:02:03,070 main.py[line: 252] INFO: 生成测试报告成功
2016-07-21 21:02:04,321 main.py[line: 259] INFO: E:\\Projects\\report\\test_report20160721210154.html
2016-07-21 21:02:04,322 main.py[line: 262] INFO: 正在发送测试报告邮件...
2016-07-21 21:02:04,322 main.py[line: 266] INFO: 发送邮件成功
